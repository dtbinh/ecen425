 LINE  | ADDRESS  | HEX DUMP                  | ASSEMBLY
-------|----------|---------------------------|----------------------------
     1 |          |                           |         CPU     8086
     2 |          |                           |         ORG     0h
     3 |          |                           | InterruptVectorTable:
     4 |          |                           |         ; Internal x86 Interrupts:
     5 | 00000000 | 00000000                  |         dd      0 ; Reserved (Div err)  ; Int 00h
     6 | 00000004 | 00000000                  |         dd      0 ; Reserved (Step)     ; Int 01h
     7 | 00000008 | 00000000                  |         dd      0 ; Reserved (NMI)      ; Int 02h
     8 | 0000000C | 00000000                  |         dd      0 ; Reserved (Break)    ; Int 03h
     9 | 00000010 | 00000000                  |         dd      0 ; Reserved (Overflow) ; Int 04h
    10 | 00000014 | 00000000                  |         dd      0                       ; Int 05h
    11 | 00000018 | 00000000                  |         dd      0                       ; Int 06h
    12 | 0000001C | 00000000                  |         dd      0                       ; Int 07h
    13 |          |                           |         ; Hardware Interrupts:
    14 | 00000020 | [86080000]                |         dd      RESET 		; Reset     ; Int 08h (IRQ 0)
    15 | 00000024 | [B1080000]                |         dd      TICK 		; Tick      ; Int 09h (IRQ 1)
    16 | 00000028 | [DC080000]                |         dd      KEYBOARD 	; Keyboard  ; Int 0Ah (IRQ 2)
    17 | 0000002C | 00000000                  |         dd      0 ; Simptris Game Over  ; Int 0Bh (IRQ 3)
    18 | 00000030 | 00000000                  |         dd      0 ; Simptris New Piece  ; Int 0Ch (IRQ 4)
    19 | 00000034 | 00000000                  |         dd      0 ; Simptris Received   ; Int 0Dh (IRQ 5)
    20 | 00000038 | 00000000                  |         dd      0 ; Simptris Touchdown  ; Int 0Eh (IRQ 6)
    21 | 0000003C | 00000000                  |         dd      0 ; Simptris Clear      ; Int 0Fh (IRQ 7)
    22 |          |                           |         ; Software Interrupts:
    23 | 00000040 | 00000000                  |         dd      0 ; Reserved (PC BIOS)  ; Int 10h
    24 | 00000044 | 00000000                  |         dd      0                       ; Int 11h
    25 | 00000048 | 00000000                  |         dd      0                       ; Int 12h
    26 | 0000004C | 00000000                  |         dd      0                       ; Int 13h
    27 | 00000050 | 00000000                  |         dd      0                       ; Int 14h
    28 | 00000054 | 00000000                  |         dd      0                       ; Int 15h
    29 | 00000058 | 00000000                  |         dd      0                       ; Int 16h
    30 | 0000005C | 00000000                  |         dd      0                       ; Int 17h
    31 | 00000060 | 00000000                  |         dd      0                       ; Int 18h
    32 | 00000064 | 00000000                  |         dd      0                       ; Int 19h
    33 | 00000068 | 00000000                  |         dd      0                       ; Int 1Ah
    34 | 0000006C | 00000000                  |         dd      0                       ; Int 1Bh
    35 | 00000070 | 00000000                  |         dd      0                       ; Int 1Ch
    36 | 00000074 | 00000000                  |         dd      0                       ; Int 1Dh
    37 | 00000078 | 00000000                  |         dd      0                       ; Int 1Eh
    38 | 0000007C | 00000000                  |         dd      0                       ; Int 1Fh
    39 | 00000080 | [07090000]                |         dd      TRAP                    ; Int 20h
    40 | 00000084 | 00000000                  |         dd      0 ; Reserved (DOS)      ; Int 21h
    41 | 00000088 | 00000000                  |         dd      0 ; Simptris Services   ; Int 22h
    42 | 0000008C | 00000000                  |         dd      0                       ; Int 23h
    43 | 00000090 | 00000000                  |         dd      0                       ; Int 24h
    44 | 00000094 | 00000000                  |         dd      0                       ; Int 25h
    45 | 00000098 | 00000000                  |         dd      0                       ; Int 26h
    46 | 0000009C | 00000000                  |         dd      0                       ; Int 27h
    47 | 000000A0 | 00000000                  |         dd      0                       ; Int 28h
    48 | 000000A4 | 00000000                  |         dd      0                       ; Int 29h
    49 | 000000A8 | 00000000                  |         dd      0                       ; Int 2Ah
    50 | 000000AC | 00000000                  |         dd      0                       ; Int 2Bh
    51 | 000000B0 | 00000000                  |         dd      0                       ; Int 2Ch
    52 | 000000B4 | 00000000                  |         dd      0                       ; Int 2Dh
    53 | 000000B8 | 00000000                  |         dd      0                       ; Int 2Eh
    54 | 000000BC | 00000000                  |         dd      0                       ; Int 2Fh
    55 |          |                           | KeyBuffer:                              ; Address 0xC0
    56 | 000000C0 | 0000                      |         dw      0
    57 |          |                           | NewPieceType:                           ; Address 0xC2
    58 | 000000C2 | 0000                      |         dw      0
    59 |          |                           | NewPieceID:                             ; Address 0xC4
    60 | 000000C4 | 0000                      |         dw      0
    61 |          |                           | NewPieceOrientation:                    ; Address 0xC6
    62 | 000000C6 | 0000                      |         dw      0
    63 |          |                           | NewPieceColumn:                         ; Address 0xC8
    64 | 000000C8 | 0000                      |         dw      0
    65 |          |                           | TouchdownID:                            ; Address 0xCA
    66 | 000000CA | 0000                      | 	dw	0
    67 |          |                           | ScreenBitMap0:                          ; Address 0xCC
    68 | 000000CC | 0000                      |         dw      0
    69 |          |                           | ScreenBitMap1:
    70 | 000000CE | 0000                      |         dw      0
    71 |          |                           | ScreenBitMap2:
    72 | 000000D0 | 0000                      |         dw      0
    73 |          |                           | ScreenBitMap3:
    74 | 000000D2 | 0000                      |         dw      0
    75 |          |                           | ScreenBitMap4:
    76 | 000000D4 | 0000                      |         dw      0
    77 |          |                           | ScreenBitMap5:
    78 | 000000D6 | 0000                      |         dw      0
    79 | 000000D8 | 00<rept>                  | TIMES   100h-($-$$) db  0               ; Fill up to (but not including) address 100h with 0
    80 | 00000100 | E9D30F                    | 	jmp	main
    81 |          |                           | ; This file contains support routines for 32-bit on the 8086.
    82 |          |                           | ; It is intended for use code generated by the C86 compiler.
    83 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    84 |          |                           | SR_asldiv:			; l1 /= l2
    85 | 00000103 | 55                        | 	push	bp
    86 | 00000104 | 89E5                      | 	mov	bp,sp
    87 | 00000106 | 53                        | 	push	bx
    88 | 00000107 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
    89 | 0000010A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
    90 | 0000010D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
    91 | 00000110 | FF7702                    | 	push	word [bx+2]	; Push hi l1
    92 | 00000113 | FF37                      | 	push	word [bx]	; Push lo l1
    93 | 00000115 | E83D01                    | 	call	SR_ldiv
    94 | 00000118 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
    95 | 0000011B | 895702                    | 	mov	[bx+2],dx	; Store result
    96 | 0000011E | 8907                      | 	mov	[bx],ax
    97 | 00000120 | 5B                        | 	pop	bx
    98 | 00000121 | 5D                        | 	pop	bp
    99 | 00000122 | C3                        | 	ret
   100 |          |                           | SR_aslmod:			; l1 %= l2
   101 | 00000123 | 55                        | 	push	bp
   102 | 00000124 | 89E5                      | 	mov	bp,sp
   103 | 00000126 | 53                        | 	push	bx
   104 | 00000127 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   105 | 0000012A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   106 | 0000012D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   107 | 00000130 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   108 | 00000133 | FF37                      | 	push	word [bx]	; Push lo l1
   109 | 00000135 | E82C01                    | 	call	SR_lmod
   110 | 00000138 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   111 | 0000013B | 895702                    | 	mov	[bx+2],dx	; Store result
   112 | 0000013E | 8907                      | 	mov	[bx],ax
   113 | 00000140 | 5B                        | 	pop	bx
   114 | 00000141 | 5D                        | 	pop	bp
   115 | 00000142 | C3                        | 	ret
   116 |          |                           | SR_aslmul:			; l1 *= l2
   117 | 00000143 | 55                        | 	push	bp
   118 | 00000144 | 89E5                      | 	mov	bp,sp
   119 | 00000146 | 53                        | 	push	bx
   120 | 00000147 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   121 | 0000014A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   122 | 0000014D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   123 | 00000150 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   124 | 00000153 | FF37                      | 	push	word [bx]	; Push lo l1
   125 | 00000155 | E84002                    | 	call	SR_lmul
   126 | 00000158 | 83C408                    | 	add	sp,8
   127 | 0000015B | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   128 | 0000015E | 895702                    | 	mov	[bx+2],dx	; Store result
   129 | 00000161 | 8907                      | 	mov	[bx],ax
   130 | 00000163 | 5B                        | 	pop	bx
   131 | 00000164 | 5D                        | 	pop	bp
   132 | 00000165 | C3                        | 	ret
   133 |          |                           | SR_aslshl:			; l1 <<= l2
   134 | 00000166 | 55                        | 	push	bp
   135 | 00000167 | 89E5                      | 	mov	bp,sp
   136 | 00000169 | 53                        | 	push	bx
   137 | 0000016A | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   138 | 0000016D | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   139 | 00000170 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   140 | 00000173 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   141 | 00000176 | FF37                      | 	push	word [bx]	; Push lo l1
   142 | 00000178 | E88801                    | 	call	SR_lshl
   143 | 0000017B | 83C408                    | 	add	sp,8
   144 | 0000017E | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   145 | 00000181 | 895702                    | 	mov	[bx+2],dx	; Store result
   146 | 00000184 | 8907                      | 	mov	[bx],ax
   147 | 00000186 | 5B                        | 	pop	bx
   148 | 00000187 | 5D                        | 	pop	bp
   149 | 00000188 | C3                        | 	ret
   150 |          |                           | SR_aslshr:			; l1 >>= l2
   151 | 00000189 | 55                        | 	push	bp
   152 | 0000018A | 89E5                      | 	mov	bp,sp
   153 | 0000018C | 53                        | 	push	bx
   154 | 0000018D | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   155 | 00000190 | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   156 | 00000193 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   157 | 00000196 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   158 | 00000199 | FF37                      | 	push	word [bx]	; Push lo l1
   159 | 0000019B | E89701                    | 	call	SR_lshr
   160 | 0000019E | 83C408                    | 	add	sp,8
   161 | 000001A1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   162 | 000001A4 | 895702                    | 	mov	[bx+2],dx	; Store result
   163 | 000001A7 | 8907                      | 	mov	[bx],ax
   164 | 000001A9 | 5B                        | 	pop	bx
   165 | 000001AA | 5D                        | 	pop	bp
   166 | 000001AB | C3                        | 	ret
   167 |          |                           | 
   168 |          |                           | 
   169 |          |                           | SR_asuldiv:			; u1 /= u2
   170 | 000001AC | 55                        | 	push	bp
   171 | 000001AD | 89E5                      | 	mov	bp,sp
   172 | 000001AF | 53                        | 	push	bx
   173 | 000001B0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   174 | 000001B3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   175 | 000001B6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   176 | 000001B9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   177 | 000001BC | FF37                      | 	push	word [bx]	; Push lo u1
   178 | 000001BE | E89B00                    | 	call	SR_uldiv
   179 | 000001C1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   180 | 000001C4 | 895702                    | 	mov	[bx+2],dx	; Store result
   181 | 000001C7 | 8907                      | 	mov	[bx],ax
   182 | 000001C9 | 5B                        | 	pop	bx
   183 | 000001CA | 5D                        | 	pop	bp
   184 | 000001CB | C3                        | 	ret
   185 |          |                           | SR_asilmod:			; u1 %= u2
   186 | 000001CC | 55                        | 	push	bp
   187 | 000001CD | 89E5                      | 	mov	bp,sp
   188 | 000001CF | 53                        | 	push	bx
   189 | 000001D0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   190 | 000001D3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   191 | 000001D6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   192 | 000001D9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   193 | 000001DC | FF37                      | 	push	word [bx]	; Push lo u1
   194 | 000001DE | E88B00                    | 	call	SR_ilmod
   195 | 000001E1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   196 | 000001E4 | 895702                    | 	mov	[bx+2],dx	; Store result
   197 | 000001E7 | 8907                      | 	mov	[bx],ax
   198 | 000001E9 | 5B                        | 	pop	bx
   199 | 000001EA | 5D                        | 	pop	bp
   200 | 000001EB | C3                        | 	ret
   201 |          |                           | SR_asulmul:			; u1 *= u2
   202 | 000001EC | 55                        | 	push	bp
   203 | 000001ED | 89E5                      | 	mov	bp,sp
   204 | 000001EF | 53                        | 	push	bx
   205 | 000001F0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   206 | 000001F3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   207 | 000001F6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   208 | 000001F9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   209 | 000001FC | FF37                      | 	push	word [bx]	; Push lo u1
   210 | 000001FE | E89701                    | 	call	SR_ulmul
   211 | 00000201 | 83C408                    | 	add	sp,8
   212 | 00000204 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   213 | 00000207 | 895702                    | 	mov	[bx+2],dx	; Store result
   214 | 0000020A | 8907                      | 	mov	[bx],ax
   215 | 0000020C | 5B                        | 	pop	bx
   216 | 0000020D | 5D                        | 	pop	bp
   217 | 0000020E | C3                        | 	ret
   218 |          |                           | SR_asulshl:			; u1 << u2
   219 | 0000020F | 55                        | 	push	bp
   220 | 00000210 | 89E5                      | 	mov	bp,sp
   221 | 00000212 | 53                        | 	push	bx
   222 | 00000213 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   223 | 00000216 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   224 | 00000219 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   225 | 0000021C | FF7702                    | 	push	word [bx+2]	; Push hi u1
   226 | 0000021F | FF37                      | 	push	word [bx]	; Push lo u1
   227 | 00000221 | E8DF00                    | 	call	SR_ulshl
   228 | 00000224 | 83C408                    | 	add	sp,8
   229 | 00000227 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   230 | 0000022A | 895702                    | 	mov	[bx+2],dx	; Store result
   231 | 0000022D | 8907                      | 	mov	[bx],ax
   232 | 0000022F | 5B                        | 	pop	bx
   233 | 00000230 | 5D                        | 	pop	bp
   234 | 00000231 | C3                        | 	ret
   235 |          |                           | SR_asulshr:			; u1 >> u2
   236 | 00000232 | 55                        | 	push	bp
   237 | 00000233 | 89E5                      | 	mov	bp,sp
   238 | 00000235 | 53                        | 	push	bx
   239 | 00000236 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   240 | 00000239 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   241 | 0000023C | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   242 | 0000023F | FF7702                    | 	push	word [bx+2]	; Push hi u1
   243 | 00000242 | FF37                      | 	push	word [bx]	; Push lo u1
   244 | 00000244 | E81F01                    | 	call	SR_ulshr
   245 | 00000247 | 83C408                    | 	add	sp,8
   246 | 0000024A | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   247 | 0000024D | 895702                    | 	mov	[bx+2],dx	; Store result
   248 | 00000250 | 8907                      | 	mov	[bx],ax
   249 | 00000252 | 5B                        | 	pop	bx
   250 | 00000253 | 5D                        | 	pop	bp
   251 | 00000254 | C3                        | 	ret
   252 |          |                           | 
   253 |          |                           | 
   254 |          |                           | ; Main 32-bit routines begin here:
   255 |          |                           | 
   256 |          |                           | SR_ldiv:	; N_LDIV@
   257 | 00000255 | 59                        | 	pop    cx
   258 | 00000256 | 0E                        | 	push   cs
   259 | 00000257 | 51                        | 	push   cx
   260 |          |                           | 	; LDIV@
   261 | 00000258 | 31C9                      | 	xor    cx,cx
   262 | 0000025A | EB16                      | 	jmp    LSR_01
   263 |          |                           | SR_uldiv:	; N_LUDIV@
   264 | 0000025C | 59                        | 	pop    cx
   265 | 0000025D | 0E                        | 	push   cs
   266 | 0000025E | 51                        | 	push   cx
   267 |          |                           | 	; F_LUDIV@
   268 | 0000025F | B90100                    | 	mov    cx,0001
   269 | 00000262 | EB0E                      | 	jmp    LSR_01
   270 |          |                           | SR_lmod:	; N_LMOD@
   271 | 00000264 | 59                        | 	pop    cx
   272 | 00000265 | 0E                        | 	push   cs
   273 | 00000266 | 51                        | 	push   cx
   274 |          |                           | 	; F_LMOD@
   275 | 00000267 | B90200                    | 	mov    cx,0002
   276 | 0000026A | EB06                      | 	jmp    LSR_01
   277 |          |                           | SR_ilmod:	; N_LUMOD@
   278 | 0000026C | 59                        | 	pop    cx
   279 | 0000026D | 0E                        | 	push   cs
   280 | 0000026E | 51                        | 	push   cx
   281 |          |                           | 	; LUMOD@
   282 | 0000026F | B90300                    | 	mov    cx,0003
   283 |          |                           | LSR_01:
   284 | 00000272 | 55                        | 	push   bp
   285 | 00000273 | 56                        | 	push   si
   286 | 00000274 | 57                        | 	push   di
   287 | 00000275 | 89E5                      | 	mov    bp,sp
   288 | 00000277 | 89CF                      | 	mov    di,cx
   289 | 00000279 | 8B460A                    | 	mov    ax,[bp+0Ah]
   290 | 0000027C | 8B560C                    | 	mov    dx,[bp+0Ch]
   291 | 0000027F | 8B5E0E                    | 	mov    bx,[bp+0Eh]
   292 | 00000282 | 8B4E10                    | 	mov    cx,[bp+10h]
   293 | 00000285 | 09C9                      | 	or     cx,cx
   294 | 00000287 | 7508                      | 	jne    LSR_02
   295 | 00000289 | 09D2                      | 	or     dx,dx
   296 | 0000028B | 7469                      | 	je     LSR_10
   297 | 0000028D | 09DB                      | 	or     bx,bx
   298 | 0000028F | 7465                      | 	je     LSR_10
   299 |          |                           | LSR_02:
   300 | 00000291 | F7C70100                  | 	test   di,0001
   301 | 00000295 | 751C                      | 	jne    LSR_04
   302 | 00000297 | 09D2                      | 	or     dx,dx
   303 | 00000299 | 790A                      | 	jns    LSR_03
   304 | 0000029B | F7DA                      | 	neg    dx
   305 | 0000029D | F7D8                      | 	neg    ax
   306 | 0000029F | 83DA00                    | 	sbb    dx,0000
   307 | 000002A2 | 83CF0C                    | 	or     di,000Ch
   308 |          |                           | LSR_03:
   309 | 000002A5 | 09C9                      | 	or     cx,cx
   310 | 000002A7 | 790A                      | 	jns    LSR_04
   311 | 000002A9 | F7D9                      | 	neg    cx
   312 | 000002AB | F7DB                      | 	neg    bx
   313 | 000002AD | 83D900                    | 	sbb    cx,0000
   314 | 000002B0 | 83F704                    | 	xor    di,0004
   315 |          |                           | LSR_04:
   316 | 000002B3 | 89CD                      | 	mov    bp,cx
   317 | 000002B5 | B92000                    | 	mov    cx,0020h
   318 | 000002B8 | 57                        | 	push   di
   319 | 000002B9 | 31FF                      | 	xor    di,di
   320 | 000002BB | 31F6                      | 	xor    si,si
   321 |          |                           | LSR_05:
   322 | 000002BD | D1E0                      | 	shl    ax,1
   323 | 000002BF | D1D2                      | 	rcl    dx,1
   324 | 000002C1 | D1D6                      | 	rcl    si,1
   325 | 000002C3 | D1D7                      | 	rcl    di,1
   326 | 000002C5 | 39EF                      | 	cmp    di,bp
   327 | 000002C7 | 720B                      | 	jb     LSR_07
   328 | 000002C9 | 7704                      | 	ja     LSR_06
   329 | 000002CB | 39DE                      | 	cmp    si,bx
   330 | 000002CD | 7205                      | 	jb     LSR_07
   331 |          |                           | LSR_06:
   332 | 000002CF | 29DE                      | 	sub    si,bx
   333 | 000002D1 | 19EF                      | 	sbb    di,bp
   334 | 000002D3 | 40                        | 	inc    ax
   335 |          |                           | LSR_07:
   336 | 000002D4 | E2E7                      | 	loop   LSR_05
   337 | 000002D6 | 5B                        | 	pop    bx
   338 | 000002D7 | F7C30200                  | 	test   bx,0002
   339 | 000002DB | 7406                      | 	je     LSR_08
   340 | 000002DD | 89F0                      | 	mov    ax,si
   341 | 000002DF | 89FA                      | 	mov    dx,di
   342 | 000002E1 | D1EB                      | 	shr    bx,1
   343 |          |                           | LSR_08:
   344 | 000002E3 | F7C30400                  | 	test   bx,0004h
   345 | 000002E7 | 7407                      | 	je     LSR_09
   346 | 000002E9 | F7DA                      | 	neg    dx
   347 | 000002EB | F7D8                      | 	neg    ax
   348 | 000002ED | 83DA00                    | 	sbb    dx,0000
   349 |          |                           | LSR_09:
   350 | 000002F0 | 5F                        | 	pop    di
   351 | 000002F1 | 5E                        | 	pop    si
   352 | 000002F2 | 5D                        | 	pop    bp
   353 | 000002F3 | CA0800                    | 	retf   0008
   354 |          |                           | LSR_10:
   355 | 000002F6 | F7F3                      | 	div    bx
   356 | 000002F8 | F7C70200                  | 	test   di,0002
   357 | 000002FC | 7401                      | 	je     LSR_11
   358 | 000002FE | 92                        | 	xchg   dx,ax
   359 |          |                           | LSR_11:
   360 | 000002FF | 31D2                      | 	xor    dx,dx
   361 | 00000301 | EBED                      | 	jmp    LSR_09
   362 |          |                           | SR_lshl:	; N_LXLSH@
   363 |          |                           | SR_ulshl:
   364 |          |                           | 	; r = a << b
   365 | 00000303 | 5B                        | 	pop    bx
   366 | 00000304 | 0E                        | 	push   cs
   367 | 00000305 | 53                        | 	push   bx
   368 |          |                           | 
   369 | 00000306 | 55                        | 	push   bp
   370 | 00000307 | 89E5                      | 	mov    bp,sp
   371 |          |                           | 
   372 | 00000309 | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   373 |          |                           | 
   374 | 0000030A | 8B4606                    | 	mov    ax, [bp+6]	; pop loword(a)
   375 | 0000030D | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   376 | 00000310 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   377 |          |                           | 	
   378 |          |                           | 	; LXLSH@
   379 | 00000313 | 80F910                    | 	cmp    cl,10h
   380 | 00000316 | 7312                      | 	jnb    LSR_12
   381 | 00000318 | 89C3                      | 	mov    bx,ax
   382 | 0000031A | D3E0                      | 	shl    ax,cl
   383 | 0000031C | D3E2                      | 	shl    dx,cl
   384 | 0000031E | F6D9                      | 	neg    cl
   385 | 00000320 | 80C110                    | 	add    cl,10h
   386 | 00000323 | D3EB                      | 	shr    bx,cl
   387 | 00000325 | 09DA                      | 	or     dx,bx
   388 | 00000327 | 59                        | 	pop    cx
   389 | 00000328 | 5D                        | 	pop    bp
   390 | 00000329 | CB                        | 	retf
   391 |          |                           | LSR_12:
   392 | 0000032A | 80E910                    | 	sub    cl,10h
   393 | 0000032D | 92                        | 	xchg   dx,ax
   394 | 0000032E | 31C0                      | 	xor    ax,ax
   395 | 00000330 | D3E2                      | 	shl    dx,cl
   396 | 00000332 | 59                        | 	pop    cx
   397 | 00000333 | 5D                        | 	pop    bp
   398 | 00000334 | CB                        | 	retf
   399 |          |                           | SR_lshr:	; N_LXRSH@
   400 |          |                           | 	; r = a >> b
   401 | 00000335 | 5B                        | 	pop    bx
   402 | 00000336 | 0E                        | 	push   cs
   403 | 00000337 | 53                        | 	push   bx
   404 |          |                           | 
   405 | 00000338 | 55                        | 	push   bp
   406 | 00000339 | 89E5                      | 	mov    bp,sp
   407 |          |                           | 
   408 | 0000033B | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   409 |          |                           | 
   410 | 0000033C | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   411 | 0000033F | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   412 | 00000342 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   413 |          |                           | 	
   414 |          |                           | 	; LXRSH@
   415 | 00000345 | 80F910                    | 	cmp    cl,10h
   416 | 00000348 | 7312                      | 	jnb    LSR_13
   417 | 0000034A | 89D3                      | 	mov    bx,dx
   418 | 0000034C | D3E8                      | 	shr    ax,cl
   419 | 0000034E | D3FA                      | 	sar    dx,cl
   420 | 00000350 | F6D9                      | 	neg    cl
   421 | 00000352 | 80C110                    | 	add    cl,10h
   422 | 00000355 | D3E3                      | 	shl    bx,cl
   423 | 00000357 | 09D8                      | 	or     ax,bx
   424 | 00000359 | 59                        | 	pop    cx
   425 | 0000035A | 5D                        | 	pop    bp
   426 | 0000035B | CB                        | 	retf
   427 |          |                           | LSR_13:
   428 | 0000035C | 80E910                    | 	sub    cl,10h
   429 | 0000035F | 92                        | 	xchg   dx,ax
   430 | 00000360 | 99                        | 	cwd
   431 | 00000361 | D3F8                      | 	sar    ax,cl
   432 | 00000363 | 59                        | 	pop    cx
   433 | 00000364 | 5D                        | 	pop    bp
   434 | 00000365 | CB                        | 	retf
   435 |          |                           | SR_ulshr:	; N_LXURSH@
   436 |          |                           | 	; r = a >> b
   437 | 00000366 | 5B                        | 	pop    bx
   438 | 00000367 | 0E                        | 	push   cs
   439 | 00000368 | 53                        | 	push   bx
   440 |          |                           | 
   441 | 00000369 | 55                        | 	push   bp
   442 | 0000036A | 89E5                      | 	mov    bp,sp
   443 |          |                           | 
   444 | 0000036C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   445 |          |                           | 
   446 | 0000036D | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   447 | 00000370 | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   448 | 00000373 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   449 |          |                           | 	
   450 |          |                           | 	; LXURSH@
   451 | 00000376 | 80F910                    | 	cmp    cl,10h
   452 | 00000379 | 7312                      | 	jnb    LSR_14
   453 | 0000037B | 89D3                      | 	mov    bx,dx
   454 | 0000037D | D3E8                      | 	shr    ax,cl
   455 | 0000037F | D3EA                      | 	shr    dx,cl
   456 | 00000381 | F6D9                      | 	neg    cl
   457 | 00000383 | 80C110                    | 	add    cl,10h
   458 | 00000386 | D3E3                      | 	shl    bx,cl
   459 | 00000388 | 09D8                      | 	or     ax,bx
   460 | 0000038A | 59                        | 	pop    cx
   461 | 0000038B | 5D                        | 	pop    bp
   462 | 0000038C | CB                        | 	retf
   463 |          |                           | LSR_14:
   464 | 0000038D | 80E910                    | 	sub    cl,10h
   465 | 00000390 | 92                        | 	xchg   dx,ax
   466 | 00000391 | 31D2                      | 	xor    dx,dx
   467 | 00000393 | D3E8                      | 	shr    ax,cl
   468 | 00000395 | 59                        | 	pop    cx
   469 | 00000396 | 5D                        | 	pop    bp
   470 | 00000397 | CB                        | 	retf
   471 |          |                           | SR_lmul:	; N_LXMUL@
   472 |          |                           | SR_ulmul:
   473 |          |                           | 	; r = a * b
   474 | 00000398 | 55                        | 	push   bp
   475 | 00000399 | 56                        | 	push   si
   476 | 0000039A | 89E5                      | 	mov    bp,sp
   477 |          |                           | 
   478 | 0000039C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   479 | 0000039D | 53                        | 	push   bx
   480 |          |                           | 
   481 | 0000039E | 8B5E06                    |         mov    bx, [bp+6]	; pop loword(a)
   482 | 000003A1 | 8B4E08                    | 	mov    cx, [bp+8]	; pop hiword(a)
   483 | 000003A4 | 8B460A                    | 	mov    ax, [bp+10]	; pop loword(b)
   484 | 000003A7 | 8B560C                    | 	mov    dx, [bp+12]	; pop hiword(b)
   485 |          |                           | 	
   486 | 000003AA | 96                        | 	xchg   si,ax
   487 | 000003AB | 92                        | 	xchg   dx,ax
   488 | 000003AC | 85C0                      | 	test   ax,ax
   489 | 000003AE | 7402                      | 	je     LSR_15
   490 | 000003B0 | F7E3                      | 	mul    bx
   491 |          |                           | LSR_15:
   492 | 000003B2 | E305                      | 	jcxz   LSR_16
   493 | 000003B4 | 91                        | 	xchg   cx,ax
   494 | 000003B5 | F7E6                      | 	mul    si
   495 | 000003B7 | 01C8                      | 	add    ax,cx
   496 |          |                           | LSR_16:
   497 | 000003B9 | 96                        | 	xchg   si,ax
   498 | 000003BA | F7E3                      | 	mul    bx
   499 | 000003BC | 01F2                      | 	add    dx,si
   500 | 000003BE | 5B                        | 	pop    bx
   501 | 000003BF | 59                        | 	pop    cx
   502 | 000003C0 | 5E                        | 	pop    si
   503 | 000003C1 | 5D                        | 	pop    bp
   504 | 000003C2 | C3                        | 	ret
   505 |          |                           | 
   506 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from clib.c
   507 |          |                           | 	CPU	8086
   508 | 000003C3 | 90                        | 	ALIGN	2
   509 | 000003C4 | E90F0D                    | 	jmp	main	; Jump to program start
   510 |          |                           | new_line:
   511 | 000003C7 | 0D0A24                    | 	db	13,10,36
   512 |          |                           | 	ALIGN	2
   513 |          |                           | signalEOI:
   514 | 000003CA | EB08                      | 	jmp	L_clib_1
   515 |          |                           | L_clib_2:
   516 | 000003CC | B020                      | 	mov	al, 0x20
   517 | 000003CE | E620                      | 	out	0x20, al
   518 | 000003D0 | 89EC                      | 	mov	sp, bp
   519 | 000003D2 | 5D                        | 	pop	bp
   520 | 000003D3 | C3                        | 	ret
   521 |          |                           | L_clib_1:
   522 | 000003D4 | 55                        | 	push	bp
   523 | 000003D5 | 89E5                      | 	mov	bp, sp
   524 | 000003D7 | EBF3                      | 	jmp	L_clib_2
   525 | 000003D9 | 90                        | 	ALIGN	2
   526 |          |                           | exit:
   527 | 000003DA | EB0B                      | 	jmp	L_clib_4
   528 |          |                           | L_clib_5:
   529 | 000003DC | B44C                      | 	mov	ah, 4Ch
   530 | 000003DE | 8A4604                    | 	mov	al, [bp+4]
   531 | 000003E1 | CD21                      | 	int	21h
   532 | 000003E3 | 89EC                      | 	mov	sp, bp
   533 | 000003E5 | 5D                        | 	pop	bp
   534 | 000003E6 | C3                        | 	ret
   535 |          |                           | L_clib_4:
   536 | 000003E7 | 55                        | 	push	bp
   537 | 000003E8 | 89E5                      | 	mov	bp, sp
   538 | 000003EA | EBF0                      | 	jmp	L_clib_5
   539 |          |                           | 	ALIGN	2
   540 |          |                           | print:
   541 | 000003EC | EB11                      | 	jmp	L_clib_7
   542 |          |                           | L_clib_8:
   543 | 000003EE | B440                      | 	mov	ah, 40h
   544 | 000003F0 | BB0100                    | 	mov	bx, 1
   545 | 000003F3 | 8B4E06                    | 	mov	cx, [bp+6]
   546 | 000003F6 | 8B5604                    | 	mov	dx, [bp+4]
   547 | 000003F9 | CD21                      | 	int	21h
   548 | 000003FB | 89EC                      | 	mov	sp, bp
   549 | 000003FD | 5D                        | 	pop	bp
   550 | 000003FE | C3                        | 	ret
   551 |          |                           | L_clib_7:
   552 | 000003FF | 55                        | 	push	bp
   553 | 00000400 | 89E5                      | 	mov	bp, sp
   554 | 00000402 | EBEA                      | 	jmp	L_clib_8
   555 |          |                           | 	ALIGN	2
   556 |          |                           | printChar:
   557 | 00000404 | EB0B                      | 	jmp	L_clib_10
   558 |          |                           | L_clib_11:
   559 | 00000406 | B402                      | 	mov	ah, 2
   560 | 00000408 | 8A5604                    | 	mov	dl, [bp+4]
   561 | 0000040B | CD21                      | 	int	21h
   562 | 0000040D | 89EC                      | 	mov	sp, bp
   563 | 0000040F | 5D                        | 	pop	bp
   564 | 00000410 | C3                        | 	ret
   565 |          |                           | L_clib_10:
   566 | 00000411 | 55                        | 	push	bp
   567 | 00000412 | 89E5                      | 	mov	bp, sp
   568 | 00000414 | EBF0                      | 	jmp	L_clib_11
   569 |          |                           | 	ALIGN	2
   570 |          |                           | printNewLine:
   571 | 00000416 | EB0B                      | 	jmp	L_clib_13
   572 |          |                           | L_clib_14:
   573 | 00000418 | B409                      | 	mov	ah, 9
   574 | 0000041A | BA[C703]                  | 	mov	dx, new_line
   575 | 0000041D | CD21                      | 	int	21h
   576 | 0000041F | 89EC                      | 	mov	sp, bp
   577 | 00000421 | 5D                        | 	pop	bp
   578 | 00000422 | C3                        | 	ret
   579 |          |                           | L_clib_13:
   580 | 00000423 | 55                        | 	push	bp
   581 | 00000424 | 89E5                      | 	mov	bp, sp
   582 | 00000426 | EBF0                      | 	jmp	L_clib_14
   583 |          |                           | 	ALIGN	2
   584 |          |                           | printString:
   585 | 00000428 | EB1C                      | 	jmp	L_clib_16
   586 |          |                           | L_clib_17:
   587 | 0000042A | 31F6                      | 	xor	si,si
   588 | 0000042C | 8B5E04                    | 	mov	bx, [bp+4]
   589 | 0000042F | EB01                      | 	jmp	printString2
   590 |          |                           | 	printString1:
   591 | 00000431 | 46                        | 	inc	si
   592 |          |                           | 	printString2:
   593 | 00000432 | 803800                    | 	cmp	byte [bx+si],0
   594 | 00000435 | 75FA                      | 	jne	printString1
   595 | 00000437 | 89DA                      | 	mov	dx, bx
   596 | 00000439 | 89F1                      | 	mov	cx, si
   597 | 0000043B | B440                      | 	mov	ah, 40h
   598 | 0000043D | BB0100                    | 	mov	bx, 1
   599 | 00000440 | CD21                      | 	int	21h
   600 | 00000442 | 89EC                      | 	mov	sp, bp
   601 | 00000444 | 5D                        | 	pop	bp
   602 | 00000445 | C3                        | 	ret
   603 |          |                           | L_clib_16:
   604 | 00000446 | 55                        | 	push	bp
   605 | 00000447 | 89E5                      | 	mov	bp, sp
   606 | 00000449 | 51                        | 	push	cx
   607 | 0000044A | EBDE                      | 	jmp	L_clib_17
   608 |          |                           | 	ALIGN	2
   609 |          |                           | printInt:
   610 | 0000044C | E99500                    | 	jmp	L_clib_19
   611 |          |                           | L_clib_20:
   612 | 0000044F | C746FE0000                | 	mov	word [bp-2], 0
   613 | 00000454 | C746FC1027                | 	mov	word [bp-4], 10000
   614 | 00000459 | 837E0400                  | 	cmp	word [bp+4], 0
   615 | 0000045D | 7D0F                      | 	jge	L_clib_21
   616 | 0000045F | C646F62D                  | 	mov	byte [bp-10], 45
   617 | 00000463 | FF46FE                    | 	inc	word [bp-2]
   618 | 00000466 | 8B4604                    | 	mov	ax, word [bp+4]
   619 | 00000469 | F7D8                      | 	neg	ax
   620 | 0000046B | 894604                    | 	mov	word [bp+4], ax
   621 |          |                           | L_clib_21:
   622 | 0000046E | 8B4604                    | 	mov	ax, word [bp+4]
   623 | 00000471 | 85C0                      | 	test	ax, ax
   624 | 00000473 | 7507                      | 	jne	L_clib_22
   625 | 00000475 | C746FC0100                | 	mov	word [bp-4], 1
   626 | 0000047A | EB19                      | 	jmp	L_clib_23
   627 |          |                           | L_clib_22:
   628 | 0000047C | EB0C                      | 	jmp	L_clib_25
   629 |          |                           | L_clib_24:
   630 | 0000047E | 8B46FC                    | 	mov	ax, word [bp-4]
   631 | 00000481 | 99                        | 	cwd
   632 | 00000482 | B90A00                    | 	mov	cx, 10
   633 | 00000485 | F7F9                      | 	idiv	cx
   634 | 00000487 | 8946FC                    | 	mov	word [bp-4], ax
   635 |          |                           | L_clib_25:
   636 | 0000048A | 8B4604                    | 	mov	ax, word [bp+4]
   637 | 0000048D | 99                        | 	cwd
   638 | 0000048E | F77EFC                    | 	idiv	word [bp-4]
   639 | 00000491 | 85C0                      | 	test	ax, ax
   640 | 00000493 | 74E9                      | 	je	L_clib_24
   641 |          |                           | L_clib_26:
   642 |          |                           | L_clib_23:
   643 | 00000495 | EB36                      | 	jmp	L_clib_28
   644 |          |                           | L_clib_27:
   645 | 00000497 | 8B4604                    | 	mov	ax, word [bp+4]
   646 | 0000049A | 31D2                      | 	xor	dx, dx
   647 | 0000049C | F776FC                    | 	div	word [bp-4]
   648 | 0000049F | 0430                      | 	add	al, 48
   649 | 000004A1 | 8B76FE                    | 	mov	si, word [bp-2]
   650 | 000004A4 | 8D56F6                    | 	lea	dx, [bp-10]
   651 | 000004A7 | 01D6                      | 	add	si, dx
   652 | 000004A9 | 8804                      | 	mov	byte [si], al
   653 | 000004AB | FF46FE                    | 	inc	word [bp-2]
   654 | 000004AE | 8B4604                    | 	mov	ax, word [bp+4]
   655 | 000004B1 | 31D2                      | 	xor	dx, dx
   656 | 000004B3 | F776FC                    | 	div	word [bp-4]
   657 | 000004B6 | 89D0                      | 	mov	ax, dx
   658 | 000004B8 | 894604                    | 	mov	word [bp+4], ax
   659 | 000004BB | 8B46FC                    | 	mov	ax, word [bp-4]
   660 | 000004BE | 99                        | 	cwd
   661 | 000004BF | B90A00                    | 	mov	cx, 10
   662 | 000004C2 | F7F9                      | 	idiv	cx
   663 | 000004C4 | 8946FC                    | 	mov	word [bp-4], ax
   664 | 000004C7 | 8B46FC                    | 	mov	ax, word [bp-4]
   665 | 000004CA | 8946FC                    | 	mov	word [bp-4], ax
   666 |          |                           | L_clib_28:
   667 | 000004CD | 837EFC00                  | 	cmp	word [bp-4], 0
   668 | 000004D1 | 7FC4                      | 	jg	L_clib_27
   669 |          |                           | L_clib_29:
   670 | 000004D3 | FF76FE                    | 	push	word [bp-2]
   671 | 000004D6 | 8D46F6                    | 	lea	ax, [bp-10]
   672 | 000004D9 | 50                        | 	push	ax
   673 | 000004DA | E80FFF                    | 	call	print
   674 | 000004DD | 83C404                    | 	add	sp, 4
   675 | 000004E0 | 89EC                      | 	mov	sp, bp
   676 | 000004E2 | 5D                        | 	pop	bp
   677 | 000004E3 | C3                        | 	ret
   678 |          |                           | L_clib_19:
   679 | 000004E4 | 55                        | 	push	bp
   680 | 000004E5 | 89E5                      | 	mov	bp, sp
   681 | 000004E7 | 83EC0A                    | 	sub	sp, 10
   682 | 000004EA | E962FF                    | 	jmp	L_clib_20
   683 | 000004ED | 90                        | 	ALIGN	2
   684 |          |                           | printLong:
   685 | 000004EE | E9D200                    | 	jmp	L_clib_31
   686 |          |                           | L_clib_32:
   687 | 000004F1 | C746FE0000                | 	mov	word [bp-2], 0
   688 | 000004F6 | C746FA00CA                | 	mov	word [bp-6], 51712
   689 | 000004FB | C746FC9A3B                | 	mov	word [bp-4], 15258
   690 | 00000500 | 837E0600                  | 	cmp	word [bp+6], 0
   691 | 00000504 | 7F22                      | 	jg	L_clib_33
   692 | 00000506 | 7C06                      | 	jl	L_clib_34
   693 | 00000508 | 837E0400                  | 	cmp	word [bp+4], 0
   694 | 0000050C | 731A                      | 	jae	L_clib_33
   695 |          |                           | L_clib_34:
   696 | 0000050E | C646EF2D                  | 	mov	byte [bp-17], 45
   697 | 00000512 | FF46FE                    | 	inc	word [bp-2]
   698 | 00000515 | 8B4604                    | 	mov	ax, word [bp+4]
   699 | 00000518 | 8B5606                    | 	mov	dx, word [bp+6]
   700 | 0000051B | F7D8                      | 	neg	ax
   701 | 0000051D | 83D200                    | 	adc	dx, 0
   702 | 00000520 | F7DA                      | 	neg	dx
   703 | 00000522 | 894604                    | 	mov	word [bp+4], ax
   704 | 00000525 | 895606                    | 	mov	word [bp+6], dx
   705 |          |                           | L_clib_33:
   706 | 00000528 | 8B4604                    | 	mov	ax, word [bp+4]
   707 | 0000052B | 8B5606                    | 	mov	dx, word [bp+6]
   708 | 0000052E | 09C2                      | 	or	dx, ax
   709 | 00000530 | 750C                      | 	jne	L_clib_35
   710 | 00000532 | C746FA0100                | 	mov	word [bp-6], 1
   711 | 00000537 | C746FC0000                | 	mov	word [bp-4], 0
   712 | 0000053C | EB23                      | 	jmp	L_clib_36
   713 |          |                           | L_clib_35:
   714 | 0000053E | EB0E                      | 	jmp	L_clib_38
   715 |          |                           | L_clib_37:
   716 | 00000540 | B80A00                    | 	mov	ax, 10
   717 | 00000543 | 31D2                      | 	xor	dx, dx
   718 | 00000545 | 52                        | 	push	dx
   719 | 00000546 | 50                        | 	push	ax
   720 | 00000547 | 8D46FA                    | 	lea	ax, [bp-6]
   721 | 0000054A | 50                        | 	push	ax
   722 | 0000054B | E8B5FB                    | 	call	SR_asldiv
   723 |          |                           | L_clib_38:
   724 | 0000054E | FF76FC                    | 	push	word [bp-4]
   725 | 00000551 | FF76FA                    | 	push	word [bp-6]
   726 | 00000554 | FF7606                    | 	push	word [bp+6]
   727 | 00000557 | FF7604                    | 	push	word [bp+4]
   728 | 0000055A | E8F8FC                    | 	call	SR_ldiv
   729 | 0000055D | 09C2                      | 	or	dx, ax
   730 | 0000055F | 74DF                      | 	je	L_clib_37
   731 |          |                           | L_clib_39:
   732 |          |                           | L_clib_36:
   733 | 00000561 | EB41                      | 	jmp	L_clib_41
   734 |          |                           | L_clib_40:
   735 | 00000563 | FF76FC                    | 	push	word [bp-4]
   736 | 00000566 | FF76FA                    | 	push	word [bp-6]
   737 | 00000569 | FF7606                    | 	push	word [bp+6]
   738 | 0000056C | FF7604                    | 	push	word [bp+4]
   739 | 0000056F | E8EAFC                    | 	call	SR_uldiv
   740 | 00000572 | 0430                      | 	add	al, 48
   741 | 00000574 | 8B76FE                    | 	mov	si, word [bp-2]
   742 | 00000577 | 8D56EF                    | 	lea	dx, [bp-17]
   743 | 0000057A | 01D6                      | 	add	si, dx
   744 | 0000057C | 8804                      | 	mov	byte [si], al
   745 | 0000057E | FF46FE                    | 	inc	word [bp-2]
   746 | 00000581 | FF76FC                    | 	push	word [bp-4]
   747 | 00000584 | FF76FA                    | 	push	word [bp-6]
   748 | 00000587 | FF7606                    | 	push	word [bp+6]
   749 | 0000058A | FF7604                    | 	push	word [bp+4]
   750 | 0000058D | E8D4FC                    | 	call	SR_lmod
   751 | 00000590 | 894604                    | 	mov	word [bp+4], ax
   752 | 00000593 | 895606                    | 	mov	word [bp+6], dx
   753 | 00000596 | B80A00                    | 	mov	ax, 10
   754 | 00000599 | 31D2                      | 	xor	dx, dx
   755 | 0000059B | 52                        | 	push	dx
   756 | 0000059C | 50                        | 	push	ax
   757 | 0000059D | 8D46FA                    | 	lea	ax, [bp-6]
   758 | 000005A0 | 50                        | 	push	ax
   759 | 000005A1 | E85FFB                    | 	call	SR_asldiv
   760 |          |                           | L_clib_41:
   761 | 000005A4 | 837EFC00                  | 	cmp	word [bp-4], 0
   762 | 000005A8 | 7FB9                      | 	jg	L_clib_40
   763 | 000005AA | 7506                      | 	jne	L_clib_43
   764 | 000005AC | 837EFA00                  | 	cmp	word [bp-6], 0
   765 | 000005B0 | 77B1                      | 	ja	L_clib_40
   766 |          |                           | L_clib_43:
   767 |          |                           | L_clib_42:
   768 | 000005B2 | FF76FE                    | 	push	word [bp-2]
   769 | 000005B5 | 8D46EF                    | 	lea	ax, [bp-17]
   770 | 000005B8 | 50                        | 	push	ax
   771 | 000005B9 | E830FE                    | 	call	print
   772 | 000005BC | 83C404                    | 	add	sp, 4
   773 | 000005BF | 89EC                      | 	mov	sp, bp
   774 | 000005C1 | 5D                        | 	pop	bp
   775 | 000005C2 | C3                        | 	ret
   776 |          |                           | L_clib_31:
   777 | 000005C3 | 55                        | 	push	bp
   778 | 000005C4 | 89E5                      | 	mov	bp, sp
   779 | 000005C6 | 83EC12                    | 	sub	sp, 18
   780 | 000005C9 | E925FF                    | 	jmp	L_clib_32
   781 |          |                           | 	ALIGN	2
   782 |          |                           | printUInt:
   783 | 000005CC | EB7C                      | 	jmp	L_clib_45
   784 |          |                           | L_clib_46:
   785 | 000005CE | C746FE0000                | 	mov	word [bp-2], 0
   786 | 000005D3 | C746FC1027                | 	mov	word [bp-4], 10000
   787 | 000005D8 | 8B4604                    | 	mov	ax, word [bp+4]
   788 | 000005DB | 85C0                      | 	test	ax, ax
   789 | 000005DD | 7507                      | 	jne	L_clib_47
   790 | 000005DF | C746FC0100                | 	mov	word [bp-4], 1
   791 | 000005E4 | EB1B                      | 	jmp	L_clib_48
   792 |          |                           | L_clib_47:
   793 | 000005E6 | EB0D                      | 	jmp	L_clib_50
   794 |          |                           | L_clib_49:
   795 | 000005E8 | 8B46FC                    | 	mov	ax, word [bp-4]
   796 | 000005EB | 31D2                      | 	xor	dx, dx
   797 | 000005ED | B90A00                    | 	mov	cx, 10
   798 | 000005F0 | F7F1                      | 	div	cx
   799 | 000005F2 | 8946FC                    | 	mov	word [bp-4], ax
   800 |          |                           | L_clib_50:
   801 | 000005F5 | 8B4604                    | 	mov	ax, word [bp+4]
   802 | 000005F8 | 31D2                      | 	xor	dx, dx
   803 | 000005FA | F776FC                    | 	div	word [bp-4]
   804 | 000005FD | 85C0                      | 	test	ax, ax
   805 | 000005FF | 74E7                      | 	je	L_clib_49
   806 |          |                           | L_clib_51:
   807 |          |                           | L_clib_48:
   808 | 00000601 | EB2F                      | 	jmp	L_clib_53
   809 |          |                           | L_clib_52:
   810 | 00000603 | 8B4604                    | 	mov	ax, word [bp+4]
   811 | 00000606 | 31D2                      | 	xor	dx, dx
   812 | 00000608 | F776FC                    | 	div	word [bp-4]
   813 | 0000060B | 0430                      | 	add	al, 48
   814 | 0000060D | 8B76FE                    | 	mov	si, word [bp-2]
   815 | 00000610 | 8D56F6                    | 	lea	dx, [bp-10]
   816 | 00000613 | 01D6                      | 	add	si, dx
   817 | 00000615 | 8804                      | 	mov	byte [si], al
   818 | 00000617 | FF46FE                    | 	inc	word [bp-2]
   819 | 0000061A | 8B4604                    | 	mov	ax, word [bp+4]
   820 | 0000061D | 31D2                      | 	xor	dx, dx
   821 | 0000061F | F776FC                    | 	div	word [bp-4]
   822 | 00000622 | 895604                    | 	mov	word [bp+4], dx
   823 | 00000625 | 8B46FC                    | 	mov	ax, word [bp-4]
   824 | 00000628 | 31D2                      | 	xor	dx, dx
   825 | 0000062A | B90A00                    | 	mov	cx, 10
   826 | 0000062D | F7F1                      | 	div	cx
   827 | 0000062F | 8946FC                    | 	mov	word [bp-4], ax
   828 |          |                           | L_clib_53:
   829 | 00000632 | 8B46FC                    | 	mov	ax, word [bp-4]
   830 | 00000635 | 85C0                      | 	test	ax, ax
   831 | 00000637 | 75CA                      | 	jne	L_clib_52
   832 |          |                           | L_clib_54:
   833 | 00000639 | FF76FE                    | 	push	word [bp-2]
   834 | 0000063C | 8D46F6                    | 	lea	ax, [bp-10]
   835 | 0000063F | 50                        | 	push	ax
   836 | 00000640 | E8A9FD                    | 	call	print
   837 | 00000643 | 83C404                    | 	add	sp, 4
   838 | 00000646 | 89EC                      | 	mov	sp, bp
   839 | 00000648 | 5D                        | 	pop	bp
   840 | 00000649 | C3                        | 	ret
   841 |          |                           | L_clib_45:
   842 | 0000064A | 55                        | 	push	bp
   843 | 0000064B | 89E5                      | 	mov	bp, sp
   844 | 0000064D | 83EC0A                    | 	sub	sp, 10
   845 | 00000650 | E97BFF                    | 	jmp	L_clib_46
   846 | 00000653 | 90                        | 	ALIGN	2
   847 |          |                           | printULong:
   848 | 00000654 | E99E00                    | 	jmp	L_clib_56
   849 |          |                           | L_clib_57:
   850 | 00000657 | C746FE0000                | 	mov	word [bp-2], 0
   851 | 0000065C | C746FA00CA                | 	mov	word [bp-6], 51712
   852 | 00000661 | C746FC9A3B                | 	mov	word [bp-4], 15258
   853 | 00000666 | 8B4604                    | 	mov	ax, word [bp+4]
   854 | 00000669 | 8B5606                    | 	mov	dx, word [bp+6]
   855 | 0000066C | 09C2                      | 	or	dx, ax
   856 | 0000066E | 750C                      | 	jne	L_clib_58
   857 | 00000670 | C746FA0100                | 	mov	word [bp-6], 1
   858 | 00000675 | C746FC0000                | 	mov	word [bp-4], 0
   859 | 0000067A | EB23                      | 	jmp	L_clib_59
   860 |          |                           | L_clib_58:
   861 | 0000067C | EB0E                      | 	jmp	L_clib_61
   862 |          |                           | L_clib_60:
   863 | 0000067E | B80A00                    | 	mov	ax, 10
   864 | 00000681 | 31D2                      | 	xor	dx, dx
   865 | 00000683 | 52                        | 	push	dx
   866 | 00000684 | 50                        | 	push	ax
   867 | 00000685 | 8D46FA                    | 	lea	ax, [bp-6]
   868 | 00000688 | 50                        | 	push	ax
   869 | 00000689 | E820FB                    | 	call	SR_asuldiv
   870 |          |                           | L_clib_61:
   871 | 0000068C | FF76FC                    | 	push	word [bp-4]
   872 | 0000068F | FF76FA                    | 	push	word [bp-6]
   873 | 00000692 | FF7606                    | 	push	word [bp+6]
   874 | 00000695 | FF7604                    | 	push	word [bp+4]
   875 | 00000698 | E8C1FB                    | 	call	SR_uldiv
   876 | 0000069B | 09C2                      | 	or	dx, ax
   877 | 0000069D | 74DF                      | 	je	L_clib_60
   878 |          |                           | L_clib_62:
   879 |          |                           | L_clib_59:
   880 | 0000069F | EB39                      | 	jmp	L_clib_64
   881 |          |                           | L_clib_63:
   882 | 000006A1 | FF76FC                    | 	push	word [bp-4]
   883 | 000006A4 | FF76FA                    | 	push	word [bp-6]
   884 | 000006A7 | FF7606                    | 	push	word [bp+6]
   885 | 000006AA | FF7604                    | 	push	word [bp+4]
   886 | 000006AD | E8ACFB                    | 	call	SR_uldiv
   887 | 000006B0 | 0430                      | 	add	al, 48
   888 | 000006B2 | 8B76FE                    | 	mov	si, word [bp-2]
   889 | 000006B5 | 8D56EF                    | 	lea	dx, [bp-17]
   890 | 000006B8 | 01D6                      | 	add	si, dx
   891 | 000006BA | 8804                      | 	mov	byte [si], al
   892 | 000006BC | FF46FE                    | 	inc	word [bp-2]
   893 | 000006BF | FF76FC                    | 	push	word [bp-4]
   894 | 000006C2 | FF76FA                    | 	push	word [bp-6]
   895 | 000006C5 | 8D4604                    | 	lea	ax, [bp+4]
   896 | 000006C8 | 50                        | 	push	ax
   897 | 000006C9 | E800FB                    | 	call	SR_asilmod
   898 | 000006CC | B80A00                    | 	mov	ax, 10
   899 | 000006CF | 31D2                      | 	xor	dx, dx
   900 | 000006D1 | 52                        | 	push	dx
   901 | 000006D2 | 50                        | 	push	ax
   902 | 000006D3 | 8D46FA                    | 	lea	ax, [bp-6]
   903 | 000006D6 | 50                        | 	push	ax
   904 | 000006D7 | E8D2FA                    | 	call	SR_asuldiv
   905 |          |                           | L_clib_64:
   906 | 000006DA | 8B46FA                    | 	mov	ax, word [bp-6]
   907 | 000006DD | 8B56FC                    | 	mov	dx, word [bp-4]
   908 | 000006E0 | 09C2                      | 	or	dx, ax
   909 | 000006E2 | 75BD                      | 	jne	L_clib_63
   910 |          |                           | L_clib_65:
   911 | 000006E4 | FF76FE                    | 	push	word [bp-2]
   912 | 000006E7 | 8D46EF                    | 	lea	ax, [bp-17]
   913 | 000006EA | 50                        | 	push	ax
   914 | 000006EB | E8FEFC                    | 	call	print
   915 | 000006EE | 83C404                    | 	add	sp, 4
   916 | 000006F1 | 89EC                      | 	mov	sp, bp
   917 | 000006F3 | 5D                        | 	pop	bp
   918 | 000006F4 | C3                        | 	ret
   919 |          |                           | L_clib_56:
   920 | 000006F5 | 55                        | 	push	bp
   921 | 000006F6 | 89E5                      | 	mov	bp, sp
   922 | 000006F8 | 83EC12                    | 	sub	sp, 18
   923 | 000006FB | E959FF                    | 	jmp	L_clib_57
   924 |          |                           | 	ALIGN	2
   925 |          |                           | printByte:
   926 | 000006FE | EB61                      | 	jmp	L_clib_67
   927 |          |                           | L_clib_68:
   928 | 00000700 | 8A4604                    | 	mov	al, byte [bp+4]
   929 | 00000703 | 98                        | 	cbw
   930 | 00000704 | B90400                    | 	mov	cx, 4
   931 | 00000707 | D3F8                      | 	sar	ax, cl
   932 | 00000709 | 83E00F                    | 	and	ax, 15
   933 | 0000070C | 8846FF                    | 	mov	byte [bp-1], al
   934 | 0000070F | 807EFF09                  | 	cmp	byte [bp-1], 9
   935 | 00000713 | 7E0C                      | 	jle	L_clib_69
   936 | 00000715 | 8A46FF                    | 	mov	al, byte [bp-1]
   937 | 00000718 | 98                        | 	cbw
   938 | 00000719 | 83E80A                    | 	sub	ax, 10
   939 | 0000071C | 83C041                    | 	add	ax, 65
   940 | 0000071F | EB07                      | 	jmp	L_clib_70
   941 |          |                           | L_clib_69:
   942 | 00000721 | 8A46FF                    | 	mov	al, byte [bp-1]
   943 | 00000724 | 98                        | 	cbw
   944 | 00000725 | 83C030                    | 	add	ax, 48
   945 |          |                           | L_clib_70:
   946 | 00000728 | 8846FD                    | 	mov	byte [bp-3], al
   947 | 0000072B | 8A4604                    | 	mov	al, byte [bp+4]
   948 | 0000072E | 240F                      | 	and	al, 15
   949 | 00000730 | 8846FF                    | 	mov	byte [bp-1], al
   950 | 00000733 | 807EFF09                  | 	cmp	byte [bp-1], 9
   951 | 00000737 | 7E0C                      | 	jle	L_clib_71
   952 | 00000739 | 8A46FF                    | 	mov	al, byte [bp-1]
   953 | 0000073C | 98                        | 	cbw
   954 | 0000073D | 83E80A                    | 	sub	ax, 10
   955 | 00000740 | 83C041                    | 	add	ax, 65
   956 | 00000743 | EB07                      | 	jmp	L_clib_72
   957 |          |                           | L_clib_71:
   958 | 00000745 | 8A46FF                    | 	mov	al, byte [bp-1]
   959 | 00000748 | 98                        | 	cbw
   960 | 00000749 | 83C030                    | 	add	ax, 48
   961 |          |                           | L_clib_72:
   962 | 0000074C | 8846FE                    | 	mov	byte [bp-2], al
   963 | 0000074F | B80200                    | 	mov	ax, 2
   964 | 00000752 | 50                        | 	push	ax
   965 | 00000753 | 8D46FD                    | 	lea	ax, [bp-3]
   966 | 00000756 | 50                        | 	push	ax
   967 | 00000757 | E892FC                    | 	call	print
   968 | 0000075A | 83C404                    | 	add	sp, 4
   969 | 0000075D | 89EC                      | 	mov	sp, bp
   970 | 0000075F | 5D                        | 	pop	bp
   971 | 00000760 | C3                        | 	ret
   972 |          |                           | L_clib_67:
   973 | 00000761 | 55                        | 	push	bp
   974 | 00000762 | 89E5                      | 	mov	bp, sp
   975 | 00000764 | 83EC04                    | 	sub	sp, 4
   976 | 00000767 | EB97                      | 	jmp	L_clib_68
   977 | 00000769 | 90                        | 	ALIGN	2
   978 |          |                           | printWord:
   979 | 0000076A | EB59                      | 	jmp	L_clib_74
   980 |          |                           | L_clib_75:
   981 | 0000076C | C746FE0300                | 	mov	word [bp-2], 3
   982 | 00000771 | EB3A                      | 	jmp	L_clib_77
   983 |          |                           | L_clib_76:
   984 | 00000773 | 8B4604                    | 	mov	ax, word [bp+4]
   985 | 00000776 | 83E00F                    | 	and	ax, 15
   986 | 00000779 | 8846FD                    | 	mov	byte [bp-3], al
   987 | 0000077C | 807EFD09                  | 	cmp	byte [bp-3], 9
   988 | 00000780 | 7E0C                      | 	jle	L_clib_80
   989 | 00000782 | 8A46FD                    | 	mov	al, byte [bp-3]
   990 | 00000785 | 98                        | 	cbw
   991 | 00000786 | 83E80A                    | 	sub	ax, 10
   992 | 00000789 | 83C041                    | 	add	ax, 65
   993 | 0000078C | EB07                      | 	jmp	L_clib_81
   994 |          |                           | L_clib_80:
   995 | 0000078E | 8A46FD                    | 	mov	al, byte [bp-3]
   996 | 00000791 | 98                        | 	cbw
   997 | 00000792 | 83C030                    | 	add	ax, 48
   998 |          |                           | L_clib_81:
   999 | 00000795 | 8B76FE                    | 	mov	si, word [bp-2]
  1000 | 00000798 | 8D56F9                    | 	lea	dx, [bp-7]
  1001 | 0000079B | 01D6                      | 	add	si, dx
  1002 | 0000079D | 8804                      | 	mov	byte [si], al
  1003 | 0000079F | 8B4604                    | 	mov	ax, word [bp+4]
  1004 | 000007A2 | B90400                    | 	mov	cx, 4
  1005 | 000007A5 | D3F8                      | 	sar	ax, cl
  1006 | 000007A7 | 894604                    | 	mov	word [bp+4], ax
  1007 |          |                           | L_clib_79:
  1008 | 000007AA | FF4EFE                    | 	dec	word [bp-2]
  1009 |          |                           | L_clib_77:
  1010 | 000007AD | 837EFE00                  | 	cmp	word [bp-2], 0
  1011 | 000007B1 | 7DC0                      | 	jge	L_clib_76
  1012 |          |                           | L_clib_78:
  1013 | 000007B3 | B80400                    | 	mov	ax, 4
  1014 | 000007B6 | 50                        | 	push	ax
  1015 | 000007B7 | 8D46F9                    | 	lea	ax, [bp-7]
  1016 | 000007BA | 50                        | 	push	ax
  1017 | 000007BB | E82EFC                    | 	call	print
  1018 | 000007BE | 83C404                    | 	add	sp, 4
  1019 | 000007C1 | 89EC                      | 	mov	sp, bp
  1020 | 000007C3 | 5D                        | 	pop	bp
  1021 | 000007C4 | C3                        | 	ret
  1022 |          |                           | L_clib_74:
  1023 | 000007C5 | 55                        | 	push	bp
  1024 | 000007C6 | 89E5                      | 	mov	bp, sp
  1025 | 000007C8 | 83EC08                    | 	sub	sp, 8
  1026 | 000007CB | EB9F                      | 	jmp	L_clib_75
  1027 | 000007CD | 90                        | 	ALIGN	2
  1028 |          |                           | printDWord:
  1029 | 000007CE | E9AC00                    | 	jmp	L_clib_83
  1030 |          |                           | L_clib_84:
  1031 | 000007D1 | 8D4604                    | 	lea	ax, [bp+4]
  1032 | 000007D4 | 89C6                      | 	mov	si, ax
  1033 | 000007D6 | 8B04                      | 	mov	ax, word [si]
  1034 | 000007D8 | 8946FA                    | 	mov	word [bp-6], ax
  1035 | 000007DB | 8D4604                    | 	lea	ax, [bp+4]
  1036 | 000007DE | 89C6                      | 	mov	si, ax
  1037 | 000007E0 | 83C602                    | 	add	si, 2
  1038 | 000007E3 | 8B04                      | 	mov	ax, word [si]
  1039 | 000007E5 | 8946F8                    | 	mov	word [bp-8], ax
  1040 | 000007E8 | C746FE0300                | 	mov	word [bp-2], 3
  1041 | 000007ED | EB76                      | 	jmp	L_clib_86
  1042 |          |                           | L_clib_85:
  1043 | 000007EF | 8B46FA                    | 	mov	ax, word [bp-6]
  1044 | 000007F2 | 83E00F                    | 	and	ax, 15
  1045 | 000007F5 | 8846FD                    | 	mov	byte [bp-3], al
  1046 | 000007F8 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1047 | 000007FC | 7E0C                      | 	jle	L_clib_89
  1048 | 000007FE | 8A46FD                    | 	mov	al, byte [bp-3]
  1049 | 00000801 | 98                        | 	cbw
  1050 | 00000802 | 83E80A                    | 	sub	ax, 10
  1051 | 00000805 | 83C041                    | 	add	ax, 65
  1052 | 00000808 | EB07                      | 	jmp	L_clib_90
  1053 |          |                           | L_clib_89:
  1054 | 0000080A | 8A46FD                    | 	mov	al, byte [bp-3]
  1055 | 0000080D | 98                        | 	cbw
  1056 | 0000080E | 83C030                    | 	add	ax, 48
  1057 |          |                           | L_clib_90:
  1058 | 00000811 | 8B56FE                    | 	mov	dx, word [bp-2]
  1059 | 00000814 | 83C204                    | 	add	dx, 4
  1060 | 00000817 | 89D6                      | 	mov	si, dx
  1061 | 00000819 | 8D56F0                    | 	lea	dx, [bp-16]
  1062 | 0000081C | 01D6                      | 	add	si, dx
  1063 | 0000081E | 8804                      | 	mov	byte [si], al
  1064 | 00000820 | 8B46FA                    | 	mov	ax, word [bp-6]
  1065 | 00000823 | B90400                    | 	mov	cx, 4
  1066 | 00000826 | D3F8                      | 	sar	ax, cl
  1067 | 00000828 | 8946FA                    | 	mov	word [bp-6], ax
  1068 | 0000082B | 8B46F8                    | 	mov	ax, word [bp-8]
  1069 | 0000082E | 83E00F                    | 	and	ax, 15
  1070 | 00000831 | 8846FD                    | 	mov	byte [bp-3], al
  1071 | 00000834 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1072 | 00000838 | 7E0C                      | 	jle	L_clib_91
  1073 | 0000083A | 8A46FD                    | 	mov	al, byte [bp-3]
  1074 | 0000083D | 98                        | 	cbw
  1075 | 0000083E | 83E80A                    | 	sub	ax, 10
  1076 | 00000841 | 83C041                    | 	add	ax, 65
  1077 | 00000844 | EB07                      | 	jmp	L_clib_92
  1078 |          |                           | L_clib_91:
  1079 | 00000846 | 8A46FD                    | 	mov	al, byte [bp-3]
  1080 | 00000849 | 98                        | 	cbw
  1081 | 0000084A | 83C030                    | 	add	ax, 48
  1082 |          |                           | L_clib_92:
  1083 | 0000084D | 8B76FE                    | 	mov	si, word [bp-2]
  1084 | 00000850 | 8D56F0                    | 	lea	dx, [bp-16]
  1085 | 00000853 | 01D6                      | 	add	si, dx
  1086 | 00000855 | 8804                      | 	mov	byte [si], al
  1087 | 00000857 | 8B46F8                    | 	mov	ax, word [bp-8]
  1088 | 0000085A | B90400                    | 	mov	cx, 4
  1089 | 0000085D | D3F8                      | 	sar	ax, cl
  1090 | 0000085F | 8946F8                    | 	mov	word [bp-8], ax
  1091 |          |                           | L_clib_88:
  1092 | 00000862 | FF4EFE                    | 	dec	word [bp-2]
  1093 |          |                           | L_clib_86:
  1094 | 00000865 | 837EFE00                  | 	cmp	word [bp-2], 0
  1095 | 00000869 | 7D84                      | 	jge	L_clib_85
  1096 |          |                           | L_clib_87:
  1097 | 0000086B | B80800                    | 	mov	ax, 8
  1098 | 0000086E | 50                        | 	push	ax
  1099 | 0000086F | 8D46F0                    | 	lea	ax, [bp-16]
  1100 | 00000872 | 50                        | 	push	ax
  1101 | 00000873 | E876FB                    | 	call	print
  1102 | 00000876 | 83C404                    | 	add	sp, 4
  1103 | 00000879 | 89EC                      | 	mov	sp, bp
  1104 | 0000087B | 5D                        | 	pop	bp
  1105 | 0000087C | C3                        | 	ret
  1106 |          |                           | L_clib_83:
  1107 | 0000087D | 55                        | 	push	bp
  1108 | 0000087E | 89E5                      | 	mov	bp, sp
  1109 | 00000880 | 83EC10                    | 	sub	sp, 16
  1110 | 00000883 | E94BFF                    | 	jmp	L_clib_84
  1111 |          |                           | 
  1112 |          |                           | RESET:
  1113 |          |                           | 
  1114 | 00000886 | 50                        | 		push 	ax
  1115 | 00000887 | 53                        | 		push 	bx
  1116 | 00000888 | 51                        | 		push 	cx
  1117 | 00000889 | 52                        | 		push 	dx
  1118 | 0000088A | 57                        | 		push 	di
  1119 | 0000088B | 56                        | 		push 	si
  1120 | 0000088C | 1E                        | 		push 	ds
  1121 | 0000088D | 06                        | 		push 	es
  1122 | 0000088E | 55                        | 		push 	bp
  1123 | 0000088F | 8B36[880C]                | 		mov		si, [currentTask]
  1124 | 00000893 | 83C604                    | 		add		si, word 0x4
  1125 | 00000896 | 8924                      | 		mov 		[si], sp
  1126 |          |                           | 
  1127 | 00000898 | E8D301                    | 		call		YKEnterISR
  1128 |          |                           | 		
  1129 | 0000089B | FB                        | 		sti					;enabling interrupts
  1130 | 0000089C | E8DD00                    | 		call 	resetHandler	;calling C interrupt handler
  1131 | 0000089F | FA                        | 		cli					;disabling interrupts
  1132 |          |                           | 		
  1133 | 000008A0 | B020                      | 		mov		al, 0x20		;Load nonspecific EOI value (0x20) into register al
  1134 | 000008A2 | E620                      | 		out		0x20, al		;Write EOI to PIC (port 0x20)
  1135 |          |                           | 
  1136 | 000008A4 | E8D701                    | 		call 	YKExitISR
  1137 |          |                           | 
  1138 | 000008A7 | 5D                        | 		pop		bp
  1139 | 000008A8 | 07                        | 		pop		es
  1140 | 000008A9 | 1F                        | 		pop		ds
  1141 | 000008AA | 5E                        | 		pop		si
  1142 | 000008AB | 5F                        | 		pop		di
  1143 | 000008AC | 5A                        | 		pop		dx
  1144 | 000008AD | 59                        | 		pop		cx
  1145 | 000008AE | 5B                        | 		pop		bx
  1146 | 000008AF | 58                        | 		pop		ax	
  1147 |          |                           | 
  1148 | 000008B0 | CF                        | 		iret					;returning from ISR
  1149 |          |                           | 
  1150 |          |                           | TICK:
  1151 |          |                           | 
  1152 | 000008B1 | 50                        | 		push 	ax
  1153 | 000008B2 | 53                        | 		push 	bx
  1154 | 000008B3 | 51                        | 		push 	cx
  1155 | 000008B4 | 52                        | 		push 	dx
  1156 | 000008B5 | 57                        | 		push 	di
  1157 | 000008B6 | 56                        | 		push 	si
  1158 | 000008B7 | 1E                        | 		push 	ds
  1159 | 000008B8 | 06                        | 		push 	es
  1160 | 000008B9 | 55                        | 		push 	bp
  1161 | 000008BA | 8B36[880C]                | 		mov		si, [currentTask]
  1162 | 000008BE | 83C604                    | 		add		si, word 0x4
  1163 | 000008C1 | 8924                      | 		mov 		[si], sp
  1164 |          |                           | 
  1165 | 000008C3 | E8A801                    | 		call	YKEnterISR
  1166 |          |                           | 
  1167 | 000008C6 | FB                        | 		sti					;enabling interrupts
  1168 | 000008C7 | E8CE00                    | 		call	tickHandler		;calling C interrupt handler
  1169 | 000008CA | FA                        | 		cli					;disabling interrupts
  1170 |          |                           | 
  1171 | 000008CB | B020                      | 		mov 	al, 0x20			;Load nonspecific EOI value (0x20) into register al
  1172 | 000008CD | E620                      | 		out		0x20, al		;Write EOI to PIC (port 0x20)
  1173 |          |                           | 
  1174 | 000008CF | E8AC01                    | 		call	YKExitISR
  1175 |          |                           | 
  1176 | 000008D2 | 5D                        | 		pop		bp
  1177 | 000008D3 | 07                        | 		pop		es
  1178 | 000008D4 | 1F                        | 		pop		ds
  1179 | 000008D5 | 5E                        | 		pop		si
  1180 | 000008D6 | 5F                        | 		pop		di
  1181 | 000008D7 | 5A                        | 		pop		dx
  1182 | 000008D8 | 59                        | 		pop		cx
  1183 | 000008D9 | 5B                        | 		pop		bx
  1184 | 000008DA | 58                        | 		pop		ax
  1185 |          |                           | 
  1186 | 000008DB | CF                        | 		iret					;returning from ISR
  1187 |          |                           | 
  1188 |          |                           | KEYBOARD:
  1189 |          |                           | 
  1190 | 000008DC | 50                        | 		push 	ax
  1191 | 000008DD | 53                        | 		push 	bx
  1192 | 000008DE | 51                        | 		push 	cx
  1193 | 000008DF | 52                        | 		push 	dx
  1194 | 000008E0 | 57                        | 		push 	di
  1195 | 000008E1 | 56                        | 		push 	si
  1196 | 000008E2 | 1E                        | 		push 	ds
  1197 | 000008E3 | 06                        | 		push 	es
  1198 | 000008E4 | 55                        | 		push 	bp
  1199 | 000008E5 | 8B36[880C]                | 		mov		si, [currentTask]
  1200 | 000008E9 | 83C604                    | 		add		si, word 0x4
  1201 | 000008EC | 8924                      | 		mov 		[si], sp	
  1202 |          |                           | 		
  1203 | 000008EE | E87D01                    | 		call	YKEnterISR
  1204 |          |                           | 		
  1205 | 000008F1 | FB                        | 		sti						;enabling interrupts
  1206 | 000008F2 | E8D900                    | 		call	keyboardHandler ;calling C interrupt handler
  1207 | 000008F5 | FA                        | 		cli						;disabling interrupts
  1208 |          |                           | 
  1209 | 000008F6 | B020                      | 		mov     al, 0x20		;Load nonspecific EOI value (0x20) into register al
  1210 | 000008F8 | E620                      | 		out		0x20, al		;Write EOI to PIC (port 0x20)
  1211 |          |                           | 
  1212 | 000008FA | E88101                    | 		call	YKExitISR
  1213 |          |                           | 
  1214 | 000008FD | 5D                        | 		pop		bp
  1215 | 000008FE | 07                        | 		pop		es
  1216 | 000008FF | 1F                        | 		pop		ds
  1217 | 00000900 | 5E                        | 		pop		si
  1218 | 00000901 | 5F                        | 		pop		di
  1219 | 00000902 | 5A                        | 		pop		dx
  1220 | 00000903 | 59                        | 		pop		cx
  1221 | 00000904 | 5B                        | 		pop		bx
  1222 | 00000905 | 58                        | 		pop		ax
  1223 |          |                           | 
  1224 | 00000906 | CF                        | 		iret					;returning from ISR
  1225 |          |                           | 
  1226 |          |                           | TRAP:
  1227 |          |                           | 
  1228 | 00000907 | 50                        | 		push 	ax
  1229 | 00000908 | 53                        | 		push 	bx
  1230 | 00000909 | 51                        | 		push 	cx
  1231 | 0000090A | 52                        | 		push 	dx
  1232 | 0000090B | 57                        | 		push 	di
  1233 | 0000090C | 56                        | 		push 	si
  1234 | 0000090D | 1E                        | 		push 	ds
  1235 | 0000090E | 06                        | 		push 	es
  1236 | 0000090F | 55                        | 		push 	bp
  1237 | 00000910 | 8B36[880C]                | 		mov		si, [currentTask]
  1238 | 00000914 | 83C604                    | 		add		si, word 0x4
  1239 | 00000917 | 8924                      | 		mov 		[si], sp
  1240 |          |                           | 
  1241 | 00000919 | E85201                    | 		call 	YKEnterISR
  1242 |          |                           | 
  1243 | 0000091C | B020                      | 		mov 		al, 0x20
  1244 | 0000091E | E620                      | 		out		0x20, al
  1245 |          |                           | 
  1246 | 00000920 | E85B01                    | 		call		YKExitISR
  1247 |          |                           | 
  1248 | 00000923 | 5D                        | 		pop		bp
  1249 | 00000924 | 07                        | 		pop		es
  1250 | 00000925 | 1F                        | 		pop		ds
  1251 | 00000926 | 5E                        | 		pop		si
  1252 | 00000927 | 5F                        | 		pop		di
  1253 | 00000928 | 5A                        | 		pop		dx
  1254 | 00000929 | 59                        | 		pop		cx
  1255 | 0000092A | 5B                        | 		pop		bx
  1256 | 0000092B | 58                        | 		pop		ax
  1257 |          |                           | 
  1258 | 0000092C | CF                        | 		iret
  1259 |          |                           | 
  1260 |          |                           | YKDispatcher:
  1261 |          |                           | 
  1262 | 0000092D | FA                        | 		cli
  1263 | 0000092E | 55                        | 		push 	bp
  1264 | 0000092F | 89E5                      | 		mov		bp, sp		
  1265 |          |                           | 
  1266 | 00000931 | 8B5E04                    | 		mov		bx, [bp+4]	;Obtain stack pointer from TCB
  1267 | 00000934 | 8B6704                    | 		mov		sp, [bx+4]	;Load stack pointer into SP
  1268 |          |                           | 
  1269 | 00000937 | 5D                        | 		pop		bp
  1270 | 00000938 | 07                        | 		pop		es
  1271 | 00000939 | 1F                        | 		pop		ds
  1272 | 0000093A | 5E                        | 		pop		si
  1273 | 0000093B | 5F                        | 		pop		di
  1274 | 0000093C | 5A                        | 		pop		dx
  1275 | 0000093D | 59                        | 		pop		cx
  1276 | 0000093E | 5B                        | 		pop		bx
  1277 | 0000093F | 58                        | 		pop		ax
  1278 |          |                           | 
  1279 | 00000940 | CF                        | 		iret
  1280 |          |                           | 
  1281 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from myinth.i
  1282 |          |                           | 	CPU	8086
  1283 | 00000941 | 90                        | 	ALIGN	2
  1284 | 00000942 | E99107                    | 	jmp	main	; Jump to program start
  1285 |          |                           | L_myinth_1:
  1286 | 00000945 | 5449434B20                | 	DB	0x54,0x49,0x43,0x4b,0x20
  1287 |          |                           | L_myinth_2:
  1288 | 0000094A | 4B4559505245535320-       | 	DB	0x4b,0x45,0x59,0x50,0x52,0x45,0x53,0x53,0x20,0x28
  1289 | 00000953 | 28                        | ...
  1290 |          |                           | L_myinth_3:
  1291 | 00000954 | 292049474E4F524544        | 	DB	0x29,0x20,0x49,0x47,0x4e,0x4f,0x52,0x45,0x44
  1292 |          |                           | L_myinth_4:
  1293 | 0000095D | 44454C4159204B4559-       | 	DB	0x44,0x45,0x4c,0x41,0x59,0x20,0x4b,0x45,0x59,0x20,0x50,0x52
  1294 | 00000966 | 205052                    | ...
  1295 | 00000969 | 4553534544                | 	DB	0x45,0x53,0x53,0x45,0x44
  1296 |          |                           | L_myinth_5:
  1297 | 0000096E | 44454C415920434F4D-       | 	DB	0x44,0x45,0x4c,0x41,0x59,0x20,0x43,0x4f,0x4d,0x50,0x4c,0x45
  1298 | 00000977 | 504C45                    | ...
  1299 | 0000097A | 5445                      | 	DB	0x54,0x45
  1300 |          |                           | 	ALIGN	2
  1301 |          |                           | resetHandler:
  1302 |          |                           | 	; >>>>> Line:	12
  1303 |          |                           | 	; >>>>> void resetHandler() { 
  1304 | 0000097C | EB0D                      | 	jmp	L_myinth_6
  1305 |          |                           | L_myinth_7:
  1306 |          |                           | 	; >>>>> Line:	14
  1307 |          |                           | 	; >>>>> exit(0); 
  1308 | 0000097E | 30C0                      | 	xor	al, al
  1309 | 00000980 | 50                        | 	push	ax
  1310 | 00000981 | E856FA                    | 	call	exit
  1311 | 00000984 | 83C402                    | 	add	sp, 2
  1312 | 00000987 | 89EC                      | 	mov	sp, bp
  1313 | 00000989 | 5D                        | 	pop	bp
  1314 | 0000098A | C3                        | 	ret
  1315 |          |                           | L_myinth_6:
  1316 | 0000098B | 55                        | 	push	bp
  1317 | 0000098C | 89E5                      | 	mov	bp, sp
  1318 | 0000098E | EBEE                      | 	jmp	L_myinth_7
  1319 |          |                           | L_myinth_9:
  1320 | 00000990 | 0A5469636B2000            | 	DB	0xA,"Tick ",0
  1321 | 00000997 | 90                        | 	ALIGN	2
  1322 |          |                           | tickHandler:
  1323 |          |                           | 	; >>>>> Line:	18
  1324 |          |                           | 	; >>>>> void tickHandler() { 
  1325 | 00000998 | EB2E                      | 	jmp	L_myinth_10
  1326 |          |                           | L_myinth_11:
  1327 |          |                           | 	; >>>>> Line:	20
  1328 |          |                           | 	; >>>>> YKEnterMutex(); 
  1329 | 0000099A | E8B900                    | 	call	YKEnterMutex
  1330 |          |                           | 	; >>>>> Line:	21
  1331 |          |                           | 	; >>>>> YKTickCounter++; 
  1332 | 0000099D | FF06[500A]                | 	inc	word [YKTickCounter]
  1333 |          |                           | 	; >>>>> Line:	22
  1334 |          |                           | 	; >>>>> YKExitMutex(); 
  1335 | 000009A1 | E8BE00                    | 	call	YKExitMutex
  1336 |          |                           | 	; >>>>> Line:	23
  1337 |          |                           | 	; >>>>> printString("\nTick "); 
  1338 | 000009A4 | B8[9009]                  | 	mov	ax, L_myinth_9
  1339 | 000009A7 | 50                        | 	push	ax
  1340 | 000009A8 | E87DFA                    | 	call	printString
  1341 | 000009AB | 83C402                    | 	add	sp, 2
  1342 |          |                           | 	; >>>>> Line:	24
  1343 |          |                           | 	; >>>>> YKEnterMutex(); 
  1344 | 000009AE | E8A500                    | 	call	YKEnterMutex
  1345 |          |                           | 	; >>>>> Line:	25
  1346 |          |                           | 	; >>>>> printInt(YKTickCounter); 
  1347 | 000009B1 | FF36[500A]                | 	push	word [YKTickCounter]
  1348 | 000009B5 | E894FA                    | 	call	printInt
  1349 | 000009B8 | 83C402                    | 	add	sp, 2
  1350 |          |                           | 	; >>>>> Line:	26
  1351 |          |                           | 	; >>>>> YKExitMutex(); 
  1352 | 000009BB | E8A400                    | 	call	YKExitMutex
  1353 |          |                           | 	; >>>>> Line:	27
  1354 |          |                           | 	; >>>>> printNewLine(); 
  1355 | 000009BE | E855FA                    | 	call	printNewLine
  1356 |          |                           | 	; >>>>> Line:	28
  1357 |          |                           | 	; >>>>> YKTickHandler(); 
  1358 | 000009C1 | E8B602                    | 	call	YKTickHandler
  1359 |          |                           | L_myinth_12:
  1360 |          |                           | 	; >>>>> Line:	29
  1361 |          |                           | 	; >>>>> return; 
  1362 | 000009C4 | 89EC                      | 	mov	sp, bp
  1363 | 000009C6 | 5D                        | 	pop	bp
  1364 | 000009C7 | C3                        | 	ret
  1365 |          |                           | L_myinth_10:
  1366 | 000009C8 | 55                        | 	push	bp
  1367 | 000009C9 | 89E5                      | 	mov	bp, sp
  1368 | 000009CB | EBCD                      | 	jmp	L_myinth_11
  1369 | 000009CD | 90                        | 	ALIGN	2
  1370 |          |                           | keyboardHandler:
  1371 |          |                           | 	; >>>>> Line:	33
  1372 |          |                           | 	; >>>>> void keyboardHandler() { 
  1373 | 000009CE | EB72                      | 	jmp	L_myinth_14
  1374 |          |                           | L_myinth_15:
  1375 |          |                           | 	; >>>>> Line:	37
  1376 |          |                           | 	; >>>>> if (KeyBuffer == 'd') { 
  1377 | 000009D0 | 833E[C000]64              | 	cmp	word [KeyBuffer], 100
  1378 | 000009D5 | 753B                      | 	jne	L_myinth_16
  1379 |          |                           | 	; >>>>> Line:	38
  1380 |          |                           | 	; >>>>> printNewLine(); 
  1381 | 000009D7 | E83CFA                    | 	call	printNewLine
  1382 |          |                           | 	; >>>>> Line:	39
  1383 |          |                           | 	; >>>>> print(delay, 17); 
  1384 | 000009DA | B81100                    | 	mov	ax, 17
  1385 | 000009DD | 50                        | 	push	ax
  1386 | 000009DE | B8[5D09]                  | 	mov	ax, L_myinth_4
  1387 | 000009E1 | 50                        | 	push	ax
  1388 | 000009E2 | E807FA                    | 	call	print
  1389 | 000009E5 | 83C404                    | 	add	sp, 4
  1390 |          |                           | 	; >>>>> Line:	40
  1391 |          |                           | 	; >>>>> printNewLine(); 
  1392 | 000009E8 | E82BFA                    | 	call	printNewLine
  1393 |          |                           | 	; >>>>> Line:	42
  1394 |          |                           | 	; >>>>> for (i = 0; i < 5000; i++); 
  1395 | 000009EB | C746FE0000                | 	mov	word [bp-2], 0
  1396 | 000009F0 | EB03                      | 	jmp	L_myinth_18
  1397 |          |                           | L_myinth_17:
  1398 |          |                           | L_myinth_20:
  1399 | 000009F2 | FF46FE                    | 	inc	word [bp-2]
  1400 |          |                           | L_myinth_18:
  1401 | 000009F5 | 817EFE8813                | 	cmp	word [bp-2], 5000
  1402 | 000009FA | 7CF6                      | 	jl	L_myinth_17
  1403 |          |                           | L_myinth_19:
  1404 |          |                           | 	; >>>>> Line:	44
  1405 |          |                           | 	; >>>>> printNewLine(); 
  1406 | 000009FC | E817FA                    | 	call	printNewLine
  1407 |          |                           | 	; >>>>> Line:	45
  1408 |          |                           | 	; >>>>> print(complete, 14); 
  1409 | 000009FF | B80E00                    | 	mov	ax, 14
  1410 | 00000A02 | 50                        | 	push	ax
  1411 | 00000A03 | B8[6E09]                  | 	mov	ax, L_myinth_5
  1412 | 00000A06 | 50                        | 	push	ax
  1413 | 00000A07 | E8E2F9                    | 	call	print
  1414 | 00000A0A | 83C404                    | 	add	sp, 4
  1415 |          |                           | 	; >>>>> Line:	46
  1416 |          |                           | 	; >>>>> printNewLine(); 
  1417 | 00000A0D | E806FA                    | 	call	printNewLine
  1418 | 00000A10 | EB2C                      | 	jmp	L_myinth_21
  1419 |          |                           | L_myinth_16:
  1420 |          |                           | 	; >>>>> Line:	49
  1421 |          |                           | 	; >>>>> printNewLin 
  1422 | 00000A12 | E801FA                    | 	call	printNewLine
  1423 |          |                           | 	; >>>>> Line:	50
  1424 |          |                           | 	; >>>>> print(keypress, 10); 
  1425 | 00000A15 | B80A00                    | 	mov	ax, 10
  1426 | 00000A18 | 50                        | 	push	ax
  1427 | 00000A19 | B8[4A09]                  | 	mov	ax, L_myinth_2
  1428 | 00000A1C | 50                        | 	push	ax
  1429 | 00000A1D | E8CCF9                    | 	call	print
  1430 | 00000A20 | 83C404                    | 	add	sp, 4
  1431 |          |                           | 	; >>>>> Line:	51
  1432 |          |                           | 	; >>>>> printChar((char) KeyBuffer); 
  1433 | 00000A23 | FF36[C000]                | 	push	word [KeyBuffer]
  1434 | 00000A27 | E8DAF9                    | 	call	printChar
  1435 | 00000A2A | 83C402                    | 	add	sp, 2
  1436 |          |                           | 	; >>>>> Line:	52
  1437 |          |                           | 	; >>>>> print(ignored, 9); 
  1438 | 00000A2D | B80900                    | 	mov	ax, 9
  1439 | 00000A30 | 50                        | 	push	ax
  1440 | 00000A31 | B8[5409]                  | 	mov	ax, L_myinth_3
  1441 | 00000A34 | 50                        | 	push	ax
  1442 | 00000A35 | E8B4F9                    | 	call	print
  1443 | 00000A38 | 83C404                    | 	add	sp, 4
  1444 |          |                           | 	; >>>>> Line:	53
  1445 |          |                           | 	; >>>>> printNewLine(); 
  1446 | 00000A3B | E8D8F9                    | 	call	printNewLine
  1447 |          |                           | L_myinth_21:
  1448 |          |                           | L_myinth_22:
  1449 |          |                           | 	; >>>>> Line:	56
  1450 |          |                           | 	; >>>>> return; 
  1451 | 00000A3E | 89EC                      | 	mov	sp, bp
  1452 | 00000A40 | 5D                        | 	pop	bp
  1453 | 00000A41 | C3                        | 	ret
  1454 |          |                           | L_myinth_14:
  1455 | 00000A42 | 55                        | 	push	bp
  1456 | 00000A43 | 89E5                      | 	mov	bp, sp
  1457 | 00000A45 | 51                        | 	push	cx
  1458 | 00000A46 | EB88                      | 	jmp	L_myinth_15
  1459 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from yakc.i
  1460 |          |                           | 	CPU	8086
  1461 |          |                           | 	ALIGN	2
  1462 | 00000A48 | E98B06                    | 	jmp	main	; Jump to program start
  1463 | 00000A4B | 90                        | 	ALIGN	2
  1464 |          |                           | YKCtxSwCount:
  1465 | 00000A4C | 0000                      | 	DW	0
  1466 |          |                           | YKIdleCount:
  1467 | 00000A4E | 0000                      | 	DW	0
  1468 |          |                           | YKTickCounter:
  1469 | 00000A50 | 0000                      | 	DW	0
  1470 |          |                           | L_yakc_1:
  1471 | 00000A52 | 0000                      | 	DW	0
  1472 |          |                           | L_yakc_4:
  1473 | 00000A54 | 0000                      | 	DW	0
  1474 |          |                           | 	ALIGN	2
  1475 |          |                           | YKEnterMutex:
  1476 |          |                           | 	; >>>>> Line:	25
  1477 |          |                           | 	; >>>>> void YKEnterMutex(void) { 
  1478 | 00000A56 | EB05                      | 	jmp	L_yakc_5
  1479 |          |                           | L_yakc_6:
  1480 |          |                           | 	; >>>>> Line:	28
  1481 |          |                           | 	; >>>>> asm("cli"); 
  1482 | 00000A58 | FA                        | 	cli
  1483 | 00000A59 | 89EC                      | 	mov	sp, bp
  1484 | 00000A5B | 5D                        | 	pop	bp
  1485 | 00000A5C | C3                        | 	ret
  1486 |          |                           | L_yakc_5:
  1487 | 00000A5D | 55                        | 	push	bp
  1488 | 00000A5E | 89E5                      | 	mov	bp, sp
  1489 | 00000A60 | EBF6                      | 	jmp	L_yakc_6
  1490 |          |                           | 	ALIGN	2
  1491 |          |                           | YKExitMutex:
  1492 |          |                           | 	; >>>>> Line:	32
  1493 |          |                           | 	; >>>>> void YKExitMutex(void) { 
  1494 | 00000A62 | EB05                      | 	jmp	L_yakc_8
  1495 |          |                           | L_yakc_9:
  1496 |          |                           | 	; >>>>> Line:	35
  1497 |          |                           | 	; >>>>> asm("sti"); 
  1498 | 00000A64 | FB                        | 	sti
  1499 | 00000A65 | 89EC                      | 	mov	sp, bp
  1500 | 00000A67 | 5D                        | 	pop	bp
  1501 | 00000A68 | C3                        | 	ret
  1502 |          |                           | L_yakc_8:
  1503 | 00000A69 | 55                        | 	push	bp
  1504 | 00000A6A | 89E5                      | 	mov	bp, sp
  1505 | 00000A6C | EBF6                      | 	jmp	L_yakc_9
  1506 |          |                           | 	ALIGN	2
  1507 |          |                           | YKEnterISR:
  1508 |          |                           | 	; >>>>> Line:	39
  1509 |          |                           | 	; >>>>> void YKEnterISR(void) { 
  1510 | 00000A6E | EB08                      | 	jmp	L_yakc_11
  1511 |          |                           | L_yakc_12:
  1512 |          |                           | 	; >>>>> Line:	41
  1513 |          |                           | 	; >>>>> ISRCallDepth++; 
  1514 | 00000A70 | FF06[520A]                | 	inc	word [L_yakc_1]
  1515 | 00000A74 | 89EC                      | 	mov	sp, bp
  1516 | 00000A76 | 5D                        | 	pop	bp
  1517 | 00000A77 | C3                        | 	ret
  1518 |          |                           | L_yakc_11:
  1519 | 00000A78 | 55                        | 	push	bp
  1520 | 00000A79 | 89E5                      | 	mov	bp, sp
  1521 | 00000A7B | EBF3                      | 	jmp	L_yakc_12
  1522 | 00000A7D | 90                        | 	ALIGN	2
  1523 |          |                           | YKExitISR:
  1524 |          |                           | 	; >>>>> Line:	45
  1525 |          |                           | 	; >>>>> void YKExitISR(void) { 
  1526 | 00000A7E | EB12                      | 	jmp	L_yakc_14
  1527 |          |                           | L_yakc_15:
  1528 |          |                           | 	; >>>>> Line:	47
  1529 |          |                           | 	; >>>>> ISRCallDepth--; 
  1530 | 00000A80 | FF0E[520A]                | 	dec	word [L_yakc_1]
  1531 |          |                           | 	; >>>>> Line:	48
  1532 |          |                           | 	; >>>>> if (ISRCallDepth == 0) YKScheduler(); 
  1533 | 00000A84 | A1[520A]                  | 	mov	ax, word [L_yakc_1]
  1534 | 00000A87 | 85C0                      | 	test	ax, ax
  1535 | 00000A89 | 7503                      | 	jne	L_yakc_16
  1536 |          |                           | 	; >>>>> Line:	48
  1537 |          |                           | 	; >>>>> if (ISRCallDepth == 0) YKScheduler(); 
  1538 | 00000A8B | E87200                    | 	call	YKScheduler
  1539 |          |                           | L_yakc_16:
  1540 | 00000A8E | 89EC                      | 	mov	sp, bp
  1541 | 00000A90 | 5D                        | 	pop	bp
  1542 | 00000A91 | C3                        | 	ret
  1543 |          |                           | L_yakc_14:
  1544 | 00000A92 | 55                        | 	push	bp
  1545 | 00000A93 | 89E5                      | 	mov	bp, sp
  1546 | 00000A95 | EBE9                      | 	jmp	L_yakc_15
  1547 | 00000A97 | 90                        | 	ALIGN	2
  1548 |          |                           | YKInitialize:
  1549 |          |                           | 	; >>>>> Line:	52
  1550 |          |                           | 	; >>>>> void YKInitialize(void) { 
  1551 | 00000A98 | EB2F                      | 	jmp	L_yakc_18
  1552 |          |                           | L_yakc_19:
  1553 |          |                           | 	; >>>>> Line:	54
  1554 |          |                           | 	; >>>>> YKEnterMutex(); 
  1555 | 00000A9A | E8B9FF                    | 	call	YKEnterMutex
  1556 |          |                           | 	; >>>>> Line:	57
  1557 |          |                           | 	; >>>>> initializeReadyQueue(); 
  1558 | 00000A9D | E85402                    | 	call	initializeReadyQueue
  1559 |          |                           | 	; >>>>> Line:	58
  1560 |          |                           | 	; >>>>> initializeDelayQueue(); 
  1561 | 00000AA0 | E84304                    | 	call	initializeDelayQueue
  1562 |          |                           | 	; >>>>> Line:	61
  1563 |          |                           | 	; >>>>> taskBlock.nextFreeTCB == 0; 
  1564 | 00000AA3 | A1[DA0C]                  | 	mov	ax, word [(70+L_yakc_2)]
  1565 | 00000AA6 | 85C0                      | 	test	ax, ax
  1566 | 00000AA8 | 7404                      | 	je	L_yakc_20
  1567 | 00000AAA | 31C0                      | 	xor	ax, ax
  1568 | 00000AAC | EB03                      | 	jmp	L_yakc_21
  1569 |          |                           | L_yakc_20:
  1570 | 00000AAE | B80100                    | 	mov	ax, 1
  1571 |          |                           | L_yakc_21:
  1572 |          |                           | 	; >>>>> Line:	65
  1573 |          |                           | 	; >>>>> YKNewTask(YKIdleTask, &idleTaskStack[10], 100); 
  1574 | 00000AB1 | B064                      | 	mov	al, 100
  1575 | 00000AB3 | 50                        | 	push	ax
  1576 | 00000AB4 | B8[F00C]                  | 	mov	ax, (L_yakc_3+20)
  1577 | 00000AB7 | 50                        | 	push	ax
  1578 | 00000AB8 | B8[DC0A]                  | 	mov	ax, YKIdleTask
  1579 | 00000ABB | 50                        | 	push	ax
  1580 | 00000ABC | E8A700                    | 	call	YKNewTask
  1581 | 00000ABF | 83C406                    | 	add	sp, 6
  1582 |          |                           | 	; >>>>> Line:	68
  1583 |          |                           | 	; >>>>> YKExitMutex(); 
  1584 | 00000AC2 | E89DFF                    | 	call	YKExitMutex
  1585 |          |                           | L_yakc_22:
  1586 |          |                           | 	; >>>>> Line:	69
  1587 |          |                           | 	; >>>>> return; 
  1588 | 00000AC5 | 89EC                      | 	mov	sp, bp
  1589 | 00000AC7 | 5D                        | 	pop	bp
  1590 | 00000AC8 | C3                        | 	ret
  1591 |          |                           | L_yakc_18:
  1592 | 00000AC9 | 55                        | 	push	bp
  1593 | 00000ACA | 89E5                      | 	mov	bp, sp
  1594 | 00000ACC | EBCC                      | 	jmp	L_yakc_19
  1595 |          |                           | L_yakc_24:
  1596 | 00000ACE | 49646C655461736B20-       | 	DB	"IdleTask ran",0xA,0
  1597 | 00000AD7 | 72616E0A00                | ...
  1598 |          |                           | 	ALIGN	2
  1599 |          |                           | YKIdleTask:
  1600 |          |                           | 	; >>>>> Line:	73
  1601 |          |                           | 	; >>>>> void YKIdleTask(void) { 
  1602 | 00000ADC | EB1C                      | 	jmp	L_yakc_25
  1603 |          |                           | L_yakc_26:
  1604 |          |                           | 	; >>>>> Line:	75
  1605 |          |                           | 	; >>>>> printString("IdleTas 
  1606 | 00000ADE | B8[CE0A]                  | 	mov	ax, L_yakc_24
  1607 | 00000AE1 | 50                        | 	push	ax
  1608 | 00000AE2 | E843F9                    | 	call	printString
  1609 | 00000AE5 | 83C402                    | 	add	sp, 2
  1610 |          |                           | 	; >>>>> Line:	77
  1611 |          |                           | 	; >>>>> while (1) { 
  1612 | 00000AE8 | EB0A                      | 	jmp	L_yakc_28
  1613 |          |                           | L_yakc_27:
  1614 |          |                           | 	; >>>>> Line:	78
  1615 |          |                           | 	; >>>>> YKEnterMutex(); 
  1616 | 00000AEA | E869FF                    | 	call	YKEnterMutex
  1617 |          |                           | 	; >>>>> Line:	79
  1618 |          |                           | 	; >>>>> YKIdleCount++; 
  1619 | 00000AED | FF06[4E0A]                | 	inc	word [YKIdleCount]
  1620 |          |                           | 	; >>>>> Line:	80
  1621 |          |                           | 	; >>>>> YKExitMutex(); 
  1622 | 00000AF1 | E86EFF                    | 	call	YKExitMutex
  1623 |          |                           | L_yakc_28:
  1624 | 00000AF4 | EBF4                      | 	jmp	L_yakc_27
  1625 |          |                           | L_yakc_29:
  1626 | 00000AF6 | 89EC                      | 	mov	sp, bp
  1627 | 00000AF8 | 5D                        | 	pop	bp
  1628 | 00000AF9 | C3                        | 	ret
  1629 |          |                           | L_yakc_25:
  1630 | 00000AFA | 55                        | 	push	bp
  1631 | 00000AFB | 89E5                      | 	mov	bp, sp
  1632 | 00000AFD | EBDF                      | 	jmp	L_yakc_26
  1633 | 00000AFF | 90                        | 	ALIGN	2
  1634 |          |                           | YKScheduler:
  1635 |          |                           | 	; >>>>> Line:	85
  1636 |          |                           | 	; >>>>> void YKScheduler(void) { 
  1637 | 00000B00 | EB5E                      | 	jmp	L_yakc_31
  1638 |          |                           | L_yakc_32:
  1639 |          |                           | 	; >>>>> Line:	89
  1640 |          |                           | 	; >>>>> YKEnterMutex(); 
  1641 | 00000B02 | E851FF                    | 	call	YKEnterMutex
  1642 |          |                           | 	; >>>>> Line:	90
  1643 |          |                           | 	; >>>>> if (kernelState == K_BLOCKED) return; 
  1644 | 00000B05 | A1[540A]                  | 	mov	ax, word [L_yakc_4]
  1645 | 00000B08 | 85C0                      | 	test	ax, ax
  1646 | 00000B0A | 7502                      | 	jne	L_yakc_33
  1647 |          |                           | 	; >>>>> Line:	90
  1648 |          |                           | 	; >>>>> if (kernelState == K_BLOCKED) return; 
  1649 | 00000B0C | EB4E                      | 	jmp	L_yakc_34
  1650 |          |                           | L_yakc_33:
  1651 |          |                           | 	; >>>>> Line:	91
  1652 |          |                           | 	; >>>>> readyTask = peekReadyQueue(); 
  1653 | 00000B0E | E84F03                    | 	call	peekReadyQueue
  1654 | 00000B11 | 8946FE                    | 	mov	word [bp-2], ax
  1655 |          |                           | 	; >>>>> Line:	92
  1656 |          |                           | 	; >>>>> if (readyTask == 0) exit(2); 
  1657 | 00000B14 | 8B46FE                    | 	mov	ax, word [bp-2]
  1658 | 00000B17 | 85C0                      | 	test	ax, ax
  1659 | 00000B19 | 7509                      | 	jne	L_yakc_35
  1660 |          |                           | 	; >>>>> Line:	92
  1661 |          |                           | 	; >>>>> if (readyTask == 0) exit(2); 
  1662 | 00000B1B | B002                      | 	mov	al, 2
  1663 | 00000B1D | 50                        | 	push	ax
  1664 | 00000B1E | E8B9F8                    | 	call	exit
  1665 | 00000B21 | 83C402                    | 	add	sp, 2
  1666 |          |                           | L_yakc_35:
  1667 |          |                           | 	; >>>>> Line:	93
  1668 |          |                           | 	; >>>>> if (readyTask != currentTask) { 
  1669 | 00000B24 | A1[880C]                  | 	mov	ax, word [currentTask]
  1670 | 00000B27 | 3B46FE                    | 	cmp	ax, word [bp-2]
  1671 | 00000B2A | 742D                      | 	je	L_yakc_36
  1672 |          |                           | 	; >>>>> Line:	94
  1673 |          |                           | 	; >>>>> currentTask->state = T_READY; 
  1674 | 00000B2C | 8B36[880C]                | 	mov	si, word [currentTask]
  1675 | 00000B30 | 83C606                    | 	add	si, 6
  1676 | 00000B33 | C7040100                  | 	mov	word [si], 1
  1677 |          |                           | 	; >>>>> Line:	95
  1678 |          |                           | 	; >>>>> currentTask = readyTask; 
  1679 | 00000B37 | 8B46FE                    | 	mov	ax, word [bp-2]
  1680 | 00000B3A | A3[880C]                  | 	mov	word [currentTask], ax
  1681 |          |                           | 	; >>>>> Line:	96
  1682 |          |                           | 	; >>>>> YKCtxSwCount++; 
  1683 | 00000B3D | FF06[4C0A]                | 	inc	word [YKCtxSwCount]
  1684 |          |                           | 	; >>>>> Line:	97
  1685 |          |                           | 	; >>>>> readyTask->state = T_RUNNING; 
  1686 | 00000B41 | 8B76FE                    | 	mov	si, word [bp-2]
  1687 | 00000B44 | 83C606                    | 	add	si, 6
  1688 | 00000B47 | C7040200                  | 	mov	word [si], 2
  1689 |          |                           | 	; >>>>> Line:	98
  1690 |          |                           | 	; >>>>> YKDispatcher(readyTask); 
  1691 | 00000B4B | FF76FE                    | 	push	word [bp-2]
  1692 | 00000B4E | E8DCFD                    | 	call	YKDispatcher
  1693 | 00000B51 | 83C402                    | 	add	sp, 2
  1694 |          |                           | 	; >>>>> Line:	99
  1695 |          |                           | 	; >>>>> YKExitMutex(); 
  1696 | 00000B54 | E80BFF                    | 	call	YKExitMutex
  1697 |          |                           | 	; >>>>> Line:	100
  1698 |          |                           | 	; >>>>> return; 
  1699 | 00000B57 | EB03                      | 	jmp	L_yakc_34
  1700 |          |                           | L_yakc_36:
  1701 |          |                           | 	; >>>>> Line:	102
  1702 |          |                           | 	; >>>>> YKExitMutex(); 
  1703 | 00000B59 | E806FF                    | 	call	YKExitMutex
  1704 |          |                           | L_yakc_34:
  1705 |          |                           | 	; >>>>> Line:	103
  1706 |          |                           | 	; >>>>> return; 
  1707 | 00000B5C | 89EC                      | 	mov	sp, bp
  1708 | 00000B5E | 5D                        | 	pop	bp
  1709 | 00000B5F | C3                        | 	ret
  1710 |          |                           | L_yakc_31:
  1711 | 00000B60 | 55                        | 	push	bp
  1712 | 00000B61 | 89E5                      | 	mov	bp, sp
  1713 | 00000B63 | 51                        | 	push	cx
  1714 | 00000B64 | EB9C                      | 	jmp	L_yakc_32
  1715 |          |                           | 	ALIGN	2
  1716 |          |                           | YKNewTask:
  1717 |          |                           | 	; >>>>> Line:	106
  1718 |          |                           | 	; >>>>> ], cx"); 
  1719 | 00000B66 | E98400                    | 	jmp	L_yakc_38
  1720 |          |                           | L_yakc_39:
  1721 |          |                           | 	; >>>>> Line:	114
  1722 |          |                           | 	; >>>>> newTask = getNewTCB(); 
  1723 | 00000B69 | E88800                    | 	call	getNewTCB
  1724 | 00000B6C | 8946FE                    | 	mov	word [bp-2], ax
  1725 |          |                           | 	; >>>>> Line:	115
  1726 |          |                           | 	; >>>>> if (newTask == 0) exit(1); 
  1727 | 00000B6F | 8B46FE                    | 	mov	ax, word [bp-2]
  1728 | 00000B72 | 85C0                      | 	test	ax, ax
  1729 | 00000B74 | 7509                      | 	jne	L_yakc_40
  1730 |          |                           | 	; >>>>> Line:	115
  1731 |          |                           | 	; >>>>> if (newTask == 0) exit(1); 
  1732 | 00000B76 | B001                      | 	mov	al, 1
  1733 | 00000B78 | 50                        | 	push	ax
  1734 | 00000B79 | E85EF8                    | 	call	exit
  1735 | 00000B7C | 83C402                    | 	add	sp, 2
  1736 |          |                           | L_yakc_40:
  1737 |          |                           | 	; >>>>> Line:	119
  1738 |          |                           | 	; >>>>> newTask->tid = 0; 
  1739 | 00000B7F | 8B76FE                    | 	mov	si, word [bp-2]
  1740 | 00000B82 | C7040000                  | 	mov	word [si], 0
  1741 |          |                           | 	; >>>>> Line:	120
  1742 |          |                           | 	; >>>>> newTask->priority = priority; 
  1743 | 00000B86 | 8B76FE                    | 	mov	si, word [bp-2]
  1744 | 00000B89 | 83C602                    | 	add	si, 2
  1745 | 00000B8C | 8A4608                    | 	mov	al, byte [bp+8]
  1746 | 00000B8F | 8804                      | 	mov	byte [si], al
  1747 |          |                           | 	; >>>>> Line:	121
  1748 |          |                           | 	; >>>>> newTask->stackPointer = ((void*)((int*) taskStack - 12)); 
  1749 | 00000B91 | 8B4606                    | 	mov	ax, word [bp+6]
  1750 | 00000B94 | 83E818                    | 	sub	ax, 24
  1751 | 00000B97 | 8B76FE                    | 	mov	si, word [bp-2]
  1752 | 00000B9A | 83C604                    | 	add	si, 4
  1753 | 00000B9D | 8904                      | 	mov	word [si], ax
  1754 |          |                           | 	; >>>>> Line:	122
  1755 |          |                           | 	; >>>>> newTask->state = T_READY; 
  1756 | 00000B9F | 8B76FE                    | 	mov	si, word [bp-2]
  1757 | 00000BA2 | 83C606                    | 	add	si, 6
  1758 | 00000BA5 | C7040100                  | 	mov	word [si], 1
  1759 |          |                           | 	; >>>>> Line:	123
  1760 |          |                           | 	; >>>>> newTask->delayCount = 0; 
  1761 | 00000BA9 | 8B76FE                    | 	mov	si, word [bp-2]
  1762 | 00000BAC | 83C608                    | 	add	si, 8
  1763 | 00000BAF | C7040000                  | 	mov	word [si], 0
  1764 |          |                           | 	; >>>>> Line:	124
  1765 |          |                           | 	; >>>>> newTask->next = 0; 
  1766 | 00000BB3 | 8B76FE                    | 	mov	si, word [bp-2]
  1767 | 00000BB6 | 83C60A                    | 	add	si, 10
  1768 | 00000BB9 | C7040000                  | 	mov	word [si], 0
  1769 |          |                           | 	; >>>>> Line:	125
  1770 |          |                           | 	; >>>>> newTask->prev = 0; 
  1771 | 00000BBD | 8B76FE                    | 	mov	si, word [bp-2]
  1772 | 00000BC0 | 83C60C                    | 	add	si, 12
  1773 | 00000BC3 | C7040000                  | 	mov	word [si], 0
  1774 |          |                           | 	; >>>>> Line:	129
  1775 |          |                           | 	; >>>>> asm("push bx"); 
  1776 | 00000BC7 | 53                        | 	push bx
  1777 |          |                           | 	; >>>>> Line:	130
  1778 |          |                           | 	; >>>>> asm("push cx"); 
  1779 | 00000BC8 | 51                        | 	push cx
  1780 |          |                           | 	; >>>>> Line:	131
  1781 |          |                           | 	; >>>>> asm("mov bx, [bp+6]"); 
  1782 | 00000BC9 | 8B5E06                    | 	mov bx, [bp+6]
  1783 |          |                           | 	; >>>>> Line:	132
  1784 |          |                           | 	; >>>>> asm("mov cx, [bp+4]"); 
  1785 | 00000BCC | 8B4E04                    | 	mov cx, [bp+4]
  1786 |          |                           | 	; >>>>> Line:	133
  1787 |          |                           | 	; >>>>> asm("mov [bx-2], word 0x0200"); 
  1788 | 00000BCF | C747FE0002                | 	mov [bx-2], word 0x0200
  1789 |          |                           | 	; >>>>> Line:	134
  1790 |          |                           | 	; >>>>> asm("mov [bx-4], word 0x0"); 
  1791 | 00000BD4 | C747FC0000                | 	mov [bx-4], word 0x0
  1792 |          |                           | 	; >>>>> Line:	135
  1793 |          |                           | 	; >>>>> asm("mov [bx-6], cx"); 
  1794 | 00000BD9 | 894FFA                    | 	mov [bx-6], cx
  1795 |          |                           | 	; >>>>> Line:	136
  1796 |          |                           | 	; >>>>> asm("pop cx"); 
  1797 | 00000BDC | 59                        | 	pop cx
  1798 |          |                           | 	; >>>>> Line:	137
  1799 |          |                           | 	; >>>>> asm("po 
  1800 | 00000BDD | 5B                        | 	pop bx
  1801 |          |                           | 	; >>>>> Line:	141
  1802 |          |                           | 	; >>>>> insertReadyQueue(newTask); 
  1803 | 00000BDE | FF76FE                    | 	push	word [bp-2]
  1804 | 00000BE1 | E82E01                    | 	call	insertReadyQueue
  1805 | 00000BE4 | 83C402                    | 	add	sp, 2
  1806 |          |                           | 	; >>>>> Line:	143
  1807 |          |                           | 	; >>>>> asm("int 0x20"); 
  1808 | 00000BE7 | CD20                      | 	int 0x20
  1809 |          |                           | L_yakc_41:
  1810 |          |                           | 	; >>>>> Line:	144
  1811 |          |                           | 	; >>>>> return; 
  1812 | 00000BE9 | 89EC                      | 	mov	sp, bp
  1813 | 00000BEB | 5D                        | 	pop	bp
  1814 | 00000BEC | C3                        | 	ret
  1815 |          |                           | L_yakc_38:
  1816 | 00000BED | 55                        | 	push	bp
  1817 | 00000BEE | 89E5                      | 	mov	bp, sp
  1818 | 00000BF0 | 51                        | 	push	cx
  1819 | 00000BF1 | E975FF                    | 	jmp	L_yakc_39
  1820 |          |                           | 	ALIGN	2
  1821 |          |                           | getNewTCB:
  1822 |          |                           | 	; >>>>> Line:	148
  1823 |          |                           | 	; >>>>> TCB* getNewTCB(void) { 
  1824 | 00000BF4 | EB26                      | 	jmp	L_yakc_43
  1825 |          |                           | L_yakc_44:
  1826 |          |                           | 	; >>>>> Line:	151
  1827 |          |                           | 	; >>>>> if (taskBlock.nextFreeTCB < 4 + 1) { 
  1828 | 00000BF6 | 833E[DA0C]05              | 	cmp	word [(70+L_yakc_2)], 5
  1829 | 00000BFB | 7319                      | 	jae	L_yakc_45
  1830 |          |                           | 	; >>>>> Line:	152
  1831 |          |                           | 	; >>>>> task = &taskBlock.TCBPool[taskBlock.nextFreeTCB]; 
  1832 | 00000BFD | A1[DA0C]                  | 	mov	ax, word [(70+L_yakc_2)]
  1833 | 00000C00 | B90E00                    | 	mov	cx, 14
  1834 | 00000C03 | F7E9                      | 	imul	cx
  1835 | 00000C05 | 05[940C]                  | 	add	ax, L_yakc_2
  1836 | 00000C08 | 8946FE                    | 	mov	word [bp-2], ax
  1837 |          |                           | 	; >>>>> Line:	153
  1838 |          |                           | 	; >>>>> taskBlock.nextFreeTCB++; 
  1839 | 00000C0B | FF06[DA0C]                | 	inc	word [(70+L_yakc_2)]
  1840 |          |                           | 	; >>>>> Line:	154
  1841 |          |                           | 	; >>>>> return task; 
  1842 | 00000C0F | 8B46FE                    | 	mov	ax, word [bp-2]
  1843 | 00000C12 | EB04                      | 	jmp	L_yakc_46
  1844 | 00000C14 | EB02                      | 	jmp	L_yakc_47
  1845 |          |                           | L_yakc_45:
  1846 |          |                           | 	; >>>>> Line:	156
  1847 |          |                           | 	; >>>>> return 0; 
  1848 | 00000C16 | 31C0                      | 	xor	ax, ax
  1849 |          |                           | L_yakc_47:
  1850 |          |                           | L_yakc_46:
  1851 | 00000C18 | 89EC                      | 	mov	sp, bp
  1852 | 00000C1A | 5D                        | 	pop	bp
  1853 | 00000C1B | C3                        | 	ret
  1854 |          |                           | L_yakc_43:
  1855 | 00000C1C | 55                        | 	push	bp
  1856 | 00000C1D | 89E5                      | 	mov	bp, sp
  1857 | 00000C1F | 51                        | 	push	cx
  1858 | 00000C20 | EBD4                      | 	jmp	L_yakc_44
  1859 |          |                           | 	ALIGN	2
  1860 |          |                           | YKRun:
  1861 |          |                           | 	; >>>>> Line:	161
  1862 |          |                           | 	; >>>>> void YKRun(void) { 
  1863 | 00000C22 | EB13                      | 	jmp	L_yakc_49
  1864 |          |                           | L_yakc_50:
  1865 |          |                           | 	; >>>>> Line:	163
  1866 |          |                           | 	; >>>>> YKEnterMutex(); 
  1867 | 00000C24 | E82FFE                    | 	call	YKEnterMutex
  1868 |          |                           | 	; >>>>> Line:	164
  1869 |          |                           | 	; >>>>> kernelState = K_RUNNING; 
  1870 | 00000C27 | C706[540A]0100            | 	mov	word [L_yakc_4], 1
  1871 |          |                           | 	; >>>>> Line:	165
  1872 |          |                           | 	; >>>>> YKScheduler(); 
  1873 | 00000C2D | E8D0FE                    | 	call	YKScheduler
  1874 |          |                           | 	; >>>>> Line:	166
  1875 |          |                           | 	; >>>>> YKExitMutex(); 
  1876 | 00000C30 | E82FFE                    | 	call	YKExitMutex
  1877 |          |                           | L_yakc_51:
  1878 |          |                           | 	; >>>>> Line:	167
  1879 |          |                           | 	; >>>>> return; 
  1880 | 00000C33 | 89EC                      | 	mov	sp, bp
  1881 | 00000C35 | 5D                        | 	pop	bp
  1882 | 00000C36 | C3                        | 	ret
  1883 |          |                           | L_yakc_49:
  1884 | 00000C37 | 55                        | 	push	bp
  1885 | 00000C38 | 89E5                      | 	mov	bp, sp
  1886 | 00000C3A | EBE8                      | 	jmp	L_yakc_50
  1887 |          |                           | 	ALIGN	2
  1888 |          |                           | YKDelayTask:
  1889 |          |                           | 	; >>>>> Line:	171
  1890 |          |                           | 	; >>>>> void YKDelayTask(unsigned int count) { 
  1891 | 00000C3C | EB35                      | 	jmp	L_yakc_53
  1892 |          |                           | L_yakc_54:
  1893 |          |                           | 	; >>>>> Line:	175
  1894 |          |                           | 	; >>>>> if (count == 0) return; 
  1895 | 00000C3E | 8B4604                    | 	mov	ax, word [bp+4]
  1896 | 00000C41 | 85C0                      | 	test	ax, ax
  1897 | 00000C43 | 7502                      | 	jne	L_yakc_55
  1898 |          |                           | 	; >>>>> Line:	175
  1899 |          |                           | 	; >>>>> if (count == 0) return; 
  1900 | 00000C45 | EB28                      | 	jmp	L_yakc_56
  1901 |          |                           | L_yakc_55:
  1902 |          |                           | 	; >>>>> Line:	177
  1903 |          |                           | 	; >>>>> currentTask->state = T_BLOCKED; 
  1904 | 00000C47 | 8B36[880C]                | 	mov	si, word [currentTask]
  1905 | 00000C4B | 83C606                    | 	add	si, 6
  1906 | 00000C4E | C7040000                  | 	mov	word [si], 0
  1907 |          |                           | 	; >>>>> Line:	178
  1908 |          |                           | 	; >>>>> currentT 
  1909 | 00000C52 | 8B36[880C]                | 	mov	si, word [currentTask]
  1910 | 00000C56 | 83C608                    | 	add	si, 8
  1911 | 00000C59 | 8B4604                    | 	mov	ax, word [bp+4]
  1912 | 00000C5C | 8904                      | 	mov	word [si], ax
  1913 |          |                           | 	; >>>>> Line:	179
  1914 |          |                           | 	; >>>>> delayedTask = removeReadyQueue(); 
  1915 | 00000C5E | E81B02                    | 	call	removeReadyQueue
  1916 | 00000C61 | 8946FE                    | 	mov	word [bp-2], ax
  1917 |          |                           | 	; >>>>> Line:	180
  1918 |          |                           | 	; >>>>> insertDelayQueue(delayedTask); 
  1919 | 00000C64 | FF76FE                    | 	push	word [bp-2]
  1920 | 00000C67 | E82803                    | 	call	insertDelayQueue
  1921 | 00000C6A | 83C402                    | 	add	sp, 2
  1922 |          |                           | 	; >>>>> Line:	181
  1923 |          |                           | 	; >>>>> asm("int 0x20"); 
  1924 | 00000C6D | CD20                      | 	int 0x20
  1925 |          |                           | L_yakc_56:
  1926 |          |                           | 	; >>>>> Line:	182
  1927 |          |                           | 	; >>>>> return; 
  1928 | 00000C6F | 89EC                      | 	mov	sp, bp
  1929 | 00000C71 | 5D                        | 	pop	bp
  1930 | 00000C72 | C3                        | 	ret
  1931 |          |                           | L_yakc_53:
  1932 | 00000C73 | 55                        | 	push	bp
  1933 | 00000C74 | 89E5                      | 	mov	bp, sp
  1934 | 00000C76 | 51                        | 	push	cx
  1935 | 00000C77 | EBC5                      | 	jmp	L_yakc_54
  1936 | 00000C79 | 90                        | 	ALIGN	2
  1937 |          |                           | YKTickHandler:
  1938 |          |                           | 	; >>>>> Line:	186
  1939 |          |                           | 	; >>>>> void YKTickHandler(void) { 
  1940 | 00000C7A | EB07                      | 	jmp	L_yakc_58
  1941 |          |                           | L_yakc_59:
  1942 |          |                           | 	; >>>>> Line:	188
  1943 |          |                           | 	; >>>>> tickClock(); 
  1944 | 00000C7C | E87F02                    | 	call	tickClock
  1945 | 00000C7F | 89EC                      | 	mov	sp, bp
  1946 | 00000C81 | 5D                        | 	pop	bp
  1947 | 00000C82 | C3                        | 	ret
  1948 |          |                           | L_yakc_58:
  1949 | 00000C83 | 55                        | 	push	bp
  1950 | 00000C84 | 89E5                      | 	mov	bp, sp
  1951 | 00000C86 | EBF4                      | 	jmp	L_yakc_59
  1952 |          |                           | 	ALIGN	2
  1953 |          |                           | currentTask:
  1954 | 00000C88 | 00<rept>                  | 	TIMES	2 db 0
  1955 |          |                           | readyQueue:
  1956 | 00000C8A | 00<rept>                  | 	TIMES	6 db 0
  1957 |          |                           | delayQueue:
  1958 | 00000C90 | 00<rept>                  | 	TIMES	4 db 0
  1959 |          |                           | L_yakc_2:
  1960 | 00000C94 | 00<rept>                  | 	TIMES	72 db 0
  1961 |          |                           | L_yakc_3:
  1962 | 00000CDC | 00<rept>                  | 	TIMES	20 db 0
  1963 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from ReadyQueue.i
  1964 |          |                           | 	CPU	8086
  1965 |          |                           | 	ALIGN	2
  1966 | 00000CF0 | E9E303                    | 	jmp	main	; Jump to program start
  1967 | 00000CF3 | 90                        | 	ALIGN	2
  1968 |          |                           | initializeReadyQueue:
  1969 |          |                           | 	; >>>>> Line:	7
  1970 |          |                           | 	; >>>>> void initializeReadyQueue() { 
  1971 | 00000CF4 | EB16                      | 	jmp	L_ReadyQueue_1
  1972 |          |                           | L_ReadyQueue_2:
  1973 |          |                           | 	; >>>>> Line:	8
  1974 |          |                           | 	; >>>>> readyQueue.size = 0; 
  1975 | 00000CF6 | C706[8E0C]0000            | 	mov	word [(4+readyQueue)], 0
  1976 |          |                           | 	; >>>>> Line:	9
  1977 |          |                           | 	; >>>>> readyQueue.head = 0; 
  1978 | 00000CFC | C706[8A0C]0000            | 	mov	word [readyQueue], 0
  1979 |          |                           | 	; >>>>> Line:	10
  1980 |          |                           | 	; >>>>> readyQueue.tail = 0; 
  1981 | 00000D02 | C706[8C0C]0000            | 	mov	word [(2+readyQueue)], 0
  1982 | 00000D08 | 89EC                      | 	mov	sp, bp
  1983 | 00000D0A | 5D                        | 	pop	bp
  1984 | 00000D0B | C3                        | 	ret
  1985 |          |                           | L_ReadyQueue_1:
  1986 | 00000D0C | 55                        | 	push	bp
  1987 | 00000D0D | 89E5                      | 	mov	bp, sp
  1988 | 00000D0F | EBE5                      | 	jmp	L_ReadyQueue_2
  1989 | 00000D11 | 90                        | 	ALIGN	2
  1990 |          |                           | insertReadyQueue:
  1991 |          |                           | 	; >>>>> Line:	13
  1992 |          |                           | 	; >>>>> void insertReadyQueue(TCB* tcb) { 
  1993 | 00000D12 | E94401                    | 	jmp	L_ReadyQueue_4
  1994 |          |                           | L_ReadyQueue_5:
  1995 |          |                           | 	; >>>>> Line:	17
  1996 |          |                           | 	; >>>>> if(tcb == 0) return; 
  1997 | 00000D15 | 8B4604                    | 	mov	ax, word [bp+4]
  1998 | 00000D18 | 85C0                      | 	test	ax, ax
  1999 | 00000D1A | 7503                      | 	jne	L_ReadyQueue_6
  2000 |          |                           | 	; >>>>> Line:	17
  2001 |          |                           | 	; >>>>> if(tcb == 0) return; 
  2002 | 00000D1C | E93601                    | 	jmp	L_ReadyQueue_7
  2003 |          |                           | L_ReadyQueue_6:
  2004 |          |                           | 	; >>>>> Line:	20
  2005 |          |                           | 	; >>>>> if (readyQueue.size == 0) { 
  2006 | 00000D1F | A1[8E0C]                  | 	mov	ax, word [(4+readyQueue)]
  2007 | 00000D22 | 85C0                      | 	test	ax, ax
  2008 | 00000D24 | 7526                      | 	jne	L_ReadyQueue_8
  2009 |          |                           | 	; >>>>> Line:	21
  2010 |          |                           | 	; >>>>> readyQueue.head = tcb; 
  2011 | 00000D26 | 8B4604                    | 	mov	ax, word [bp+4]
  2012 | 00000D29 | A3[8A0C]                  | 	mov	word [readyQueue], ax
  2013 |          |                           | 	; >>>>> Line:	22
  2014 |          |                           | 	; >>>>> readyQueue.tail = tcb; 
  2015 | 00000D2C | A3[8C0C]                  | 	mov	word [(2+readyQueue)], ax
  2016 |          |                           | 	; >>>>> Line:	23
  2017 |          |                           | 	; >>>>> tcb->next = 0; 
  2018 | 00000D2F | 8B7604                    | 	mov	si, word [bp+4]
  2019 | 00000D32 | 83C60A                    | 	add	si, 10
  2020 | 00000D35 | C7040000                  | 	mov	word [si], 0
  2021 |          |                           | 	; >>>>> Line:	24
  2022 |          |                           | 	; >>>>> tcb->prev = 0; 
  2023 | 00000D39 | 8B7604                    | 	mov	si, word [bp+4]
  2024 | 00000D3C | 83C60C                    | 	add	si, 12
  2025 | 00000D3F | C7040000                  | 	mov	word [si], 0
  2026 |          |                           | 	; >>>>> Line:	25
  2027 |          |                           | 	; >>>>> readyQueue.size = 1; 
  2028 | 00000D43 | C706[8E0C]0100            | 	mov	word [(4+readyQueue)], 1
  2029 |          |                           | 	; >>>>> Line:	29
  2030 |          |                           | 	; >>>>> return; 
  2031 | 00000D49 | E90901                    | 	jmp	L_ReadyQueue_7
  2032 |          |                           | L_ReadyQueue_8:
  2033 |          |                           | 	; >>>>> Line:	33
  2034 |          |                           | 	; >>>>> if (readyQueue.size == 1) { 
  2035 | 00000D4C | 833E[8E0C]01              | 	cmp	word [(4+readyQueue)], 1
  2036 | 00000D51 | 7571                      | 	jne	L_ReadyQueue_9
  2037 |          |                           | 	; >>>>> Line:	34
  2038 |          |                           | 	; >>>>> if (readyQueue.head->priority < tcb->priority) { 
  2039 | 00000D53 | 8B36[8A0C]                | 	mov	si, word [readyQueue]
  2040 | 00000D57 | 83C602                    | 	add	si, 2
  2041 | 00000D5A | 8B7E04                    | 	mov	di, word [bp+4]
  2042 | 00000D5D | 83C702                    | 	add	di, 2
  2043 | 00000D60 | 8A05                      | 	mov	al, byte [di]
  2044 | 00000D62 | 3A04                      | 	cmp	al, byte [si]
  2045 | 00000D64 | 7630                      | 	jbe	L_ReadyQueue_10
  2046 |          |                           | 	; >>>>> Line:	35
  2047 |          |                           | 	; >>>>> readyQueue.head->next = tcb; 
  2048 | 00000D66 | 8B36[8A0C]                | 	mov	si, word [readyQueue]
  2049 | 00000D6A | 83C60A                    | 	add	si, 10
  2050 | 00000D6D | 8B4604                    | 	mov	ax, word [bp+4]
  2051 | 00000D70 | 8904                      | 	mov	word [si], ax
  2052 |          |                           | 	; >>>>> Line:	36
  2053 |          |                           | 	; >>>>> tcb->prev = readyQueue.head; 
  2054 | 00000D72 | 8B7604                    | 	mov	si, word [bp+4]
  2055 | 00000D75 | 83C60C                    | 	add	si, 12
  2056 | 00000D78 | A1[8A0C]                  | 	mov	ax, word [readyQueue]
  2057 | 00000D7B | 8904                      | 	mov	word [si], ax
  2058 |          |                           | 	; >>>>> Line:	37
  2059 |          |                           | 	; >>>>> tcb->next = 0; 
  2060 | 00000D7D | 8B7604                    | 	mov	si, word [bp+4]
  2061 | 00000D80 | 83C60A                    | 	add	si, 10
  2062 | 00000D83 | C7040000                  | 	mov	word [si], 0
  2063 |          |                           | 	; >>>>> Line:	38
  2064 |          |                           | 	; >>>>> readyQueue.tail = tcb; 
  2065 | 00000D87 | 8B4604                    | 	mov	ax, word [bp+4]
  2066 | 00000D8A | A3[8C0C]                  | 	mov	word [(2+readyQueue)], ax
  2067 |          |                           | 	; >>>>> Line:	39
  2068 |          |                           | 	; >>>>> readyQueue.size++; 
  2069 | 00000D8D | FF06[8E0C]                | 	inc	word [(4+readyQueue)]
  2070 |          |                           | 	; >>>>> Line:	40
  2071 |          |                           | 	; >>>>> return; 
  2072 | 00000D91 | E9C100                    | 	jmp	L_ReadyQueue_7
  2073 | 00000D94 | EB2E                      | 	jmp	L_ReadyQueue_11
  2074 |          |                           | L_ReadyQueue_10:
  2075 |          |                           | 	; >>>>> Line:	42
  2076 |          |                           | 	; >>>>> tcb->next = readyQueue.head; 
  2077 | 00000D96 | 8B7604                    | 	mov	si, word [bp+4]
  2078 | 00000D99 | 83C60A                    | 	add	si, 10
  2079 | 00000D9C | A1[8A0C]                  | 	mov	ax, word [readyQueue]
  2080 | 00000D9F | 8904                      | 	mov	word [si], ax
  2081 |          |                           | 	; >>>>> Line:	43
  2082 |          |                           | 	; >>>>> tcb->prev = 0; 
  2083 | 00000DA1 | 8B7604                    | 	mov	si, word [bp+4]
  2084 | 00000DA4 | 83C60C                    | 	add	si, 12
  2085 | 00000DA7 | C7040000                  | 	mov	word [si], 0
  2086 |          |                           | 	; >>>>> Line:	44
  2087 |          |                           | 	; >>>>> readyQueue.tail->prev = tcb; 
  2088 | 00000DAB | 8B36[8C0C]                | 	mov	si, word [(2+readyQueue)]
  2089 | 00000DAF | 83C60C                    | 	add	si, 12
  2090 | 00000DB2 | 8B4604                    | 	mov	ax, word [bp+4]
  2091 | 00000DB5 | 8904                      | 	mov	word [si], ax
  2092 |          |                           | 	; >>>>> Line:	45
  2093 |          |                           | 	; >>>>> readyQueue.head = tcb; 
  2094 | 00000DB7 | 8B4604                    | 	mov	ax, word [bp+4]
  2095 | 00000DBA | A3[8A0C]                  | 	mov	word [readyQueue], ax
  2096 |          |                           | 	; >>>>> Line:	46
  2097 |          |                           | 	; >>>>> readyQueue.size++; 
  2098 | 00000DBD | FF06[8E0C]                | 	inc	word [(4+readyQueue)]
  2099 |          |                           | 	; >>>>> Line:	50
  2100 |          |                           | 	; >>>>> return; 
  2101 | 00000DC1 | E99100                    | 	jmp	L_ReadyQueue_7
  2102 |          |                           | L_ReadyQueue_11:
  2103 |          |                           | L_ReadyQueue_9:
  2104 |          |                           | 	; >>>>> Line:	56
  2105 |          |                           | 	; >>>>> temp = readyQueue.head; 
  2106 | 00000DC4 | A1[8A0C]                  | 	mov	ax, word [readyQueue]
  2107 | 00000DC7 | 8946FE                    | 	mov	word [bp-2], ax
  2108 |          |                           | 	; >>>>> Line:	57
  2109 |          |                           | 	; >>>>> while (temp != 0) { 
  2110 | 00000DCA | EB57                      | 	jmp	L_ReadyQueue_13
  2111 |          |                           | L_ReadyQueue_12:
  2112 |          |                           | 	; >>>>> Line:	58
  2113 |          |                           | 	; >>>>> if (temp->priority > tcb->priority) { 
  2114 | 00000DCC | 8B76FE                    | 	mov	si, word [bp-2]
  2115 | 00000DCF | 83C602                    | 	add	si, 2
  2116 | 00000DD2 | 8B7E04                    | 	mov	di, word [bp+4]
  2117 | 00000DD5 | 83C702                    | 	add	di, 2
  2118 | 00000DD8 | 8A05                      | 	mov	al, byte [di]
  2119 | 00000DDA | 3A04                      | 	cmp	al, byte [si]
  2120 | 00000DDC | 733A                      | 	jae	L_ReadyQueue_15
  2121 |          |                           | 	; >>>>> Line:	59
  2122 |          |                           | 	; >>>>> tcb->next = temp; 
  2123 | 00000DDE | 8B7604                    | 	mov	si, word [bp+4]
  2124 | 00000DE1 | 83C60A                    | 	add	si, 10
  2125 | 00000DE4 | 8B46FE                    | 	mov	ax, word [bp-2]
  2126 | 00000DE7 | 8904                      | 	mov	word [si], ax
  2127 |          |                           | 	; >>>>> Line:	60
  2128 |          |                           | 	; >>>>> tcb->prev = temp->prev; 
  2129 | 00000DE9 | 8B76FE                    | 	mov	si, word [bp-2]
  2130 | 00000DEC | 83C60C                    | 	add	si, 12
  2131 | 00000DEF | 8B7E04                    | 	mov	di, word [bp+4]
  2132 | 00000DF2 | 83C70C                    | 	add	di, 12
  2133 | 00000DF5 | 8B04                      | 	mov	ax, word [si]
  2134 | 00000DF7 | 8905                      | 	mov	word [di], ax
  2135 |          |                           | 	; >>>>> Line:	61
  2136 |          |                           | 	; >>>>> temp->prev = tcb; 
  2137 | 00000DF9 | 8B76FE                    | 	mov	si, word [bp-2]
  2138 | 00000DFC | 83C60C                    | 	add	si, 12
  2139 | 00000DFF | 8B4604                    | 	mov	ax, word [bp+4]
  2140 | 00000E02 | 8904                      | 	mov	word [si], ax
  2141 |          |                           | 	; >>>>> Line:	62
  2142 |          |                           | 	; >>>>> if (temp == readyQueue.head) readyQueue.head = tcb; 
  2143 | 00000E04 | A1[8A0C]                  | 	mov	ax, word [readyQueue]
  2144 | 00000E07 | 3B46FE                    | 	cmp	ax, word [bp-2]
  2145 | 00000E0A | 7506                      | 	jne	L_ReadyQueue_16
  2146 |          |                           | 	; >>>>> Line:	62
  2147 |          |                           | 	; >>>>> if (temp == readyQueue.head) readyQueue.head = tcb; 
  2148 | 00000E0C | 8B4604                    | 	mov	ax, word [bp+4]
  2149 | 00000E0F | A3[8A0C]                  | 	mov	word [readyQueue], ax
  2150 |          |                           | L_ReadyQueue_16:
  2151 |          |                           | 	; >>>>> Line:	63
  2152 |          |                           | 	; >>>>> readyQueue.size++; 
  2153 | 00000E12 | FF06[8E0C]                | 	inc	word [(4+readyQueue)]
  2154 |          |                           | 	; >>>>> Line:	64
  2155 |          |                           | 	; >>>>> retValu 
  2156 | 00000E16 | EB3D                      | 	jmp	L_ReadyQueue_7
  2157 |          |                           | L_ReadyQueue_15:
  2158 |          |                           | 	; >>>>> Line:	66
  2159 |          |                           | 	; >>>>> temp = temp->next; 
  2160 | 00000E18 | 8B76FE                    | 	mov	si, word [bp-2]
  2161 | 00000E1B | 83C60A                    | 	add	si, 10
  2162 | 00000E1E | 8B04                      | 	mov	ax, word [si]
  2163 | 00000E20 | 8946FE                    | 	mov	word [bp-2], ax
  2164 |          |                           | L_ReadyQueue_13:
  2165 | 00000E23 | 8B46FE                    | 	mov	ax, word [bp-2]
  2166 | 00000E26 | 85C0                      | 	test	ax, ax
  2167 | 00000E28 | 75A2                      | 	jne	L_ReadyQueue_12
  2168 |          |                           | L_ReadyQueue_14:
  2169 |          |                           | 	; >>>>> Line:	70
  2170 |          |                           | 	; >>>>> readyQueue.tail->next = tcb; 
  2171 | 00000E2A | 8B36[8C0C]                | 	mov	si, word [(2+readyQueue)]
  2172 | 00000E2E | 83C60A                    | 	add	si, 10
  2173 | 00000E31 | 8B4604                    | 	mov	ax, word [bp+4]
  2174 | 00000E34 | 8904                      | 	mov	word [si], ax
  2175 |          |                           | 	; >>>>> Line:	71
  2176 |          |                           | 	; >>>>> tcb->prev = readyQueue.tail; 
  2177 | 00000E36 | 8B7604                    | 	mov	si, word [bp+4]
  2178 | 00000E39 | 83C60C                    | 	add	si, 12
  2179 | 00000E3C | A1[8C0C]                  | 	mov	ax, word [(2+readyQueue)]
  2180 | 00000E3F | 8904                      | 	mov	word [si], ax
  2181 |          |                           | 	; >>>>> Line:	72
  2182 |          |                           | 	; >>>>> readyQueue.tail = tcb; 
  2183 | 00000E41 | 8B4604                    | 	mov	ax, word [bp+4]
  2184 | 00000E44 | A3[8C0C]                  | 	mov	word [(2+readyQueue)], ax
  2185 |          |                           | 	; >>>>> Line:	73
  2186 |          |                           | 	; >>>>> tcb->next = 0; 
  2187 | 00000E47 | 8B7604                    | 	mov	si, word [bp+4]
  2188 | 00000E4A | 83C60A                    | 	add	si, 10
  2189 | 00000E4D | C7040000                  | 	mov	word [si], 0
  2190 |          |                           | 	; >>>>> Line:	74
  2191 |          |                           | 	; >>>>> readyQueue.size++; 
  2192 | 00000E51 | FF06[8E0C]                | 	inc	word [(4+readyQueue)]
  2193 |          |                           | L_ReadyQueue_7:
  2194 |          |                           | 	; >>>>> Line:	75
  2195 |          |                           | 	; >>>>> return; 
  2196 | 00000E55 | 89EC                      | 	mov	sp, bp
  2197 | 00000E57 | 5D                        | 	pop	bp
  2198 | 00000E58 | C3                        | 	ret
  2199 |          |                           | L_ReadyQueue_4:
  2200 | 00000E59 | 55                        | 	push	bp
  2201 | 00000E5A | 89E5                      | 	mov	bp, sp
  2202 | 00000E5C | 51                        | 	push	cx
  2203 | 00000E5D | E9B5FE                    | 	jmp	L_ReadyQueue_5
  2204 |          |                           | 	ALIGN	2
  2205 |          |                           | peekReadyQueue:
  2206 |          |                           | 	; >>>>> Line:	79
  2207 |          |                           | 	; >>>>> TCB* peekReadyQueue() { 
  2208 | 00000E60 | EB14                      | 	jmp	L_ReadyQueue_18
  2209 |          |                           | L_ReadyQueue_19:
  2210 |          |                           | 	; >>>>> Line:	81
  2211 |          |                           | 	; >>>>> if (readyQueue.size == 0) { 
  2212 | 00000E62 | A1[8E0C]                  | 	mov	ax, word [(4+readyQueue)]
  2213 | 00000E65 | 85C0                      | 	test	ax, ax
  2214 | 00000E67 | 7506                      | 	jne	L_ReadyQueue_20
  2215 |          |                           | 	; >>>>> Line:	82
  2216 |          |                           | 	; >>>>> return 0; 
  2217 | 00000E69 | 31C0                      | 	xor	ax, ax
  2218 | 00000E6B | EB05                      | 	jmp	L_ReadyQueue_21
  2219 | 00000E6D | EB03                      | 	jmp	L_ReadyQueue_22
  2220 |          |                           | L_ReadyQueue_20:
  2221 |          |                           | 	; >>>>> Line:	84
  2222 |          |                           | 	; >>>>> return readyQueue.head; 
  2223 | 00000E6F | A1[8A0C]                  | 	mov	ax, word [readyQueue]
  2224 |          |                           | L_ReadyQueue_22:
  2225 |          |                           | L_ReadyQueue_21:
  2226 | 00000E72 | 89EC                      | 	mov	sp, bp
  2227 | 00000E74 | 5D                        | 	pop	bp
  2228 | 00000E75 | C3                        | 	ret
  2229 |          |                           | L_ReadyQueue_18:
  2230 | 00000E76 | 55                        | 	push	bp
  2231 | 00000E77 | 89E5                      | 	mov	bp, sp
  2232 | 00000E79 | EBE7                      | 	jmp	L_ReadyQueue_19
  2233 | 00000E7B | 90                        | 	ALIGN	2
  2234 |          |                           | removeReadyQueue:
  2235 |          |                           | 	; >>>>> Line:	89
  2236 |          |                           | 	; >>>>> TCB* removeReadyQueue() { 
  2237 | 00000E7C | EB5E                      | 	jmp	L_ReadyQueue_24
  2238 |          |                           | L_ReadyQueue_25:
  2239 |          |                           | 	; >>>>> Line:	94
  2240 |          |                           | 	; >>>>> if (readyQueue.size == 0) { 
  2241 | 00000E7E | A1[8E0C]                  | 	mov	ax, word [(4+readyQueue)]
  2242 | 00000E81 | 85C0                      | 	test	ax, ax
  2243 | 00000E83 | 7504                      | 	jne	L_ReadyQueue_26
  2244 |          |                           | 	; >>>>> Line:	95
  2245 |          |                           | 	; >>>>> return 0; 
  2246 | 00000E85 | 31C0                      | 	xor	ax, ax
  2247 | 00000E87 | EB4F                      | 	jmp	L_ReadyQueue_27
  2248 |          |                           | L_ReadyQueue_26:
  2249 |          |                           | 	; >>>>> Line:	99
  2250 |          |                           | 	; >>>>> if (readyQueue.size == 1) { 
  2251 | 00000E89 | 833E[8E0C]01              | 	cmp	word [(4+readyQueue)], 1
  2252 | 00000E8E | 751B                      | 	jne	L_ReadyQueue_28
  2253 |          |                           | 	; >>>>> Line:	102
  2254 |          |                           | 	; >>>>> retValue = readyQueue.head; 
  2255 | 00000E90 | A1[8A0C]                  | 	mov	ax, word [readyQueue]
  2256 | 00000E93 | 8946FE                    | 	mov	word [bp-2], ax
  2257 |          |                           | 	; >>>>> Line:	103
  2258 |          |                           | 	; >>>>> readyQueue.size--; 
  2259 | 00000E96 | FF0E[8E0C]                | 	dec	word [(4+readyQueue)]
  2260 |          |                           | 	; >>>>> Line:	104
  2261 |          |                           | 	; >>>>> readyQueue.head = 0; 
  2262 | 00000E9A | C706[8A0C]0000            | 	mov	word [readyQueue], 0
  2263 |          |                           | 	; >>>>> Line:	105
  2264 |          |                           | 	; >>>>> readyQueue.tail = 0; 
  2265 | 00000EA0 | C706[8C0C]0000            | 	mov	word [(2+readyQueue)], 0
  2266 |          |                           | 	; >>>>> Line:	106
  2267 |          |                           | 	; >>>>> return retValu 
  2268 | 00000EA6 | 8B46FE                    | 	mov	ax, word [bp-2]
  2269 | 00000EA9 | EB2D                      | 	jmp	L_ReadyQueue_27
  2270 |          |                           | L_ReadyQueue_28:
  2271 |          |                           | 	; >>>>> Line:	112
  2272 |          |                           | 	; >>>>> retValue = readyQueue.head; 
  2273 | 00000EAB | A1[8A0C]                  | 	mov	ax, word [readyQueue]
  2274 | 00000EAE | 8946FE                    | 	mov	word [bp-2], ax
  2275 |          |                           | 	; >>>>> Line:	113
  2276 |          |                           | 	; >>>>> readyQueue.head = readyQueue.head->next; 
  2277 | 00000EB1 | 8B36[8A0C]                | 	mov	si, word [readyQueue]
  2278 | 00000EB5 | 83C60A                    | 	add	si, 10
  2279 | 00000EB8 | 8B04                      | 	mov	ax, word [si]
  2280 | 00000EBA | A3[8A0C]                  | 	mov	word [readyQueue], ax
  2281 |          |                           | 	; >>>>> Line:	114
  2282 |          |                           | 	; >>>>> readyQueue.size--; 
  2283 | 00000EBD | FF0E[8E0C]                | 	dec	word [(4+readyQueue)]
  2284 |          |                           | 	; >>>>> Line:	115
  2285 |          |                           | 	; >>>>> retValue->next = 0; 
  2286 | 00000EC1 | 8B76FE                    | 	mov	si, word [bp-2]
  2287 | 00000EC4 | 83C60A                    | 	add	si, 10
  2288 | 00000EC7 | C7040000                  | 	mov	word [si], 0
  2289 |          |                           | 	; >>>>> Line:	116
  2290 |          |                           | 	; >>>>> retValue->prev = 0; 
  2291 | 00000ECB | 8B76FE                    | 	mov	si, word [bp-2]
  2292 | 00000ECE | 83C60C                    | 	add	si, 12
  2293 | 00000ED1 | C7040000                  | 	mov	word [si], 0
  2294 |          |                           | 	; >>>>> Line:	117
  2295 |          |                           | 	; >>>>> return retValue; 
  2296 | 00000ED5 | 8B46FE                    | 	mov	ax, word [bp-2]
  2297 |          |                           | L_ReadyQueue_27:
  2298 | 00000ED8 | 89EC                      | 	mov	sp, bp
  2299 | 00000EDA | 5D                        | 	pop	bp
  2300 | 00000EDB | C3                        | 	ret
  2301 |          |                           | L_ReadyQueue_24:
  2302 | 00000EDC | 55                        | 	push	bp
  2303 | 00000EDD | 89E5                      | 	mov	bp, sp
  2304 | 00000EDF | 51                        | 	push	cx
  2305 | 00000EE0 | EB9C                      | 	jmp	L_ReadyQueue_25
  2306 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from DelayQueue.i
  2307 |          |                           | 	CPU	8086
  2308 |          |                           | 	ALIGN	2
  2309 | 00000EE2 | E9F101                    | 	jmp	main	; Jump to program start
  2310 | 00000EE5 | 90                        | 	ALIGN	2
  2311 |          |                           | initializeDelayQueue:
  2312 |          |                           | 	; >>>>> Line:	8
  2313 |          |                           | 	; >>>>> void initializeDelayQueue() { 
  2314 | 00000EE6 | EB10                      | 	jmp	L_DelayQueue_1
  2315 |          |                           | L_DelayQueue_2:
  2316 |          |                           | 	; >>>>> Line:	9
  2317 |          |                           | 	; >>>>> delayQueue.size = 0; 
  2318 | 00000EE8 | C706[920C]0000            | 	mov	word [(2+delayQueue)], 0
  2319 |          |                           | 	; >>>>> Line:	10
  2320 |          |                           | 	; >>>>> delayQueue.head = 0; 
  2321 | 00000EEE | C706[900C]0000            | 	mov	word [delayQueue], 0
  2322 | 00000EF4 | 89EC                      | 	mov	sp, bp
  2323 | 00000EF6 | 5D                        | 	pop	bp
  2324 | 00000EF7 | C3                        | 	ret
  2325 |          |                           | L_DelayQueue_1:
  2326 | 00000EF8 | 55                        | 	push	bp
  2327 | 00000EF9 | 89E5                      | 	mov	bp, sp
  2328 | 00000EFB | EBEB                      | 	jmp	L_DelayQueue_2
  2329 | 00000EFD | 90                        | 	ALIGN	2
  2330 |          |                           | tickClock:
  2331 |          |                           | 	; >>>>> Line:	13
  2332 |          |                           | 	; >>>>> gned  
  2333 | 00000EFE | E98800                    | 	jmp	L_DelayQueue_4
  2334 |          |                           | L_DelayQueue_5:
  2335 |          |                           | 	; >>>>> Line:	19
  2336 |          |                           | 	; >>>>> if (delayQueue.size == 0) return; 
  2337 | 00000F01 | A1[920C]                  | 	mov	ax, word [(2+delayQueue)]
  2338 | 00000F04 | 85C0                      | 	test	ax, ax
  2339 | 00000F06 | 7502                      | 	jne	L_DelayQueue_6
  2340 |          |                           | 	; >>>>> Line:	19
  2341 |          |                           | 	; >>>>> if (delayQueue.size == 0) return; 
  2342 | 00000F08 | EB7B                      | 	jmp	L_DelayQueue_7
  2343 |          |                           | L_DelayQueue_6:
  2344 |          |                           | 	; >>>>> Line:	22
  2345 |          |                           | 	; >>>>> current = delayQueue.head; 
  2346 | 00000F0A | A1[900C]                  | 	mov	ax, word [delayQueue]
  2347 | 00000F0D | 8946FE                    | 	mov	word [bp-2], ax
  2348 |          |                           | 	; >>>>> Line:	23
  2349 |          |                           | 	; >>>>> while (current != 0) { 
  2350 | 00000F10 | EB6C                      | 	jmp	L_DelayQueue_9
  2351 |          |                           | L_DelayQueue_8:
  2352 |          |                           | 	; >>>>> Line:	24
  2353 |          |                           | 	; >>>>> current->delayCount--; 
  2354 | 00000F12 | 8B76FE                    | 	mov	si, word [bp-2]
  2355 | 00000F15 | 83C608                    | 	add	si, 8
  2356 | 00000F18 | FF0C                      | 	dec	word [si]
  2357 |          |                           | 	; >>>>> Line:	25
  2358 |          |                           | 	; >>>>> temp = current; 
  2359 | 00000F1A | 8B46FE                    | 	mov	ax, word [bp-2]
  2360 | 00000F1D | 8946FC                    | 	mov	word [bp-4], ax
  2361 |          |                           | 	; >>>>> Line:	26
  2362 |          |                           | 	; >>>>> current = current->next; 
  2363 | 00000F20 | 8B76FE                    | 	mov	si, word [bp-2]
  2364 | 00000F23 | 83C60A                    | 	add	si, 10
  2365 | 00000F26 | 8B04                      | 	mov	ax, word [si]
  2366 | 00000F28 | 8946FE                    | 	mov	word [bp-2], ax
  2367 |          |                           | 	; >>>>> Line:	27
  2368 |          |                           | 	; >>>>> if (temp->delayCount == 0) { 
  2369 | 00000F2B | 8B76FC                    | 	mov	si, word [bp-4]
  2370 | 00000F2E | 83C608                    | 	add	si, 8
  2371 | 00000F31 | 8B04                      | 	mov	ax, word [si]
  2372 | 00000F33 | 85C0                      | 	test	ax, ax
  2373 | 00000F35 | 7547                      | 	jne	L_DelayQueue_11
  2374 |          |                           | 	; >>>>> Line:	29
  2375 |          |                           | 	; >>>>> if (temp->next != 0) { 
  2376 | 00000F37 | 8B76FC                    | 	mov	si, word [bp-4]
  2377 | 00000F3A | 83C60A                    | 	add	si, 10
  2378 | 00000F3D | 8B04                      | 	mov	ax, word [si]
  2379 | 00000F3F | 85C0                      | 	test	ax, ax
  2380 | 00000F41 | 740F                      | 	je	L_DelayQueue_12
  2381 |          |                           | 	; >>>>> Line:	30
  2382 |          |                           | 	; >>>>> temp->next->prev = 0; 
  2383 | 00000F43 | 8B76FC                    | 	mov	si, word [bp-4]
  2384 | 00000F46 | 83C60A                    | 	add	si, 10
  2385 | 00000F49 | 8B34                      | 	mov	si, word [si]
  2386 | 00000F4B | 83C60C                    | 	add	si, 12
  2387 | 00000F4E | C7040000                  | 	mov	word [si], 0
  2388 |          |                           | L_DelayQueue_12:
  2389 |          |                           | 	; >>>>> Line:	32
  2390 |          |                           | 	; >>>>> delayQueue.head = temp->next; 
  2391 | 00000F52 | 8B76FC                    | 	mov	si, word [bp-4]
  2392 | 00000F55 | 83C60A                    | 	add	si, 10
  2393 | 00000F58 | 8B04                      | 	mov	ax, word [si]
  2394 | 00000F5A | A3[900C]                  | 	mov	word [delayQueue], ax
  2395 |          |                           | 	; >>>>> Line:	33
  2396 |          |                           | 	; >>>>> temp->next = 0; 
  2397 | 00000F5D | 8B76FC                    | 	mov	si, word [bp-4]
  2398 | 00000F60 | 83C60A                    | 	add	si, 10
  2399 | 00000F63 | C7040000                  | 	mov	word [si], 0
  2400 |          |                           | 	; >>>>> Line:	34
  2401 |          |                           | 	; >>>>> temp->prev = 0; 
  2402 | 00000F67 | 8B76FC                    | 	mov	si, word [bp-4]
  2403 | 00000F6A | 83C60C                    | 	add	si, 12
  2404 | 00000F6D | C7040000                  | 	mov	word [si], 0
  2405 |          |                           | 	; >>>>> Line:	35
  2406 |          |                           | 	; >>>>> delayQueue.size--; 
  2407 | 00000F71 | FF0E[920C]                | 	dec	word [(2+delayQueue)]
  2408 |          |                           | 	; >>>>> Line:	36
  2409 |          |                           | 	; >>>>> insertReadyQueue(temp); 
  2410 | 00000F75 | FF76FC                    | 	push	word [bp-4]
  2411 | 00000F78 | E897FD                    | 	call	insertReadyQueue
  2412 | 00000F7B | 83C402                    | 	add	sp, 2
  2413 |          |                           | L_DelayQueue_11:
  2414 |          |                           | L_DelayQueue_9:
  2415 | 00000F7E | 8B46FE                    | 	mov	ax, word [bp-2]
  2416 | 00000F81 | 85C0                      | 	test	ax, ax
  2417 | 00000F83 | 758D                      | 	jne	L_DelayQueue_8
  2418 |          |                           | L_DelayQueue_10:
  2419 |          |                           | L_DelayQueue_7:
  2420 | 00000F85 | 89EC                      | 	mov	sp, bp
  2421 | 00000F87 | 5D                        | 	pop	bp
  2422 | 00000F88 | C3                        | 	ret
  2423 |          |                           | L_DelayQueue_4:
  2424 | 00000F89 | 55                        | 	push	bp
  2425 | 00000F8A | 89E5                      | 	mov	bp, sp
  2426 | 00000F8C | 83EC04                    | 	sub	sp, 4
  2427 | 00000F8F | E96FFF                    | 	jmp	L_DelayQueue_5
  2428 |          |                           | 	ALIGN	2
  2429 |          |                           | insertDelayQueue:
  2430 |          |                           | 	; >>>>> Line:	42
  2431 |          |                           | 	; >>>>> void insertDelayQueue(TCB* tcb) { 
  2432 | 00000F92 | E91001                    | 	jmp	L_DelayQueue_14
  2433 |          |                           | L_DelayQueue_15:
  2434 |          |                           | 	; >>>>> Line:	47
  2435 |          |                           | 	; >>>>> if (tcb == 0) return; 
  2436 | 00000F95 | 8B4604                    | 	mov	ax, word [bp+4]
  2437 | 00000F98 | 85C0                      | 	test	ax, ax
  2438 | 00000F9A | 7503                      | 	jne	L_DelayQueue_16
  2439 |          |                           | 	; >>>>> Line:	47
  2440 |          |                           | 	; >>>>> if (tcb == 0) return; 
  2441 | 00000F9C | E90201                    | 	jmp	L_DelayQueue_17
  2442 |          |                           | L_DelayQueue_16:
  2443 |          |                           | 	; >>>>> Line:	50
  2444 |          |                           | 	; >>>>> if (delayQueue.size == 0) { 
  2445 | 00000F9F | A1[920C]                  | 	mov	ax, word [(2+delayQueue)]
  2446 | 00000FA2 | 85C0                      | 	test	ax, ax
  2447 | 00000FA4 | 7521                      | 	jne	L_DelayQueue_18
  2448 |          |                           | 	; >>>>> Line:	51
  2449 |          |                           | 	; >>>>> delayQueue.head = tcb; 
  2450 | 00000FA6 | 8B4604                    | 	mov	ax, word [bp+4]
  2451 | 00000FA9 | A3[900C]                  | 	mov	word [delayQueue], ax
  2452 |          |                           | 	; >>>>> Line:	52
  2453 |          |                           | 	; >>>>> tcb->next = 0; 
  2454 | 00000FAC | 8B7604                    | 	mov	si, word [bp+4]
  2455 | 00000FAF | 83C60A                    | 	add	si, 10
  2456 | 00000FB2 | C7040000                  | 	mov	word [si], 0
  2457 |          |                           | 	; >>>>> Line:	53
  2458 |          |                           | 	; >>>>> tcb->prev = 0; 
  2459 | 00000FB6 | 8B7604                    | 	mov	si, word [bp+4]
  2460 | 00000FB9 | 83C60C                    | 	add	si, 12
  2461 | 00000FBC | C7040000                  | 	mov	word [si], 0
  2462 |          |                           | 	; >>>>> Line:	54
  2463 |          |                           | 	; >>>>> delayQueue.size++; 
  2464 | 00000FC0 | FF06[920C]                | 	inc	word [(2+delayQueue)]
  2465 |          |                           | 	; >>>>> Line:	55
  2466 |          |                           | 	; >>>>> return; 
  2467 | 00000FC4 | E9DA00                    | 	jmp	L_DelayQueue_17
  2468 |          |                           | L_DelayQueue_18:
  2469 |          |                           | 	; >>>>> Line:	59
  2470 |          |                           | 	; >>>>> current = delayQueue.head; 
  2471 | 00000FC7 | A1[900C]                  | 	mov	ax, word [delayQueue]
  2472 | 00000FCA | 8946FE                    | 	mov	word [bp-2], ax
  2473 |          |                           | 	; >>>>> Line:	60
  2474 |          |                           | 	; >>>>> sumCount = 0; 
  2475 | 00000FCD | C746FC0000                | 	mov	word [bp-4], 0
  2476 |          |                           | 	; >>>>> Line:	61
  2477 |          |                           | 	; >>>>> while (current != 0) { 
  2478 | 00000FD2 | E9C200                    | 	jmp	L_DelayQueue_20
  2479 |          |                           | L_DelayQueue_19:
  2480 |          |                           | 	; >>>>> Line:	62
  2481 |          |                           | 	; >>>>> sumCount += current->delayCount; 
  2482 | 00000FD5 | 8B76FE                    | 	mov	si, word [bp-2]
  2483 | 00000FD8 | 83C608                    | 	add	si, 8
  2484 | 00000FDB | 8B04                      | 	mov	ax, word [si]
  2485 | 00000FDD | 0146FC                    | 	add	word [bp-4], ax
  2486 |          |                           | 	; >>>>> Line:	63
  2487 |          |                           | 	; >>>>> if (tcb->delayCount < sumCount) { 
  2488 | 00000FE0 | 8B7604                    | 	mov	si, word [bp+4]
  2489 | 00000FE3 | 83C608                    | 	add	si, 8
  2490 | 00000FE6 | 8B46FC                    | 	mov	ax, word [bp-4]
  2491 | 00000FE9 | 3B04                      | 	cmp	ax, word [si]
  2492 | 00000FEB | 765A                      | 	jbe	L_DelayQueue_22
  2493 |          |                           | 	; >>>>> Line:	64
  2494 |          |                           | 	; >>>>> tcb->prev = current->prev; 
  2495 | 00000FED | 8B76FE                    | 	mov	si, word [bp-2]
  2496 | 00000FF0 | 83C60C                    | 	add	si, 12
  2497 | 00000FF3 | 8B7E04                    | 	mov	di, word [bp+4]
  2498 | 00000FF6 | 83C70C                    | 	add	di, 12
  2499 | 00000FF9 | 8B04                      | 	mov	ax, word [si]
  2500 | 00000FFB | 8905                      | 	mov	word [di], ax
  2501 |          |                           | 	; >>>>> Line:	65
  2502 |          |                           | 	; >>>>> tcb->next = current; 
  2503 | 00000FFD | 8B7604                    | 	mov	si, word [bp+4]
  2504 | 00001000 | 83C60A                    | 	add	si, 10
  2505 | 00001003 | 8B46FE                    | 	mov	ax, word [bp-2]
  2506 | 00001006 | 8904                      | 	mov	word [si], ax
  2507 |          |                           | 	; >>>>> Line:	66
  2508 |          |                           | 	; >>>>> if (current == delayQueue.head) { 
  2509 | 00001008 | A1[900C]                  | 	mov	ax, word [delayQueue]
  2510 | 0000100B | 3B46FE                    | 	cmp	ax, word [bp-2]
  2511 | 0000100E | 7513                      | 	jne	L_DelayQueue_23
  2512 |          |                           | 	; >>>>> Line:	67
  2513 |          |                           | 	; >>>>> delayQueue.head  
  2514 | 00001010 | 8B4604                    | 	mov	ax, word [bp+4]
  2515 | 00001013 | A3[900C]                  | 	mov	word [delayQueue], ax
  2516 |          |                           | 	; >>>>> Line:	68
  2517 |          |                           | 	; >>>>> current->prev->next = tcb; 
  2518 | 00001016 | 8B76FE                    | 	mov	si, word [bp-2]
  2519 | 00001019 | 83C60C                    | 	add	si, 12
  2520 | 0000101C | 8B34                      | 	mov	si, word [si]
  2521 | 0000101E | 83C60A                    | 	add	si, 10
  2522 | 00001021 | 8904                      | 	mov	word [si], ax
  2523 |          |                           | L_DelayQueue_23:
  2524 |          |                           | 	; >>>>> Line:	70
  2525 |          |                           | 	; >>>>> current->prev = tcb; 
  2526 | 00001023 | 8B76FE                    | 	mov	si, word [bp-2]
  2527 | 00001026 | 83C60C                    | 	add	si, 12
  2528 | 00001029 | 8B4604                    | 	mov	ax, word [bp+4]
  2529 | 0000102C | 8904                      | 	mov	word [si], ax
  2530 |          |                           | 	; >>>>> Line:	71
  2531 |          |                           | 	; >>>>> delayQueue.size++; 
  2532 | 0000102E | FF06[920C]                | 	inc	word [(2+delayQueue)]
  2533 |          |                           | 	; >>>>> Line:	72
  2534 |          |                           | 	; >>>>> tcb->delayCount = tcb->delayCount - sumCount; 
  2535 | 00001032 | 8B7604                    | 	mov	si, word [bp+4]
  2536 | 00001035 | 83C608                    | 	add	si, 8
  2537 | 00001038 | 8B04                      | 	mov	ax, word [si]
  2538 | 0000103A | 2B46FC                    | 	sub	ax, word [bp-4]
  2539 | 0000103D | 8B7604                    | 	mov	si, word [bp+4]
  2540 | 00001040 | 83C608                    | 	add	si, 8
  2541 | 00001043 | 8904                      | 	mov	word [si], ax
  2542 |          |                           | 	; >>>>> Line:	73
  2543 |          |                           | 	; >>>>> return; 
  2544 | 00001045 | EB5A                      | 	jmp	L_DelayQueue_17
  2545 |          |                           | L_DelayQueue_22:
  2546 |          |                           | 	; >>>>> Line:	75
  2547 |          |                           | 	; >>>>> if (current->next == 0) { 
  2548 | 00001047 | 8B76FE                    | 	mov	si, word [bp-2]
  2549 | 0000104A | 83C60A                    | 	add	si, 10
  2550 | 0000104D | 8B04                      | 	mov	ax, word [si]
  2551 | 0000104F | 85C0                      | 	test	ax, ax
  2552 | 00001051 | 7539                      | 	jne	L_DelayQueue_24
  2553 |          |                           | 	; >>>>> Line:	76
  2554 |          |                           | 	; >>>>> current->next = tcb; 
  2555 | 00001053 | 8B76FE                    | 	mov	si, word [bp-2]
  2556 | 00001056 | 83C60A                    | 	add	si, 10
  2557 | 00001059 | 8B4604                    | 	mov	ax, word [bp+4]
  2558 | 0000105C | 8904                      | 	mov	word [si], ax
  2559 |          |                           | 	; >>>>> Line:	77
  2560 |          |                           | 	; >>>>> tcb->prev = current; 
  2561 | 0000105E | 8B7604                    | 	mov	si, word [bp+4]
  2562 | 00001061 | 83C60C                    | 	add	si, 12
  2563 | 00001064 | 8B46FE                    | 	mov	ax, word [bp-2]
  2564 | 00001067 | 8904                      | 	mov	word [si], ax
  2565 |          |                           | 	; >>>>> Line:	78
  2566 |          |                           | 	; >>>>> tcb->next = 0; 
  2567 | 00001069 | 8B7604                    | 	mov	si, word [bp+4]
  2568 | 0000106C | 83C60A                    | 	add	si, 10
  2569 | 0000106F | C7040000                  | 	mov	word [si], 0
  2570 |          |                           | 	; >>>>> Line:	79
  2571 |          |                           | 	; >>>>> delayQueue.size++; 
  2572 | 00001073 | FF06[920C]                | 	inc	word [(2+delayQueue)]
  2573 |          |                           | 	; >>>>> Line:	80
  2574 |          |                           | 	; >>>>> tcb->delayCount = tcb->delayCount - sumCount; 
  2575 | 00001077 | 8B7604                    | 	mov	si, word [bp+4]
  2576 | 0000107A | 83C608                    | 	add	si, 8
  2577 | 0000107D | 8B04                      | 	mov	ax, word [si]
  2578 | 0000107F | 2B46FC                    | 	sub	ax, word [bp-4]
  2579 | 00001082 | 8B7604                    | 	mov	si, word [bp+4]
  2580 | 00001085 | 83C608                    | 	add	si, 8
  2581 | 00001088 | 8904                      | 	mov	word [si], ax
  2582 |          |                           | 	; >>>>> Line:	81
  2583 |          |                           | 	; >>>>> return; 
  2584 | 0000108A | EB15                      | 	jmp	L_DelayQueue_17
  2585 |          |                           | L_DelayQueue_24:
  2586 |          |                           | 	; >>>>> Line:	83
  2587 |          |                           | 	; >>>>> current = current->next; 
  2588 | 0000108C | 8B76FE                    | 	mov	si, word [bp-2]
  2589 | 0000108F | 83C60A                    | 	add	si, 10
  2590 | 00001092 | 8B04                      | 	mov	ax, word [si]
  2591 | 00001094 | 8946FE                    | 	mov	word [bp-2], ax
  2592 |          |                           | L_DelayQueue_20:
  2593 | 00001097 | 8B46FE                    | 	mov	ax, word [bp-2]
  2594 | 0000109A | 85C0                      | 	test	ax, ax
  2595 | 0000109C | 7403E934FF                | 	jne	L_DelayQueue_19
  2596 |          |                           | L_DelayQueue_21:
  2597 |          |                           | L_DelayQueue_17:
  2598 | 000010A1 | 89EC                      | 	mov	sp, bp
  2599 | 000010A3 | 5D                        | 	pop	bp
  2600 | 000010A4 | C3                        | 	ret
  2601 |          |                           | L_DelayQueue_14:
  2602 | 000010A5 | 55                        | 	push	bp
  2603 | 000010A6 | 89E5                      | 	mov	bp, sp
  2604 | 000010A8 | 83EC04                    | 	sub	sp, 4
  2605 | 000010AB | E9E7FE                    | 	jmp	L_DelayQueue_15
  2606 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from lab4c_app.i
  2607 |          |                           | 	CPU	8086
  2608 |          |                           | 	ALIGN	2
  2609 | 000010AE | EB26                      | 	jmp	main	; Jump to program start
  2610 |          |                           | L_lab4c_app_2:
  2611 | 000010B0 | 5374617274696E6720-       | 	DB	"Starting kernel...",0xA,0
  2612 | 000010B9 | 6B65726E656C2E2E2E-       | ...
  2613 | 000010C2 | 0A00                      | ...
  2614 |          |                           | L_lab4c_app_1:
  2615 | 000010C4 | 4372656174696E6720-       | 	DB	"Creating task...",0xA,0
  2616 | 000010CD | 7461736B2E2E2E0A00        | ...
  2617 |          |                           | 	ALIGN	2
  2618 |          |                           | main:
  2619 |          |                           | 	; >>>>> Line:	20
  2620 |          |                           | 	; >>>>> { 
  2621 | 000010D6 | EB2F                      | 	jmp	L_lab4c_app_3
  2622 |          |                           | L_lab4c_app_4:
  2623 |          |                           | 	; >>>>> Line:	21
  2624 |          |                           | 	; >>>>> YKInitialize(); 
  2625 | 000010D8 | E8BDF9                    | 	call	YKInitialize
  2626 |          |                           | 	; >>>>> Line:	23
  2627 |          |                           | 	; >>>>> printString("Creating task...\n"); 
  2628 | 000010DB | B8[C410]                  | 	mov	ax, L_lab4c_app_1
  2629 | 000010DE | 50                        | 	push	ax
  2630 | 000010DF | E846F3                    | 	call	printString
  2631 | 000010E2 | 83C402                    | 	add	sp, 2
  2632 |          |                           | 	; >>>>> Line:	24
  2633 |          |                           | 	; >>>>> YKNewTask(Task, (void *) &Ta 
  2634 | 000010E5 | 30C0                      | 	xor	al, al
  2635 | 000010E7 | 50                        | 	push	ax
  2636 | 000010E8 | B8[DC13]                  | 	mov	ax, (TaskStack+512)
  2637 | 000010EB | 50                        | 	push	ax
  2638 | 000010EC | B8[6411]                  | 	mov	ax, Task
  2639 | 000010EF | 50                        | 	push	ax
  2640 | 000010F0 | E873FA                    | 	call	YKNewTask
  2641 | 000010F3 | 83C406                    | 	add	sp, 6
  2642 |          |                           | 	; >>>>> Line:	26
  2643 |          |                           | 	; >>>>> printString("Starting kernel...\n"); 
  2644 | 000010F6 | B8[B010]                  | 	mov	ax, L_lab4c_app_2
  2645 | 000010F9 | 50                        | 	push	ax
  2646 | 000010FA | E82BF3                    | 	call	printString
  2647 | 000010FD | 83C402                    | 	add	sp, 2
  2648 |          |                           | 	; >>>>> Line:	27
  2649 |          |                           | 	; >>>>> YKRun(); 
  2650 | 00001100 | E81FFB                    | 	call	YKRun
  2651 | 00001103 | 89EC                      | 	mov	sp, bp
  2652 | 00001105 | 5D                        | 	pop	bp
  2653 | 00001106 | C3                        | 	ret
  2654 |          |                           | L_lab4c_app_3:
  2655 | 00001107 | 55                        | 	push	bp
  2656 | 00001108 | 89E5                      | 	mov	bp, sp
  2657 | 0000110A | EBCC                      | 	jmp	L_lab4c_app_4
  2658 |          |                           | L_lab4c_app_9:
  2659 | 0000110C | 20636F6E7465787420-       | 	DB	" context switches! YKIdleCount is ",0
  2660 | 00001115 | 737769746368657321-       | ...
  2661 | 0000111E | 20594B49646C65436F-       | ...
  2662 | 00001127 | 756E742069732000          | ...
  2663 |          |                           | L_lab4c_app_8:
  2664 | 0000112F | 5461736B2072756E6E-       | 	DB	"Task running after ",0
  2665 | 00001138 | 696E67206166746572-       | ...
  2666 | 00001141 | 2000                      | ...
  2667 |          |                           | L_lab4c_app_7:
  2668 | 00001143 | 44656C6179696E6720-       | 	DB	"Delaying task...",0xA,0
  2669 | 0000114C | 7461736B2E2E2E0A00        | ...
  2670 |          |                           | L_lab4c_app_6:
  2671 | 00001155 | 5461736B2073746172-       | 	DB	"Task started.",0xA,0
  2672 | 0000115E | 7465642E0A00              | ...
  2673 |          |                           | 	ALIGN	2
  2674 |          |                           | Task:
  2675 |          |                           | 	; >>>>> Line:	31
  2676 |          |                           | 	; >>>>> { 
  2677 | 00001164 | EB6E                      | 	jmp	L_lab4c_app_10
  2678 |          |                           | L_lab4c_app_11:
  2679 |          |                           | 	; >>>>> Line:	35
  2680 |          |                           | 	; >>>>> printString("Task started.\n"); 
  2681 | 00001166 | B8[5511]                  | 	mov	ax, L_lab4c_app_6
  2682 | 00001169 | 50                        | 	push	ax
  2683 | 0000116A | E8BBF2                    | 	call	printString
  2684 | 0000116D | 83C402                    | 	add	sp, 2
  2685 |          |                           | 	; >>>>> Line:	36
  2686 |          |                           | 	; >>>>> while (1) 
  2687 | 00001170 | EB5C                      | 	jmp	L_lab4c_app_13
  2688 |          |                           | L_lab4c_app_12:
  2689 |          |                           | 	; >>>>> Line:	38
  2690 |          |                           | 	; >>>>> printString("Delaying task...\n"); 
  2691 | 00001172 | B8[4311]                  | 	mov	ax, L_lab4c_app_7
  2692 | 00001175 | 50                        | 	push	ax
  2693 | 00001176 | E8AFF2                    | 	call	printString
  2694 | 00001179 | 83C402                    | 	add	sp, 2
  2695 |          |                           | 	; >>>>> Line:	40
  2696 |          |                           | 	; >>>>> YKDelayTask(2); 
  2697 | 0000117C | B80200                    | 	mov	ax, 2
  2698 | 0000117F | 50                        | 	push	ax
  2699 | 00001180 | E8B9FA                    | 	call	YKDelayTask
  2700 | 00001183 | 83C402                    | 	add	sp, 2
  2701 |          |                           | 	; >>>>> Line:	42
  2702 |          |                           | 	; >>>>> YKEnterMutex(); 
  2703 | 00001186 | E8CDF8                    | 	call	YKEnterMutex
  2704 |          |                           | 	; >>>>> Line:	43
  2705 |          |                           | 	; >>>>> numCtxSwitches = YKCtxSwCount; 
  2706 | 00001189 | A1[4C0A]                  | 	mov	ax, word [YKCtxSwCount]
  2707 | 0000118C | 8946FC                    | 	mov	word [bp-4], ax
  2708 |          |                           | 	; >>>>> Line:	44
  2709 |          |                           | 	; >>>>> idleCount = YKIdleCount; 
  2710 | 0000118F | A1[4E0A]                  | 	mov	ax, word [YKIdleCount]
  2711 | 00001192 | 8946FE                    | 	mov	word [bp-2], ax
  2712 |          |                           | 	; >>>>> Line:	45
  2713 |          |                           | 	; >>>>> YKIdleCount = 0; 
  2714 | 00001195 | C706[4E0A]0000            | 	mov	word [YKIdleCount], 0
  2715 |          |                           | 	; >>>>> Line:	46
  2716 |          |                           | 	; >>>>> YKExitMutex(); 
  2717 | 0000119B | E8C4F8                    | 	call	YKExitMutex
  2718 |          |                           | 	; >>>>> Line:	48
  2719 |          |                           | 	; >>>>> printString("Task running after "); 
  2720 | 0000119E | B8[2F11]                  | 	mov	ax, L_lab4c_app_8
  2721 | 000011A1 | 50                        | 	push	ax
  2722 | 000011A2 | E883F2                    | 	call	printString
  2723 | 000011A5 | 83C402                    | 	add	sp, 2
  2724 |          |                           | 	; >>>>> Line:	49
  2725 |          |                           | 	; >>>>> printUInt(numCtxSwitches); 
  2726 | 000011A8 | FF76FC                    | 	push	word [bp-4]
  2727 | 000011AB | E81EF4                    | 	call	printUInt
  2728 | 000011AE | 83C402                    | 	add	sp, 2
  2729 |          |                           | 	; >>>>> Line:	50
  2730 |          |                           | 	; >>>>> printSt 
  2731 | 000011B1 | B8[0C11]                  | 	mov	ax, L_lab4c_app_9
  2732 | 000011B4 | 50                        | 	push	ax
  2733 | 000011B5 | E870F2                    | 	call	printString
  2734 | 000011B8 | 83C402                    | 	add	sp, 2
  2735 |          |                           | 	; >>>>> Line:	51
  2736 |          |                           | 	; >>>>> printUInt(idleCount); 
  2737 | 000011BB | FF76FE                    | 	push	word [bp-2]
  2738 | 000011BE | E80BF4                    | 	call	printUInt
  2739 | 000011C1 | 83C402                    | 	add	sp, 2
  2740 |          |                           | 	; >>>>> Line:	52
  2741 |          |                           | 	; >>>>> printString(".\n"); 
  2742 | 000011C4 | B8[D310]                  | 	mov	ax, (L_lab4c_app_1+15)
  2743 | 000011C7 | 50                        | 	push	ax
  2744 | 000011C8 | E85DF2                    | 	call	printString
  2745 | 000011CB | 83C402                    | 	add	sp, 2
  2746 |          |                           | L_lab4c_app_13:
  2747 | 000011CE | EBA2                      | 	jmp	L_lab4c_app_12
  2748 |          |                           | L_lab4c_app_14:
  2749 | 000011D0 | 89EC                      | 	mov	sp, bp
  2750 | 000011D2 | 5D                        | 	pop	bp
  2751 | 000011D3 | C3                        | 	ret
  2752 |          |                           | L_lab4c_app_10:
  2753 | 000011D4 | 55                        | 	push	bp
  2754 | 000011D5 | 89E5                      | 	mov	bp, sp
  2755 | 000011D7 | 83EC04                    | 	sub	sp, 4
  2756 | 000011DA | EB8A                      | 	jmp	L_lab4c_app_11
  2757 |          |                           | 	ALIGN	2
  2758 |          |                           | TaskStack:
  2759 | 000011DC | 00<rept>                  | 	TIMES	512 db 0
