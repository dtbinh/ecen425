 LINE  | ADDRESS  | HEX DUMP                  | ASSEMBLY
-------|----------|---------------------------|----------------------------
     1 |          |                           |         CPU     8086
     2 |          |                           |         ORG     0h
     3 |          |                           | InterruptVectorTable:
     4 |          |                           |         ; Internal x86 Interrupts:
     5 | 00000000 | 00000000                  |         dd      0 ; Reserved (Div err)  ; Int 00h
     6 | 00000004 | 00000000                  |         dd      0 ; Reserved (Step)     ; Int 01h
     7 | 00000008 | 00000000                  |         dd      0 ; Reserved (NMI)      ; Int 02h
     8 | 0000000C | 00000000                  |         dd      0 ; Reserved (Break)    ; Int 03h
     9 | 00000010 | 00000000                  |         dd      0 ; Reserved (Overflow) ; Int 04h
    10 | 00000014 | 00000000                  |         dd      0                       ; Int 05h
    11 | 00000018 | 00000000                  |         dd      0                       ; Int 06h
    12 | 0000001C | 00000000                  |         dd      0                       ; Int 07h
    13 |          |                           |         ; Hardware Interrupts:
    14 | 00000020 | [86080000]                |         dd      reset ; Reset               ; Int 08h (IRQ 0)
    15 | 00000024 | [A2080000]                |         dd      tick ; Tick                ; Int 09h (IRQ 1)
    16 | 00000028 | [BE080000]                |         dd      keyboard ; Keyboard            ; Int 0Ah (IRQ 2)
    17 | 0000002C | 00000000                  |         dd      0 ; Simptris Game Over  ; Int 0Bh (IRQ 3)
    18 | 00000030 | 00000000                  |         dd      0 ; Simptris New Piece  ; Int 0Ch (IRQ 4)
    19 | 00000034 | 00000000                  |         dd      0 ; Simptris Received   ; Int 0Dh (IRQ 5)
    20 | 00000038 | 00000000                  |         dd      0 ; Simptris Touchdown  ; Int 0Eh (IRQ 6)
    21 | 0000003C | 00000000                  |         dd      0 ; Simptris Clear      ; Int 0Fh (IRQ 7)
    22 |          |                           |         ; Software Interrupts:
    23 | 00000040 | 00000000                  |         dd      0 ; Reserved (PC BIOS)  ; Int 10h
    24 | 00000044 | 00000000                  |         dd      0                       ; Int 11h
    25 | 00000048 | 00000000                  |         dd      0                       ; Int 12h
    26 | 0000004C | 00000000                  |         dd      0                       ; Int 13h
    27 | 00000050 | 00000000                  |         dd      0                       ; Int 14h
    28 | 00000054 | 00000000                  |         dd      0                       ; Int 15h
    29 | 00000058 | 00000000                  |         dd      0                       ; Int 16h
    30 | 0000005C | 00000000                  |         dd      0                       ; Int 17h
    31 | 00000060 | 00000000                  |         dd      0                       ; Int 18h
    32 | 00000064 | 00000000                  |         dd      0                       ; Int 19h
    33 | 00000068 | 00000000                  |         dd      0                       ; Int 1Ah
    34 | 0000006C | 00000000                  |         dd      0                       ; Int 1Bh
    35 | 00000070 | 00000000                  |         dd      0                       ; Int 1Ch
    36 | 00000074 | 00000000                  |         dd      0                       ; Int 1Dh
    37 | 00000078 | 00000000                  |         dd      0                       ; Int 1Eh
    38 | 0000007C | 00000000                  |         dd      0                       ; Int 1Fh
    39 | 00000080 | 00000000                  |         dd      0                       ; Int 20h
    40 | 00000084 | 00000000                  |         dd      0 ; Reserved (DOS)      ; Int 21h
    41 | 00000088 | 00000000                  |         dd      0 ; Simptris Services   ; Int 22h
    42 | 0000008C | 00000000                  |         dd      0                       ; Int 23h
    43 | 00000090 | 00000000                  |         dd      0                       ; Int 24h
    44 | 00000094 | 00000000                  |         dd      0                       ; Int 25h
    45 | 00000098 | 00000000                  |         dd      0                       ; Int 26h
    46 | 0000009C | 00000000                  |         dd      0                       ; Int 27h
    47 | 000000A0 | 00000000                  |         dd      0                       ; Int 28h
    48 | 000000A4 | 00000000                  |         dd      0                       ; Int 29h
    49 | 000000A8 | 00000000                  |         dd      0                       ; Int 2Ah
    50 | 000000AC | 00000000                  |         dd      0                       ; Int 2Bh
    51 | 000000B0 | 00000000                  |         dd      0                       ; Int 2Ch
    52 | 000000B4 | 00000000                  |         dd      0                       ; Int 2Dh
    53 | 000000B8 | 00000000                  |         dd      0                       ; Int 2Eh
    54 | 000000BC | 00000000                  |         dd      0                       ; Int 2Fh
    55 |          |                           | KeyBuffer:                              ; Address 0xC0
    56 | 000000C0 | 0000                      |         dw      0
    57 |          |                           | NewPieceType:                           ; Address 0xC2
    58 | 000000C2 | 0000                      |         dw      0
    59 |          |                           | NewPieceID:                             ; Address 0xC4
    60 | 000000C4 | 0000                      |         dw      0
    61 |          |                           | NewPieceOrientation:                    ; Address 0xC6
    62 | 000000C6 | 0000                      |         dw      0
    63 |          |                           | NewPieceColumn:                         ; Address 0xC8
    64 | 000000C8 | 0000                      |         dw      0
    65 |          |                           | TouchdownID:                            ; Address 0xCA
    66 | 000000CA | 0000                      | 	dw	0
    67 |          |                           | ScreenBitMap0:                          ; Address 0xCC
    68 | 000000CC | 0000                      |         dw      0
    69 |          |                           | ScreenBitMap1:
    70 | 000000CE | 0000                      |         dw      0
    71 |          |                           | ScreenBitMap2:
    72 | 000000D0 | 0000                      |         dw      0
    73 |          |                           | ScreenBitMap3:
    74 | 000000D2 | 0000                      |         dw      0
    75 |          |                           | ScreenBitMap4:
    76 | 000000D4 | 0000                      |         dw      0
    77 |          |                           | ScreenBitMap5:
    78 | 000000D6 | 0000                      |         dw      0
    79 | 000000D8 | 00<rept>                  | TIMES   100h-($-$$) db  0               ; Fill up to (but not including) address 100h with 0
    80 | 00000100 | E9C30F                    | 	jmp	main
    81 |          |                           | ; This file contains support routines for 32-bit on the 8086.
    82 |          |                           | ; It is intended for use code generated by the C86 compiler.
    83 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    84 |          |                           | SR_asldiv:			; l1 /= l2
    85 | 00000103 | 55                        | 	push	bp
    86 | 00000104 | 89E5                      | 	mov	bp,sp
    87 | 00000106 | 53                        | 	push	bx
    88 | 00000107 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
    89 | 0000010A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
    90 | 0000010D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
    91 | 00000110 | FF7702                    | 	push	word [bx+2]	; Push hi l1
    92 | 00000113 | FF37                      | 	push	word [bx]	; Push lo l1
    93 | 00000115 | E83D01                    | 	call	SR_ldiv
    94 | 00000118 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
    95 | 0000011B | 895702                    | 	mov	[bx+2],dx	; Store result
    96 | 0000011E | 8907                      | 	mov	[bx],ax
    97 | 00000120 | 5B                        | 	pop	bx
    98 | 00000121 | 5D                        | 	pop	bp
    99 | 00000122 | C3                        | 	ret
   100 |          |                           | SR_aslmod:			; l1 %= l2
   101 | 00000123 | 55                        | 	push	bp
   102 | 00000124 | 89E5                      | 	mov	bp,sp
   103 | 00000126 | 53                        | 	push	bx
   104 | 00000127 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   105 | 0000012A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   106 | 0000012D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   107 | 00000130 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   108 | 00000133 | FF37                      | 	push	word [bx]	; Push lo l1
   109 | 00000135 | E82C01                    | 	call	SR_lmod
   110 | 00000138 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   111 | 0000013B | 895702                    | 	mov	[bx+2],dx	; Store result
   112 | 0000013E | 8907                      | 	mov	[bx],ax
   113 | 00000140 | 5B                        | 	pop	bx
   114 | 00000141 | 5D                        | 	pop	bp
   115 | 00000142 | C3                        | 	ret
   116 |          |                           | SR_aslmul:			; l1 *= l2
   117 | 00000143 | 55                        | 	push	bp
   118 | 00000144 | 89E5                      | 	mov	bp,sp
   119 | 00000146 | 53                        | 	push	bx
   120 | 00000147 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   121 | 0000014A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   122 | 0000014D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   123 | 00000150 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   124 | 00000153 | FF37                      | 	push	word [bx]	; Push lo l1
   125 | 00000155 | E84002                    | 	call	SR_lmul
   126 | 00000158 | 83C408                    | 	add	sp,8
   127 | 0000015B | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   128 | 0000015E | 895702                    | 	mov	[bx+2],dx	; Store result
   129 | 00000161 | 8907                      | 	mov	[bx],ax
   130 | 00000163 | 5B                        | 	pop	bx
   131 | 00000164 | 5D                        | 	pop	bp
   132 | 00000165 | C3                        | 	ret
   133 |          |                           | SR_aslshl:			; l1 <<= l2
   134 | 00000166 | 55                        | 	push	bp
   135 | 00000167 | 89E5                      | 	mov	bp,sp
   136 | 00000169 | 53                        | 	push	bx
   137 | 0000016A | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   138 | 0000016D | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   139 | 00000170 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   140 | 00000173 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   141 | 00000176 | FF37                      | 	push	word [bx]	; Push lo l1
   142 | 00000178 | E88801                    | 	call	SR_lshl
   143 | 0000017B | 83C408                    | 	add	sp,8
   144 | 0000017E | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   145 | 00000181 | 895702                    | 	mov	[bx+2],dx	; Store result
   146 | 00000184 | 8907                      | 	mov	[bx],ax
   147 | 00000186 | 5B                        | 	pop	bx
   148 | 00000187 | 5D                        | 	pop	bp
   149 | 00000188 | C3                        | 	ret
   150 |          |                           | SR_aslshr:			; l1 >>= l2
   151 | 00000189 | 55                        | 	push	bp
   152 | 0000018A | 89E5                      | 	mov	bp,sp
   153 | 0000018C | 53                        | 	push	bx
   154 | 0000018D | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   155 | 00000190 | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   156 | 00000193 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   157 | 00000196 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   158 | 00000199 | FF37                      | 	push	word [bx]	; Push lo l1
   159 | 0000019B | E89701                    | 	call	SR_lshr
   160 | 0000019E | 83C408                    | 	add	sp,8
   161 | 000001A1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   162 | 000001A4 | 895702                    | 	mov	[bx+2],dx	; Store result
   163 | 000001A7 | 8907                      | 	mov	[bx],ax
   164 | 000001A9 | 5B                        | 	pop	bx
   165 | 000001AA | 5D                        | 	pop	bp
   166 | 000001AB | C3                        | 	ret
   167 |          |                           | 
   168 |          |                           | 
   169 |          |                           | SR_asuldiv:			; u1 /= u2
   170 | 000001AC | 55                        | 	push	bp
   171 | 000001AD | 89E5                      | 	mov	bp,sp
   172 | 000001AF | 53                        | 	push	bx
   173 | 000001B0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   174 | 000001B3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   175 | 000001B6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   176 | 000001B9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   177 | 000001BC | FF37                      | 	push	word [bx]	; Push lo u1
   178 | 000001BE | E89B00                    | 	call	SR_uldiv
   179 | 000001C1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   180 | 000001C4 | 895702                    | 	mov	[bx+2],dx	; Store result
   181 | 000001C7 | 8907                      | 	mov	[bx],ax
   182 | 000001C9 | 5B                        | 	pop	bx
   183 | 000001CA | 5D                        | 	pop	bp
   184 | 000001CB | C3                        | 	ret
   185 |          |                           | SR_asilmod:			; u1 %= u2
   186 | 000001CC | 55                        | 	push	bp
   187 | 000001CD | 89E5                      | 	mov	bp,sp
   188 | 000001CF | 53                        | 	push	bx
   189 | 000001D0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   190 | 000001D3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   191 | 000001D6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   192 | 000001D9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   193 | 000001DC | FF37                      | 	push	word [bx]	; Push lo u1
   194 | 000001DE | E88B00                    | 	call	SR_ilmod
   195 | 000001E1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   196 | 000001E4 | 895702                    | 	mov	[bx+2],dx	; Store result
   197 | 000001E7 | 8907                      | 	mov	[bx],ax
   198 | 000001E9 | 5B                        | 	pop	bx
   199 | 000001EA | 5D                        | 	pop	bp
   200 | 000001EB | C3                        | 	ret
   201 |          |                           | SR_asulmul:			; u1 *= u2
   202 | 000001EC | 55                        | 	push	bp
   203 | 000001ED | 89E5                      | 	mov	bp,sp
   204 | 000001EF | 53                        | 	push	bx
   205 | 000001F0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   206 | 000001F3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   207 | 000001F6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   208 | 000001F9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   209 | 000001FC | FF37                      | 	push	word [bx]	; Push lo u1
   210 | 000001FE | E89701                    | 	call	SR_ulmul
   211 | 00000201 | 83C408                    | 	add	sp,8
   212 | 00000204 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   213 | 00000207 | 895702                    | 	mov	[bx+2],dx	; Store result
   214 | 0000020A | 8907                      | 	mov	[bx],ax
   215 | 0000020C | 5B                        | 	pop	bx
   216 | 0000020D | 5D                        | 	pop	bp
   217 | 0000020E | C3                        | 	ret
   218 |          |                           | SR_asulshl:			; u1 << u2
   219 | 0000020F | 55                        | 	push	bp
   220 | 00000210 | 89E5                      | 	mov	bp,sp
   221 | 00000212 | 53                        | 	push	bx
   222 | 00000213 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   223 | 00000216 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   224 | 00000219 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   225 | 0000021C | FF7702                    | 	push	word [bx+2]	; Push hi u1
   226 | 0000021F | FF37                      | 	push	word [bx]	; Push lo u1
   227 | 00000221 | E8DF00                    | 	call	SR_ulshl
   228 | 00000224 | 83C408                    | 	add	sp,8
   229 | 00000227 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   230 | 0000022A | 895702                    | 	mov	[bx+2],dx	; Store result
   231 | 0000022D | 8907                      | 	mov	[bx],ax
   232 | 0000022F | 5B                        | 	pop	bx
   233 | 00000230 | 5D                        | 	pop	bp
   234 | 00000231 | C3                        | 	ret
   235 |          |                           | SR_asulshr:			; u1 >> u2
   236 | 00000232 | 55                        | 	push	bp
   237 | 00000233 | 89E5                      | 	mov	bp,sp
   238 | 00000235 | 53                        | 	push	bx
   239 | 00000236 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   240 | 00000239 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   241 | 0000023C | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   242 | 0000023F | FF7702                    | 	push	word [bx+2]	; Push hi u1
   243 | 00000242 | FF37                      | 	push	word [bx]	; Push lo u1
   244 | 00000244 | E81F01                    | 	call	SR_ulshr
   245 | 00000247 | 83C408                    | 	add	sp,8
   246 | 0000024A | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   247 | 0000024D | 895702                    | 	mov	[bx+2],dx	; Store result
   248 | 00000250 | 8907                      | 	mov	[bx],ax
   249 | 00000252 | 5B                        | 	pop	bx
   250 | 00000253 | 5D                        | 	pop	bp
   251 | 00000254 | C3                        | 	ret
   252 |          |                           | 
   253 |          |                           | 
   254 |          |                           | ; Main 32-bit routines begin here:
   255 |          |                           | 
   256 |          |                           | SR_ldiv:	; N_LDIV@
   257 | 00000255 | 59                        | 	pop    cx
   258 | 00000256 | 0E                        | 	push   cs
   259 | 00000257 | 51                        | 	push   cx
   260 |          |                           | 	; LDIV@
   261 | 00000258 | 31C9                      | 	xor    cx,cx
   262 | 0000025A | EB16                      | 	jmp    LSR_01
   263 |          |                           | SR_uldiv:	; N_LUDIV@
   264 | 0000025C | 59                        | 	pop    cx
   265 | 0000025D | 0E                        | 	push   cs
   266 | 0000025E | 51                        | 	push   cx
   267 |          |                           | 	; F_LUDIV@
   268 | 0000025F | B90100                    | 	mov    cx,0001
   269 | 00000262 | EB0E                      | 	jmp    LSR_01
   270 |          |                           | SR_lmod:	; N_LMOD@
   271 | 00000264 | 59                        | 	pop    cx
   272 | 00000265 | 0E                        | 	push   cs
   273 | 00000266 | 51                        | 	push   cx
   274 |          |                           | 	; F_LMOD@
   275 | 00000267 | B90200                    | 	mov    cx,0002
   276 | 0000026A | EB06                      | 	jmp    LSR_01
   277 |          |                           | SR_ilmod:	; N_LUMOD@
   278 | 0000026C | 59                        | 	pop    cx
   279 | 0000026D | 0E                        | 	push   cs
   280 | 0000026E | 51                        | 	push   cx
   281 |          |                           | 	; LUMOD@
   282 | 0000026F | B90300                    | 	mov    cx,0003
   283 |          |                           | LSR_01:
   284 | 00000272 | 55                        | 	push   bp
   285 | 00000273 | 56                        | 	push   si
   286 | 00000274 | 57                        | 	push   di
   287 | 00000275 | 89E5                      | 	mov    bp,sp
   288 | 00000277 | 89CF                      | 	mov    di,cx
   289 | 00000279 | 8B460A                    | 	mov    ax,[bp+0Ah]
   290 | 0000027C | 8B560C                    | 	mov    dx,[bp+0Ch]
   291 | 0000027F | 8B5E0E                    | 	mov    bx,[bp+0Eh]
   292 | 00000282 | 8B4E10                    | 	mov    cx,[bp+10h]
   293 | 00000285 | 09C9                      | 	or     cx,cx
   294 | 00000287 | 7508                      | 	jne    LSR_02
   295 | 00000289 | 09D2                      | 	or     dx,dx
   296 | 0000028B | 7469                      | 	je     LSR_10
   297 | 0000028D | 09DB                      | 	or     bx,bx
   298 | 0000028F | 7465                      | 	je     LSR_10
   299 |          |                           | LSR_02:
   300 | 00000291 | F7C70100                  | 	test   di,0001
   301 | 00000295 | 751C                      | 	jne    LSR_04
   302 | 00000297 | 09D2                      | 	or     dx,dx
   303 | 00000299 | 790A                      | 	jns    LSR_03
   304 | 0000029B | F7DA                      | 	neg    dx
   305 | 0000029D | F7D8                      | 	neg    ax
   306 | 0000029F | 83DA00                    | 	sbb    dx,0000
   307 | 000002A2 | 83CF0C                    | 	or     di,000Ch
   308 |          |                           | LSR_03:
   309 | 000002A5 | 09C9                      | 	or     cx,cx
   310 | 000002A7 | 790A                      | 	jns    LSR_04
   311 | 000002A9 | F7D9                      | 	neg    cx
   312 | 000002AB | F7DB                      | 	neg    bx
   313 | 000002AD | 83D900                    | 	sbb    cx,0000
   314 | 000002B0 | 83F704                    | 	xor    di,0004
   315 |          |                           | LSR_04:
   316 | 000002B3 | 89CD                      | 	mov    bp,cx
   317 | 000002B5 | B92000                    | 	mov    cx,0020h
   318 | 000002B8 | 57                        | 	push   di
   319 | 000002B9 | 31FF                      | 	xor    di,di
   320 | 000002BB | 31F6                      | 	xor    si,si
   321 |          |                           | LSR_05:
   322 | 000002BD | D1E0                      | 	shl    ax,1
   323 | 000002BF | D1D2                      | 	rcl    dx,1
   324 | 000002C1 | D1D6                      | 	rcl    si,1
   325 | 000002C3 | D1D7                      | 	rcl    di,1
   326 | 000002C5 | 39EF                      | 	cmp    di,bp
   327 | 000002C7 | 720B                      | 	jb     LSR_07
   328 | 000002C9 | 7704                      | 	ja     LSR_06
   329 | 000002CB | 39DE                      | 	cmp    si,bx
   330 | 000002CD | 7205                      | 	jb     LSR_07
   331 |          |                           | LSR_06:
   332 | 000002CF | 29DE                      | 	sub    si,bx
   333 | 000002D1 | 19EF                      | 	sbb    di,bp
   334 | 000002D3 | 40                        | 	inc    ax
   335 |          |                           | LSR_07:
   336 | 000002D4 | E2E7                      | 	loop   LSR_05
   337 | 000002D6 | 5B                        | 	pop    bx
   338 | 000002D7 | F7C30200                  | 	test   bx,0002
   339 | 000002DB | 7406                      | 	je     LSR_08
   340 | 000002DD | 89F0                      | 	mov    ax,si
   341 | 000002DF | 89FA                      | 	mov    dx,di
   342 | 000002E1 | D1EB                      | 	shr    bx,1
   343 |          |                           | LSR_08:
   344 | 000002E3 | F7C30400                  | 	test   bx,0004h
   345 | 000002E7 | 7407                      | 	je     LSR_09
   346 | 000002E9 | F7DA                      | 	neg    dx
   347 | 000002EB | F7D8                      | 	neg    ax
   348 | 000002ED | 83DA00                    | 	sbb    dx,0000
   349 |          |                           | LSR_09:
   350 | 000002F0 | 5F                        | 	pop    di
   351 | 000002F1 | 5E                        | 	pop    si
   352 | 000002F2 | 5D                        | 	pop    bp
   353 | 000002F3 | CA0800                    | 	retf   0008
   354 |          |                           | LSR_10:
   355 | 000002F6 | F7F3                      | 	div    bx
   356 | 000002F8 | F7C70200                  | 	test   di,0002
   357 | 000002FC | 7401                      | 	je     LSR_11
   358 | 000002FE | 92                        | 	xchg   dx,ax
   359 |          |                           | LSR_11:
   360 | 000002FF | 31D2                      | 	xor    dx,dx
   361 | 00000301 | EBED                      | 	jmp    LSR_09
   362 |          |                           | SR_lshl:	; N_LXLSH@
   363 |          |                           | SR_ulshl:
   364 |          |                           | 	; r = a << b
   365 | 00000303 | 5B                        | 	pop    bx
   366 | 00000304 | 0E                        | 	push   cs
   367 | 00000305 | 53                        | 	push   bx
   368 |          |                           | 
   369 | 00000306 | 55                        | 	push   bp
   370 | 00000307 | 89E5                      | 	mov    bp,sp
   371 |          |                           | 
   372 | 00000309 | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   373 |          |                           | 
   374 | 0000030A | 8B4606                    | 	mov    ax, [bp+6]	; pop loword(a)
   375 | 0000030D | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   376 | 00000310 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   377 |          |                           | 	
   378 |          |                           | 	; LXLSH@
   379 | 00000313 | 80F910                    | 	cmp    cl,10h
   380 | 00000316 | 7312                      | 	jnb    LSR_12
   381 | 00000318 | 89C3                      | 	mov    bx,ax
   382 | 0000031A | D3E0                      | 	shl    ax,cl
   383 | 0000031C | D3E2                      | 	shl    dx,cl
   384 | 0000031E | F6D9                      | 	neg    cl
   385 | 00000320 | 80C110                    | 	add    cl,10h
   386 | 00000323 | D3EB                      | 	shr    bx,cl
   387 | 00000325 | 09DA                      | 	or     dx,bx
   388 | 00000327 | 59                        | 	pop    cx
   389 | 00000328 | 5D                        | 	pop    bp
   390 | 00000329 | CB                        | 	retf
   391 |          |                           | LSR_12:
   392 | 0000032A | 80E910                    | 	sub    cl,10h
   393 | 0000032D | 92                        | 	xchg   dx,ax
   394 | 0000032E | 31C0                      | 	xor    ax,ax
   395 | 00000330 | D3E2                      | 	shl    dx,cl
   396 | 00000332 | 59                        | 	pop    cx
   397 | 00000333 | 5D                        | 	pop    bp
   398 | 00000334 | CB                        | 	retf
   399 |          |                           | SR_lshr:	; N_LXRSH@
   400 |          |                           | 	; r = a >> b
   401 | 00000335 | 5B                        | 	pop    bx
   402 | 00000336 | 0E                        | 	push   cs
   403 | 00000337 | 53                        | 	push   bx
   404 |          |                           | 
   405 | 00000338 | 55                        | 	push   bp
   406 | 00000339 | 89E5                      | 	mov    bp,sp
   407 |          |                           | 
   408 | 0000033B | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   409 |          |                           | 
   410 | 0000033C | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   411 | 0000033F | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   412 | 00000342 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   413 |          |                           | 	
   414 |          |                           | 	; LXRSH@
   415 | 00000345 | 80F910                    | 	cmp    cl,10h
   416 | 00000348 | 7312                      | 	jnb    LSR_13
   417 | 0000034A | 89D3                      | 	mov    bx,dx
   418 | 0000034C | D3E8                      | 	shr    ax,cl
   419 | 0000034E | D3FA                      | 	sar    dx,cl
   420 | 00000350 | F6D9                      | 	neg    cl
   421 | 00000352 | 80C110                    | 	add    cl,10h
   422 | 00000355 | D3E3                      | 	shl    bx,cl
   423 | 00000357 | 09D8                      | 	or     ax,bx
   424 | 00000359 | 59                        | 	pop    cx
   425 | 0000035A | 5D                        | 	pop    bp
   426 | 0000035B | CB                        | 	retf
   427 |          |                           | LSR_13:
   428 | 0000035C | 80E910                    | 	sub    cl,10h
   429 | 0000035F | 92                        | 	xchg   dx,ax
   430 | 00000360 | 99                        | 	cwd
   431 | 00000361 | D3F8                      | 	sar    ax,cl
   432 | 00000363 | 59                        | 	pop    cx
   433 | 00000364 | 5D                        | 	pop    bp
   434 | 00000365 | CB                        | 	retf
   435 |          |                           | SR_ulshr:	; N_LXURSH@
   436 |          |                           | 	; r = a >> b
   437 | 00000366 | 5B                        | 	pop    bx
   438 | 00000367 | 0E                        | 	push   cs
   439 | 00000368 | 53                        | 	push   bx
   440 |          |                           | 
   441 | 00000369 | 55                        | 	push   bp
   442 | 0000036A | 89E5                      | 	mov    bp,sp
   443 |          |                           | 
   444 | 0000036C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   445 |          |                           | 
   446 | 0000036D | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   447 | 00000370 | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   448 | 00000373 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   449 |          |                           | 	
   450 |          |                           | 	; LXURSH@
   451 | 00000376 | 80F910                    | 	cmp    cl,10h
   452 | 00000379 | 7312                      | 	jnb    LSR_14
   453 | 0000037B | 89D3                      | 	mov    bx,dx
   454 | 0000037D | D3E8                      | 	shr    ax,cl
   455 | 0000037F | D3EA                      | 	shr    dx,cl
   456 | 00000381 | F6D9                      | 	neg    cl
   457 | 00000383 | 80C110                    | 	add    cl,10h
   458 | 00000386 | D3E3                      | 	shl    bx,cl
   459 | 00000388 | 09D8                      | 	or     ax,bx
   460 | 0000038A | 59                        | 	pop    cx
   461 | 0000038B | 5D                        | 	pop    bp
   462 | 0000038C | CB                        | 	retf
   463 |          |                           | LSR_14:
   464 | 0000038D | 80E910                    | 	sub    cl,10h
   465 | 00000390 | 92                        | 	xchg   dx,ax
   466 | 00000391 | 31D2                      | 	xor    dx,dx
   467 | 00000393 | D3E8                      | 	shr    ax,cl
   468 | 00000395 | 59                        | 	pop    cx
   469 | 00000396 | 5D                        | 	pop    bp
   470 | 00000397 | CB                        | 	retf
   471 |          |                           | SR_lmul:	; N_LXMUL@
   472 |          |                           | SR_ulmul:
   473 |          |                           | 	; r = a * b
   474 | 00000398 | 55                        | 	push   bp
   475 | 00000399 | 56                        | 	push   si
   476 | 0000039A | 89E5                      | 	mov    bp,sp
   477 |          |                           | 
   478 | 0000039C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   479 | 0000039D | 53                        | 	push   bx
   480 |          |                           | 
   481 | 0000039E | 8B5E06                    |         mov    bx, [bp+6]	; pop loword(a)
   482 | 000003A1 | 8B4E08                    | 	mov    cx, [bp+8]	; pop hiword(a)
   483 | 000003A4 | 8B460A                    | 	mov    ax, [bp+10]	; pop loword(b)
   484 | 000003A7 | 8B560C                    | 	mov    dx, [bp+12]	; pop hiword(b)
   485 |          |                           | 	
   486 | 000003AA | 96                        | 	xchg   si,ax
   487 | 000003AB | 92                        | 	xchg   dx,ax
   488 | 000003AC | 85C0                      | 	test   ax,ax
   489 | 000003AE | 7402                      | 	je     LSR_15
   490 | 000003B0 | F7E3                      | 	mul    bx
   491 |          |                           | LSR_15:
   492 | 000003B2 | E305                      | 	jcxz   LSR_16
   493 | 000003B4 | 91                        | 	xchg   cx,ax
   494 | 000003B5 | F7E6                      | 	mul    si
   495 | 000003B7 | 01C8                      | 	add    ax,cx
   496 |          |                           | LSR_16:
   497 | 000003B9 | 96                        | 	xchg   si,ax
   498 | 000003BA | F7E3                      | 	mul    bx
   499 | 000003BC | 01F2                      | 	add    dx,si
   500 | 000003BE | 5B                        | 	pop    bx
   501 | 000003BF | 59                        | 	pop    cx
   502 | 000003C0 | 5E                        | 	pop    si
   503 | 000003C1 | 5D                        | 	pop    bp
   504 | 000003C2 | C3                        | 	ret
   505 |          |                           | 
   506 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from clib.c
   507 |          |                           | 	CPU	8086
   508 | 000003C3 | 90                        | 	ALIGN	2
   509 | 000003C4 | E9FF0C                    | 	jmp	main	; Jump to program start
   510 |          |                           | new_line:
   511 | 000003C7 | 0D0A24                    | 	db	13,10,36
   512 |          |                           | 	ALIGN	2
   513 |          |                           | signalEOI:
   514 | 000003CA | EB08                      | 	jmp	L_clib_1
   515 |          |                           | L_clib_2:
   516 | 000003CC | B020                      | 	mov	al, 0x20
   517 | 000003CE | E620                      | 	out	0x20, al
   518 | 000003D0 | 89EC                      | 	mov	sp, bp
   519 | 000003D2 | 5D                        | 	pop	bp
   520 | 000003D3 | C3                        | 	ret
   521 |          |                           | L_clib_1:
   522 | 000003D4 | 55                        | 	push	bp
   523 | 000003D5 | 89E5                      | 	mov	bp, sp
   524 | 000003D7 | EBF3                      | 	jmp	L_clib_2
   525 | 000003D9 | 90                        | 	ALIGN	2
   526 |          |                           | exit:
   527 | 000003DA | EB0B                      | 	jmp	L_clib_4
   528 |          |                           | L_clib_5:
   529 | 000003DC | B44C                      | 	mov	ah, 4Ch
   530 | 000003DE | 8A4604                    | 	mov	al, [bp+4]
   531 | 000003E1 | CD21                      | 	int	21h
   532 | 000003E3 | 89EC                      | 	mov	sp, bp
   533 | 000003E5 | 5D                        | 	pop	bp
   534 | 000003E6 | C3                        | 	ret
   535 |          |                           | L_clib_4:
   536 | 000003E7 | 55                        | 	push	bp
   537 | 000003E8 | 89E5                      | 	mov	bp, sp
   538 | 000003EA | EBF0                      | 	jmp	L_clib_5
   539 |          |                           | 	ALIGN	2
   540 |          |                           | print:
   541 | 000003EC | EB11                      | 	jmp	L_clib_7
   542 |          |                           | L_clib_8:
   543 | 000003EE | B440                      | 	mov	ah, 40h
   544 | 000003F0 | BB0100                    | 	mov	bx, 1
   545 | 000003F3 | 8B4E06                    | 	mov	cx, [bp+6]
   546 | 000003F6 | 8B5604                    | 	mov	dx, [bp+4]
   547 | 000003F9 | CD21                      | 	int	21h
   548 | 000003FB | 89EC                      | 	mov	sp, bp
   549 | 000003FD | 5D                        | 	pop	bp
   550 | 000003FE | C3                        | 	ret
   551 |          |                           | L_clib_7:
   552 | 000003FF | 55                        | 	push	bp
   553 | 00000400 | 89E5                      | 	mov	bp, sp
   554 | 00000402 | EBEA                      | 	jmp	L_clib_8
   555 |          |                           | 	ALIGN	2
   556 |          |                           | printChar:
   557 | 00000404 | EB0B                      | 	jmp	L_clib_10
   558 |          |                           | L_clib_11:
   559 | 00000406 | B402                      | 	mov	ah, 2
   560 | 00000408 | 8A5604                    | 	mov	dl, [bp+4]
   561 | 0000040B | CD21                      | 	int	21h
   562 | 0000040D | 89EC                      | 	mov	sp, bp
   563 | 0000040F | 5D                        | 	pop	bp
   564 | 00000410 | C3                        | 	ret
   565 |          |                           | L_clib_10:
   566 | 00000411 | 55                        | 	push	bp
   567 | 00000412 | 89E5                      | 	mov	bp, sp
   568 | 00000414 | EBF0                      | 	jmp	L_clib_11
   569 |          |                           | 	ALIGN	2
   570 |          |                           | printNewLine:
   571 | 00000416 | EB0B                      | 	jmp	L_clib_13
   572 |          |                           | L_clib_14:
   573 | 00000418 | B409                      | 	mov	ah, 9
   574 | 0000041A | BA[C703]                  | 	mov	dx, new_line
   575 | 0000041D | CD21                      | 	int	21h
   576 | 0000041F | 89EC                      | 	mov	sp, bp
   577 | 00000421 | 5D                        | 	pop	bp
   578 | 00000422 | C3                        | 	ret
   579 |          |                           | L_clib_13:
   580 | 00000423 | 55                        | 	push	bp
   581 | 00000424 | 89E5                      | 	mov	bp, sp
   582 | 00000426 | EBF0                      | 	jmp	L_clib_14
   583 |          |                           | 	ALIGN	2
   584 |          |                           | printString:
   585 | 00000428 | EB1C                      | 	jmp	L_clib_16
   586 |          |                           | L_clib_17:
   587 | 0000042A | 31F6                      | 	xor	si,si
   588 | 0000042C | 8B5E04                    | 	mov	bx, [bp+4]
   589 | 0000042F | EB01                      | 	jmp	printString2
   590 |          |                           | 	printString1:
   591 | 00000431 | 46                        | 	inc	si
   592 |          |                           | 	printString2:
   593 | 00000432 | 803800                    | 	cmp	byte [bx+si],0
   594 | 00000435 | 75FA                      | 	jne	printString1
   595 | 00000437 | 89DA                      | 	mov	dx, bx
   596 | 00000439 | 89F1                      | 	mov	cx, si
   597 | 0000043B | B440                      | 	mov	ah, 40h
   598 | 0000043D | BB0100                    | 	mov	bx, 1
   599 | 00000440 | CD21                      | 	int	21h
   600 | 00000442 | 89EC                      | 	mov	sp, bp
   601 | 00000444 | 5D                        | 	pop	bp
   602 | 00000445 | C3                        | 	ret
   603 |          |                           | L_clib_16:
   604 | 00000446 | 55                        | 	push	bp
   605 | 00000447 | 89E5                      | 	mov	bp, sp
   606 | 00000449 | 51                        | 	push	cx
   607 | 0000044A | EBDE                      | 	jmp	L_clib_17
   608 |          |                           | 	ALIGN	2
   609 |          |                           | printInt:
   610 | 0000044C | E99500                    | 	jmp	L_clib_19
   611 |          |                           | L_clib_20:
   612 | 0000044F | C746FE0000                | 	mov	word [bp-2], 0
   613 | 00000454 | C746FC1027                | 	mov	word [bp-4], 10000
   614 | 00000459 | 837E0400                  | 	cmp	word [bp+4], 0
   615 | 0000045D | 7D0F                      | 	jge	L_clib_21
   616 | 0000045F | C646F62D                  | 	mov	byte [bp-10], 45
   617 | 00000463 | FF46FE                    | 	inc	word [bp-2]
   618 | 00000466 | 8B4604                    | 	mov	ax, word [bp+4]
   619 | 00000469 | F7D8                      | 	neg	ax
   620 | 0000046B | 894604                    | 	mov	word [bp+4], ax
   621 |          |                           | L_clib_21:
   622 | 0000046E | 8B4604                    | 	mov	ax, word [bp+4]
   623 | 00000471 | 85C0                      | 	test	ax, ax
   624 | 00000473 | 7507                      | 	jne	L_clib_22
   625 | 00000475 | C746FC0100                | 	mov	word [bp-4], 1
   626 | 0000047A | EB19                      | 	jmp	L_clib_23
   627 |          |                           | L_clib_22:
   628 | 0000047C | EB0C                      | 	jmp	L_clib_25
   629 |          |                           | L_clib_24:
   630 | 0000047E | 8B46FC                    | 	mov	ax, word [bp-4]
   631 | 00000481 | 99                        | 	cwd
   632 | 00000482 | B90A00                    | 	mov	cx, 10
   633 | 00000485 | F7F9                      | 	idiv	cx
   634 | 00000487 | 8946FC                    | 	mov	word [bp-4], ax
   635 |          |                           | L_clib_25:
   636 | 0000048A | 8B4604                    | 	mov	ax, word [bp+4]
   637 | 0000048D | 99                        | 	cwd
   638 | 0000048E | F77EFC                    | 	idiv	word [bp-4]
   639 | 00000491 | 85C0                      | 	test	ax, ax
   640 | 00000493 | 74E9                      | 	je	L_clib_24
   641 |          |                           | L_clib_26:
   642 |          |                           | L_clib_23:
   643 | 00000495 | EB36                      | 	jmp	L_clib_28
   644 |          |                           | L_clib_27:
   645 | 00000497 | 8B4604                    | 	mov	ax, word [bp+4]
   646 | 0000049A | 31D2                      | 	xor	dx, dx
   647 | 0000049C | F776FC                    | 	div	word [bp-4]
   648 | 0000049F | 0430                      | 	add	al, 48
   649 | 000004A1 | 8B76FE                    | 	mov	si, word [bp-2]
   650 | 000004A4 | 8D56F6                    | 	lea	dx, [bp-10]
   651 | 000004A7 | 01D6                      | 	add	si, dx
   652 | 000004A9 | 8804                      | 	mov	byte [si], al
   653 | 000004AB | FF46FE                    | 	inc	word [bp-2]
   654 | 000004AE | 8B4604                    | 	mov	ax, word [bp+4]
   655 | 000004B1 | 31D2                      | 	xor	dx, dx
   656 | 000004B3 | F776FC                    | 	div	word [bp-4]
   657 | 000004B6 | 89D0                      | 	mov	ax, dx
   658 | 000004B8 | 894604                    | 	mov	word [bp+4], ax
   659 | 000004BB | 8B46FC                    | 	mov	ax, word [bp-4]
   660 | 000004BE | 99                        | 	cwd
   661 | 000004BF | B90A00                    | 	mov	cx, 10
   662 | 000004C2 | F7F9                      | 	idiv	cx
   663 | 000004C4 | 8946FC                    | 	mov	word [bp-4], ax
   664 | 000004C7 | 8B46FC                    | 	mov	ax, word [bp-4]
   665 | 000004CA | 8946FC                    | 	mov	word [bp-4], ax
   666 |          |                           | L_clib_28:
   667 | 000004CD | 837EFC00                  | 	cmp	word [bp-4], 0
   668 | 000004D1 | 7FC4                      | 	jg	L_clib_27
   669 |          |                           | L_clib_29:
   670 | 000004D3 | FF76FE                    | 	push	word [bp-2]
   671 | 000004D6 | 8D46F6                    | 	lea	ax, [bp-10]
   672 | 000004D9 | 50                        | 	push	ax
   673 | 000004DA | E80FFF                    | 	call	print
   674 | 000004DD | 83C404                    | 	add	sp, 4
   675 | 000004E0 | 89EC                      | 	mov	sp, bp
   676 | 000004E2 | 5D                        | 	pop	bp
   677 | 000004E3 | C3                        | 	ret
   678 |          |                           | L_clib_19:
   679 | 000004E4 | 55                        | 	push	bp
   680 | 000004E5 | 89E5                      | 	mov	bp, sp
   681 | 000004E7 | 83EC0A                    | 	sub	sp, 10
   682 | 000004EA | E962FF                    | 	jmp	L_clib_20
   683 | 000004ED | 90                        | 	ALIGN	2
   684 |          |                           | printLong:
   685 | 000004EE | E9D200                    | 	jmp	L_clib_31
   686 |          |                           | L_clib_32:
   687 | 000004F1 | C746FE0000                | 	mov	word [bp-2], 0
   688 | 000004F6 | C746FA00CA                | 	mov	word [bp-6], 51712
   689 | 000004FB | C746FC9A3B                | 	mov	word [bp-4], 15258
   690 | 00000500 | 837E0600                  | 	cmp	word [bp+6], 0
   691 | 00000504 | 7F22                      | 	jg	L_clib_33
   692 | 00000506 | 7C06                      | 	jl	L_clib_34
   693 | 00000508 | 837E0400                  | 	cmp	word [bp+4], 0
   694 | 0000050C | 731A                      | 	jae	L_clib_33
   695 |          |                           | L_clib_34:
   696 | 0000050E | C646EF2D                  | 	mov	byte [bp-17], 45
   697 | 00000512 | FF46FE                    | 	inc	word [bp-2]
   698 | 00000515 | 8B4604                    | 	mov	ax, word [bp+4]
   699 | 00000518 | 8B5606                    | 	mov	dx, word [bp+6]
   700 | 0000051B | F7D8                      | 	neg	ax
   701 | 0000051D | 83D200                    | 	adc	dx, 0
   702 | 00000520 | F7DA                      | 	neg	dx
   703 | 00000522 | 894604                    | 	mov	word [bp+4], ax
   704 | 00000525 | 895606                    | 	mov	word [bp+6], dx
   705 |          |                           | L_clib_33:
   706 | 00000528 | 8B4604                    | 	mov	ax, word [bp+4]
   707 | 0000052B | 8B5606                    | 	mov	dx, word [bp+6]
   708 | 0000052E | 09C2                      | 	or	dx, ax
   709 | 00000530 | 750C                      | 	jne	L_clib_35
   710 | 00000532 | C746FA0100                | 	mov	word [bp-6], 1
   711 | 00000537 | C746FC0000                | 	mov	word [bp-4], 0
   712 | 0000053C | EB23                      | 	jmp	L_clib_36
   713 |          |                           | L_clib_35:
   714 | 0000053E | EB0E                      | 	jmp	L_clib_38
   715 |          |                           | L_clib_37:
   716 | 00000540 | B80A00                    | 	mov	ax, 10
   717 | 00000543 | 31D2                      | 	xor	dx, dx
   718 | 00000545 | 52                        | 	push	dx
   719 | 00000546 | 50                        | 	push	ax
   720 | 00000547 | 8D46FA                    | 	lea	ax, [bp-6]
   721 | 0000054A | 50                        | 	push	ax
   722 | 0000054B | E8B5FB                    | 	call	SR_asldiv
   723 |          |                           | L_clib_38:
   724 | 0000054E | FF76FC                    | 	push	word [bp-4]
   725 | 00000551 | FF76FA                    | 	push	word [bp-6]
   726 | 00000554 | FF7606                    | 	push	word [bp+6]
   727 | 00000557 | FF7604                    | 	push	word [bp+4]
   728 | 0000055A | E8F8FC                    | 	call	SR_ldiv
   729 | 0000055D | 09C2                      | 	or	dx, ax
   730 | 0000055F | 74DF                      | 	je	L_clib_37
   731 |          |                           | L_clib_39:
   732 |          |                           | L_clib_36:
   733 | 00000561 | EB41                      | 	jmp	L_clib_41
   734 |          |                           | L_clib_40:
   735 | 00000563 | FF76FC                    | 	push	word [bp-4]
   736 | 00000566 | FF76FA                    | 	push	word [bp-6]
   737 | 00000569 | FF7606                    | 	push	word [bp+6]
   738 | 0000056C | FF7604                    | 	push	word [bp+4]
   739 | 0000056F | E8EAFC                    | 	call	SR_uldiv
   740 | 00000572 | 0430                      | 	add	al, 48
   741 | 00000574 | 8B76FE                    | 	mov	si, word [bp-2]
   742 | 00000577 | 8D56EF                    | 	lea	dx, [bp-17]
   743 | 0000057A | 01D6                      | 	add	si, dx
   744 | 0000057C | 8804                      | 	mov	byte [si], al
   745 | 0000057E | FF46FE                    | 	inc	word [bp-2]
   746 | 00000581 | FF76FC                    | 	push	word [bp-4]
   747 | 00000584 | FF76FA                    | 	push	word [bp-6]
   748 | 00000587 | FF7606                    | 	push	word [bp+6]
   749 | 0000058A | FF7604                    | 	push	word [bp+4]
   750 | 0000058D | E8D4FC                    | 	call	SR_lmod
   751 | 00000590 | 894604                    | 	mov	word [bp+4], ax
   752 | 00000593 | 895606                    | 	mov	word [bp+6], dx
   753 | 00000596 | B80A00                    | 	mov	ax, 10
   754 | 00000599 | 31D2                      | 	xor	dx, dx
   755 | 0000059B | 52                        | 	push	dx
   756 | 0000059C | 50                        | 	push	ax
   757 | 0000059D | 8D46FA                    | 	lea	ax, [bp-6]
   758 | 000005A0 | 50                        | 	push	ax
   759 | 000005A1 | E85FFB                    | 	call	SR_asldiv
   760 |          |                           | L_clib_41:
   761 | 000005A4 | 837EFC00                  | 	cmp	word [bp-4], 0
   762 | 000005A8 | 7FB9                      | 	jg	L_clib_40
   763 | 000005AA | 7506                      | 	jne	L_clib_43
   764 | 000005AC | 837EFA00                  | 	cmp	word [bp-6], 0
   765 | 000005B0 | 77B1                      | 	ja	L_clib_40
   766 |          |                           | L_clib_43:
   767 |          |                           | L_clib_42:
   768 | 000005B2 | FF76FE                    | 	push	word [bp-2]
   769 | 000005B5 | 8D46EF                    | 	lea	ax, [bp-17]
   770 | 000005B8 | 50                        | 	push	ax
   771 | 000005B9 | E830FE                    | 	call	print
   772 | 000005BC | 83C404                    | 	add	sp, 4
   773 | 000005BF | 89EC                      | 	mov	sp, bp
   774 | 000005C1 | 5D                        | 	pop	bp
   775 | 000005C2 | C3                        | 	ret
   776 |          |                           | L_clib_31:
   777 | 000005C3 | 55                        | 	push	bp
   778 | 000005C4 | 89E5                      | 	mov	bp, sp
   779 | 000005C6 | 83EC12                    | 	sub	sp, 18
   780 | 000005C9 | E925FF                    | 	jmp	L_clib_32
   781 |          |                           | 	ALIGN	2
   782 |          |                           | printUInt:
   783 | 000005CC | EB7C                      | 	jmp	L_clib_45
   784 |          |                           | L_clib_46:
   785 | 000005CE | C746FE0000                | 	mov	word [bp-2], 0
   786 | 000005D3 | C746FC1027                | 	mov	word [bp-4], 10000
   787 | 000005D8 | 8B4604                    | 	mov	ax, word [bp+4]
   788 | 000005DB | 85C0                      | 	test	ax, ax
   789 | 000005DD | 7507                      | 	jne	L_clib_47
   790 | 000005DF | C746FC0100                | 	mov	word [bp-4], 1
   791 | 000005E4 | EB1B                      | 	jmp	L_clib_48
   792 |          |                           | L_clib_47:
   793 | 000005E6 | EB0D                      | 	jmp	L_clib_50
   794 |          |                           | L_clib_49:
   795 | 000005E8 | 8B46FC                    | 	mov	ax, word [bp-4]
   796 | 000005EB | 31D2                      | 	xor	dx, dx
   797 | 000005ED | B90A00                    | 	mov	cx, 10
   798 | 000005F0 | F7F1                      | 	div	cx
   799 | 000005F2 | 8946FC                    | 	mov	word [bp-4], ax
   800 |          |                           | L_clib_50:
   801 | 000005F5 | 8B4604                    | 	mov	ax, word [bp+4]
   802 | 000005F8 | 31D2                      | 	xor	dx, dx
   803 | 000005FA | F776FC                    | 	div	word [bp-4]
   804 | 000005FD | 85C0                      | 	test	ax, ax
   805 | 000005FF | 74E7                      | 	je	L_clib_49
   806 |          |                           | L_clib_51:
   807 |          |                           | L_clib_48:
   808 | 00000601 | EB2F                      | 	jmp	L_clib_53
   809 |          |                           | L_clib_52:
   810 | 00000603 | 8B4604                    | 	mov	ax, word [bp+4]
   811 | 00000606 | 31D2                      | 	xor	dx, dx
   812 | 00000608 | F776FC                    | 	div	word [bp-4]
   813 | 0000060B | 0430                      | 	add	al, 48
   814 | 0000060D | 8B76FE                    | 	mov	si, word [bp-2]
   815 | 00000610 | 8D56F6                    | 	lea	dx, [bp-10]
   816 | 00000613 | 01D6                      | 	add	si, dx
   817 | 00000615 | 8804                      | 	mov	byte [si], al
   818 | 00000617 | FF46FE                    | 	inc	word [bp-2]
   819 | 0000061A | 8B4604                    | 	mov	ax, word [bp+4]
   820 | 0000061D | 31D2                      | 	xor	dx, dx
   821 | 0000061F | F776FC                    | 	div	word [bp-4]
   822 | 00000622 | 895604                    | 	mov	word [bp+4], dx
   823 | 00000625 | 8B46FC                    | 	mov	ax, word [bp-4]
   824 | 00000628 | 31D2                      | 	xor	dx, dx
   825 | 0000062A | B90A00                    | 	mov	cx, 10
   826 | 0000062D | F7F1                      | 	div	cx
   827 | 0000062F | 8946FC                    | 	mov	word [bp-4], ax
   828 |          |                           | L_clib_53:
   829 | 00000632 | 8B46FC                    | 	mov	ax, word [bp-4]
   830 | 00000635 | 85C0                      | 	test	ax, ax
   831 | 00000637 | 75CA                      | 	jne	L_clib_52
   832 |          |                           | L_clib_54:
   833 | 00000639 | FF76FE                    | 	push	word [bp-2]
   834 | 0000063C | 8D46F6                    | 	lea	ax, [bp-10]
   835 | 0000063F | 50                        | 	push	ax
   836 | 00000640 | E8A9FD                    | 	call	print
   837 | 00000643 | 83C404                    | 	add	sp, 4
   838 | 00000646 | 89EC                      | 	mov	sp, bp
   839 | 00000648 | 5D                        | 	pop	bp
   840 | 00000649 | C3                        | 	ret
   841 |          |                           | L_clib_45:
   842 | 0000064A | 55                        | 	push	bp
   843 | 0000064B | 89E5                      | 	mov	bp, sp
   844 | 0000064D | 83EC0A                    | 	sub	sp, 10
   845 | 00000650 | E97BFF                    | 	jmp	L_clib_46
   846 | 00000653 | 90                        | 	ALIGN	2
   847 |          |                           | printULong:
   848 | 00000654 | E99E00                    | 	jmp	L_clib_56
   849 |          |                           | L_clib_57:
   850 | 00000657 | C746FE0000                | 	mov	word [bp-2], 0
   851 | 0000065C | C746FA00CA                | 	mov	word [bp-6], 51712
   852 | 00000661 | C746FC9A3B                | 	mov	word [bp-4], 15258
   853 | 00000666 | 8B4604                    | 	mov	ax, word [bp+4]
   854 | 00000669 | 8B5606                    | 	mov	dx, word [bp+6]
   855 | 0000066C | 09C2                      | 	or	dx, ax
   856 | 0000066E | 750C                      | 	jne	L_clib_58
   857 | 00000670 | C746FA0100                | 	mov	word [bp-6], 1
   858 | 00000675 | C746FC0000                | 	mov	word [bp-4], 0
   859 | 0000067A | EB23                      | 	jmp	L_clib_59
   860 |          |                           | L_clib_58:
   861 | 0000067C | EB0E                      | 	jmp	L_clib_61
   862 |          |                           | L_clib_60:
   863 | 0000067E | B80A00                    | 	mov	ax, 10
   864 | 00000681 | 31D2                      | 	xor	dx, dx
   865 | 00000683 | 52                        | 	push	dx
   866 | 00000684 | 50                        | 	push	ax
   867 | 00000685 | 8D46FA                    | 	lea	ax, [bp-6]
   868 | 00000688 | 50                        | 	push	ax
   869 | 00000689 | E820FB                    | 	call	SR_asuldiv
   870 |          |                           | L_clib_61:
   871 | 0000068C | FF76FC                    | 	push	word [bp-4]
   872 | 0000068F | FF76FA                    | 	push	word [bp-6]
   873 | 00000692 | FF7606                    | 	push	word [bp+6]
   874 | 00000695 | FF7604                    | 	push	word [bp+4]
   875 | 00000698 | E8C1FB                    | 	call	SR_uldiv
   876 | 0000069B | 09C2                      | 	or	dx, ax
   877 | 0000069D | 74DF                      | 	je	L_clib_60
   878 |          |                           | L_clib_62:
   879 |          |                           | L_clib_59:
   880 | 0000069F | EB39                      | 	jmp	L_clib_64
   881 |          |                           | L_clib_63:
   882 | 000006A1 | FF76FC                    | 	push	word [bp-4]
   883 | 000006A4 | FF76FA                    | 	push	word [bp-6]
   884 | 000006A7 | FF7606                    | 	push	word [bp+6]
   885 | 000006AA | FF7604                    | 	push	word [bp+4]
   886 | 000006AD | E8ACFB                    | 	call	SR_uldiv
   887 | 000006B0 | 0430                      | 	add	al, 48
   888 | 000006B2 | 8B76FE                    | 	mov	si, word [bp-2]
   889 | 000006B5 | 8D56EF                    | 	lea	dx, [bp-17]
   890 | 000006B8 | 01D6                      | 	add	si, dx
   891 | 000006BA | 8804                      | 	mov	byte [si], al
   892 | 000006BC | FF46FE                    | 	inc	word [bp-2]
   893 | 000006BF | FF76FC                    | 	push	word [bp-4]
   894 | 000006C2 | FF76FA                    | 	push	word [bp-6]
   895 | 000006C5 | 8D4604                    | 	lea	ax, [bp+4]
   896 | 000006C8 | 50                        | 	push	ax
   897 | 000006C9 | E800FB                    | 	call	SR_asilmod
   898 | 000006CC | B80A00                    | 	mov	ax, 10
   899 | 000006CF | 31D2                      | 	xor	dx, dx
   900 | 000006D1 | 52                        | 	push	dx
   901 | 000006D2 | 50                        | 	push	ax
   902 | 000006D3 | 8D46FA                    | 	lea	ax, [bp-6]
   903 | 000006D6 | 50                        | 	push	ax
   904 | 000006D7 | E8D2FA                    | 	call	SR_asuldiv
   905 |          |                           | L_clib_64:
   906 | 000006DA | 8B46FA                    | 	mov	ax, word [bp-6]
   907 | 000006DD | 8B56FC                    | 	mov	dx, word [bp-4]
   908 | 000006E0 | 09C2                      | 	or	dx, ax
   909 | 000006E2 | 75BD                      | 	jne	L_clib_63
   910 |          |                           | L_clib_65:
   911 | 000006E4 | FF76FE                    | 	push	word [bp-2]
   912 | 000006E7 | 8D46EF                    | 	lea	ax, [bp-17]
   913 | 000006EA | 50                        | 	push	ax
   914 | 000006EB | E8FEFC                    | 	call	print
   915 | 000006EE | 83C404                    | 	add	sp, 4
   916 | 000006F1 | 89EC                      | 	mov	sp, bp
   917 | 000006F3 | 5D                        | 	pop	bp
   918 | 000006F4 | C3                        | 	ret
   919 |          |                           | L_clib_56:
   920 | 000006F5 | 55                        | 	push	bp
   921 | 000006F6 | 89E5                      | 	mov	bp, sp
   922 | 000006F8 | 83EC12                    | 	sub	sp, 18
   923 | 000006FB | E959FF                    | 	jmp	L_clib_57
   924 |          |                           | 	ALIGN	2
   925 |          |                           | printByte:
   926 | 000006FE | EB61                      | 	jmp	L_clib_67
   927 |          |                           | L_clib_68:
   928 | 00000700 | 8A4604                    | 	mov	al, byte [bp+4]
   929 | 00000703 | 98                        | 	cbw
   930 | 00000704 | B90400                    | 	mov	cx, 4
   931 | 00000707 | D3F8                      | 	sar	ax, cl
   932 | 00000709 | 83E00F                    | 	and	ax, 15
   933 | 0000070C | 8846FF                    | 	mov	byte [bp-1], al
   934 | 0000070F | 807EFF09                  | 	cmp	byte [bp-1], 9
   935 | 00000713 | 7E0C                      | 	jle	L_clib_69
   936 | 00000715 | 8A46FF                    | 	mov	al, byte [bp-1]
   937 | 00000718 | 98                        | 	cbw
   938 | 00000719 | 83E80A                    | 	sub	ax, 10
   939 | 0000071C | 83C041                    | 	add	ax, 65
   940 | 0000071F | EB07                      | 	jmp	L_clib_70
   941 |          |                           | L_clib_69:
   942 | 00000721 | 8A46FF                    | 	mov	al, byte [bp-1]
   943 | 00000724 | 98                        | 	cbw
   944 | 00000725 | 83C030                    | 	add	ax, 48
   945 |          |                           | L_clib_70:
   946 | 00000728 | 8846FD                    | 	mov	byte [bp-3], al
   947 | 0000072B | 8A4604                    | 	mov	al, byte [bp+4]
   948 | 0000072E | 240F                      | 	and	al, 15
   949 | 00000730 | 8846FF                    | 	mov	byte [bp-1], al
   950 | 00000733 | 807EFF09                  | 	cmp	byte [bp-1], 9
   951 | 00000737 | 7E0C                      | 	jle	L_clib_71
   952 | 00000739 | 8A46FF                    | 	mov	al, byte [bp-1]
   953 | 0000073C | 98                        | 	cbw
   954 | 0000073D | 83E80A                    | 	sub	ax, 10
   955 | 00000740 | 83C041                    | 	add	ax, 65
   956 | 00000743 | EB07                      | 	jmp	L_clib_72
   957 |          |                           | L_clib_71:
   958 | 00000745 | 8A46FF                    | 	mov	al, byte [bp-1]
   959 | 00000748 | 98                        | 	cbw
   960 | 00000749 | 83C030                    | 	add	ax, 48
   961 |          |                           | L_clib_72:
   962 | 0000074C | 8846FE                    | 	mov	byte [bp-2], al
   963 | 0000074F | B80200                    | 	mov	ax, 2
   964 | 00000752 | 50                        | 	push	ax
   965 | 00000753 | 8D46FD                    | 	lea	ax, [bp-3]
   966 | 00000756 | 50                        | 	push	ax
   967 | 00000757 | E892FC                    | 	call	print
   968 | 0000075A | 83C404                    | 	add	sp, 4
   969 | 0000075D | 89EC                      | 	mov	sp, bp
   970 | 0000075F | 5D                        | 	pop	bp
   971 | 00000760 | C3                        | 	ret
   972 |          |                           | L_clib_67:
   973 | 00000761 | 55                        | 	push	bp
   974 | 00000762 | 89E5                      | 	mov	bp, sp
   975 | 00000764 | 83EC04                    | 	sub	sp, 4
   976 | 00000767 | EB97                      | 	jmp	L_clib_68
   977 | 00000769 | 90                        | 	ALIGN	2
   978 |          |                           | printWord:
   979 | 0000076A | EB59                      | 	jmp	L_clib_74
   980 |          |                           | L_clib_75:
   981 | 0000076C | C746FE0300                | 	mov	word [bp-2], 3
   982 | 00000771 | EB3A                      | 	jmp	L_clib_77
   983 |          |                           | L_clib_76:
   984 | 00000773 | 8B4604                    | 	mov	ax, word [bp+4]
   985 | 00000776 | 83E00F                    | 	and	ax, 15
   986 | 00000779 | 8846FD                    | 	mov	byte [bp-3], al
   987 | 0000077C | 807EFD09                  | 	cmp	byte [bp-3], 9
   988 | 00000780 | 7E0C                      | 	jle	L_clib_80
   989 | 00000782 | 8A46FD                    | 	mov	al, byte [bp-3]
   990 | 00000785 | 98                        | 	cbw
   991 | 00000786 | 83E80A                    | 	sub	ax, 10
   992 | 00000789 | 83C041                    | 	add	ax, 65
   993 | 0000078C | EB07                      | 	jmp	L_clib_81
   994 |          |                           | L_clib_80:
   995 | 0000078E | 8A46FD                    | 	mov	al, byte [bp-3]
   996 | 00000791 | 98                        | 	cbw
   997 | 00000792 | 83C030                    | 	add	ax, 48
   998 |          |                           | L_clib_81:
   999 | 00000795 | 8B76FE                    | 	mov	si, word [bp-2]
  1000 | 00000798 | 8D56F9                    | 	lea	dx, [bp-7]
  1001 | 0000079B | 01D6                      | 	add	si, dx
  1002 | 0000079D | 8804                      | 	mov	byte [si], al
  1003 | 0000079F | 8B4604                    | 	mov	ax, word [bp+4]
  1004 | 000007A2 | B90400                    | 	mov	cx, 4
  1005 | 000007A5 | D3F8                      | 	sar	ax, cl
  1006 | 000007A7 | 894604                    | 	mov	word [bp+4], ax
  1007 |          |                           | L_clib_79:
  1008 | 000007AA | FF4EFE                    | 	dec	word [bp-2]
  1009 |          |                           | L_clib_77:
  1010 | 000007AD | 837EFE00                  | 	cmp	word [bp-2], 0
  1011 | 000007B1 | 7DC0                      | 	jge	L_clib_76
  1012 |          |                           | L_clib_78:
  1013 | 000007B3 | B80400                    | 	mov	ax, 4
  1014 | 000007B6 | 50                        | 	push	ax
  1015 | 000007B7 | 8D46F9                    | 	lea	ax, [bp-7]
  1016 | 000007BA | 50                        | 	push	ax
  1017 | 000007BB | E82EFC                    | 	call	print
  1018 | 000007BE | 83C404                    | 	add	sp, 4
  1019 | 000007C1 | 89EC                      | 	mov	sp, bp
  1020 | 000007C3 | 5D                        | 	pop	bp
  1021 | 000007C4 | C3                        | 	ret
  1022 |          |                           | L_clib_74:
  1023 | 000007C5 | 55                        | 	push	bp
  1024 | 000007C6 | 89E5                      | 	mov	bp, sp
  1025 | 000007C8 | 83EC08                    | 	sub	sp, 8
  1026 | 000007CB | EB9F                      | 	jmp	L_clib_75
  1027 | 000007CD | 90                        | 	ALIGN	2
  1028 |          |                           | printDWord:
  1029 | 000007CE | E9AC00                    | 	jmp	L_clib_83
  1030 |          |                           | L_clib_84:
  1031 | 000007D1 | 8D4604                    | 	lea	ax, [bp+4]
  1032 | 000007D4 | 89C6                      | 	mov	si, ax
  1033 | 000007D6 | 8B04                      | 	mov	ax, word [si]
  1034 | 000007D8 | 8946FA                    | 	mov	word [bp-6], ax
  1035 | 000007DB | 8D4604                    | 	lea	ax, [bp+4]
  1036 | 000007DE | 89C6                      | 	mov	si, ax
  1037 | 000007E0 | 83C602                    | 	add	si, 2
  1038 | 000007E3 | 8B04                      | 	mov	ax, word [si]
  1039 | 000007E5 | 8946F8                    | 	mov	word [bp-8], ax
  1040 | 000007E8 | C746FE0300                | 	mov	word [bp-2], 3
  1041 | 000007ED | EB76                      | 	jmp	L_clib_86
  1042 |          |                           | L_clib_85:
  1043 | 000007EF | 8B46FA                    | 	mov	ax, word [bp-6]
  1044 | 000007F2 | 83E00F                    | 	and	ax, 15
  1045 | 000007F5 | 8846FD                    | 	mov	byte [bp-3], al
  1046 | 000007F8 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1047 | 000007FC | 7E0C                      | 	jle	L_clib_89
  1048 | 000007FE | 8A46FD                    | 	mov	al, byte [bp-3]
  1049 | 00000801 | 98                        | 	cbw
  1050 | 00000802 | 83E80A                    | 	sub	ax, 10
  1051 | 00000805 | 83C041                    | 	add	ax, 65
  1052 | 00000808 | EB07                      | 	jmp	L_clib_90
  1053 |          |                           | L_clib_89:
  1054 | 0000080A | 8A46FD                    | 	mov	al, byte [bp-3]
  1055 | 0000080D | 98                        | 	cbw
  1056 | 0000080E | 83C030                    | 	add	ax, 48
  1057 |          |                           | L_clib_90:
  1058 | 00000811 | 8B56FE                    | 	mov	dx, word [bp-2]
  1059 | 00000814 | 83C204                    | 	add	dx, 4
  1060 | 00000817 | 89D6                      | 	mov	si, dx
  1061 | 00000819 | 8D56F0                    | 	lea	dx, [bp-16]
  1062 | 0000081C | 01D6                      | 	add	si, dx
  1063 | 0000081E | 8804                      | 	mov	byte [si], al
  1064 | 00000820 | 8B46FA                    | 	mov	ax, word [bp-6]
  1065 | 00000823 | B90400                    | 	mov	cx, 4
  1066 | 00000826 | D3F8                      | 	sar	ax, cl
  1067 | 00000828 | 8946FA                    | 	mov	word [bp-6], ax
  1068 | 0000082B | 8B46F8                    | 	mov	ax, word [bp-8]
  1069 | 0000082E | 83E00F                    | 	and	ax, 15
  1070 | 00000831 | 8846FD                    | 	mov	byte [bp-3], al
  1071 | 00000834 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1072 | 00000838 | 7E0C                      | 	jle	L_clib_91
  1073 | 0000083A | 8A46FD                    | 	mov	al, byte [bp-3]
  1074 | 0000083D | 98                        | 	cbw
  1075 | 0000083E | 83E80A                    | 	sub	ax, 10
  1076 | 00000841 | 83C041                    | 	add	ax, 65
  1077 | 00000844 | EB07                      | 	jmp	L_clib_92
  1078 |          |                           | L_clib_91:
  1079 | 00000846 | 8A46FD                    | 	mov	al, byte [bp-3]
  1080 | 00000849 | 98                        | 	cbw
  1081 | 0000084A | 83C030                    | 	add	ax, 48
  1082 |          |                           | L_clib_92:
  1083 | 0000084D | 8B76FE                    | 	mov	si, word [bp-2]
  1084 | 00000850 | 8D56F0                    | 	lea	dx, [bp-16]
  1085 | 00000853 | 01D6                      | 	add	si, dx
  1086 | 00000855 | 8804                      | 	mov	byte [si], al
  1087 | 00000857 | 8B46F8                    | 	mov	ax, word [bp-8]
  1088 | 0000085A | B90400                    | 	mov	cx, 4
  1089 | 0000085D | D3F8                      | 	sar	ax, cl
  1090 | 0000085F | 8946F8                    | 	mov	word [bp-8], ax
  1091 |          |                           | L_clib_88:
  1092 | 00000862 | FF4EFE                    | 	dec	word [bp-2]
  1093 |          |                           | L_clib_86:
  1094 | 00000865 | 837EFE00                  | 	cmp	word [bp-2], 0
  1095 | 00000869 | 7D84                      | 	jge	L_clib_85
  1096 |          |                           | L_clib_87:
  1097 | 0000086B | B80800                    | 	mov	ax, 8
  1098 | 0000086E | 50                        | 	push	ax
  1099 | 0000086F | 8D46F0                    | 	lea	ax, [bp-16]
  1100 | 00000872 | 50                        | 	push	ax
  1101 | 00000873 | E876FB                    | 	call	print
  1102 | 00000876 | 83C404                    | 	add	sp, 4
  1103 | 00000879 | 89EC                      | 	mov	sp, bp
  1104 | 0000087B | 5D                        | 	pop	bp
  1105 | 0000087C | C3                        | 	ret
  1106 |          |                           | L_clib_83:
  1107 | 0000087D | 55                        | 	push	bp
  1108 | 0000087E | 89E5                      | 	mov	bp, sp
  1109 | 00000880 | 83EC10                    | 	sub	sp, 16
  1110 | 00000883 | E94BFF                    | 	jmp	L_clib_84
  1111 |          |                           | 
  1112 |          |                           | reset:
  1113 | 00000886 | 50                        | 	push ax
  1114 | 00000887 | 53                        | 	push bx
  1115 | 00000888 | 51                        | 	push cx
  1116 | 00000889 | 52                        | 	push dx
  1117 | 0000088A | 56                        | 	push si
  1118 | 0000088B | 57                        | 	push di
  1119 | 0000088C | 55                        | 	push bp
  1120 | 0000088D | 06                        | 	push es
  1121 | 0000088E | 1E                        | 	push ds
  1122 |          |                           | 	
  1123 | 0000088F | FB                        | 	sti
  1124 | 00000890 | E86100                    | 	call reset_handler
  1125 | 00000893 | FA                        | 	cli
  1126 |          |                           | 
  1127 | 00000894 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1128 | 00000896 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1129 |          |                           | 	
  1130 | 00000898 | 1F                        | 	pop ds
  1131 | 00000899 | 07                        | 	pop es
  1132 | 0000089A | 5D                        | 	pop bp
  1133 | 0000089B | 5F                        | 	pop di
  1134 | 0000089C | 5E                        | 	pop si
  1135 | 0000089D | 5A                        | 	pop dx
  1136 | 0000089E | 59                        | 	pop cx
  1137 | 0000089F | 5B                        | 	pop bx
  1138 | 000008A0 | 58                        | 	pop ax
  1139 | 000008A1 | CF                        | 	iret
  1140 |          |                           | 
  1141 |          |                           | tick:
  1142 | 000008A2 | 50                        | 	push ax
  1143 | 000008A3 | 53                        | 	push bx
  1144 | 000008A4 | 51                        | 	push cx
  1145 | 000008A5 | 52                        | 	push dx
  1146 | 000008A6 | 56                        | 	push si
  1147 | 000008A7 | 57                        | 	push di
  1148 | 000008A8 | 55                        | 	push bp
  1149 | 000008A9 | 06                        | 	push es
  1150 | 000008AA | 1E                        | 	push ds
  1151 |          |                           | 	
  1152 |          |                           | 	
  1153 | 000008AB | FB                        | 	sti
  1154 | 000008AC | E85F00                    | 	call tick_handler
  1155 | 000008AF | FA                        | 	cli	
  1156 |          |                           | 	
  1157 | 000008B0 | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1158 | 000008B2 | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)
  1159 |          |                           | 		
  1160 | 000008B4 | 1F                        | 	pop ds
  1161 | 000008B5 | 07                        | 	pop es
  1162 | 000008B6 | 5D                        | 	pop bp
  1163 | 000008B7 | 5F                        | 	pop di
  1164 | 000008B8 | 5E                        | 	pop si
  1165 | 000008B9 | 5A                        | 	pop dx
  1166 | 000008BA | 59                        | 	pop cx
  1167 | 000008BB | 5B                        | 	pop bx
  1168 | 000008BC | 58                        | 	pop ax
  1169 | 000008BD | CF                        | 	iret
  1170 |          |                           | 	
  1171 |          |                           | keyboard:
  1172 | 000008BE | 50                        | 	push ax
  1173 | 000008BF | 53                        | 	push bx
  1174 | 000008C0 | 51                        | 	push cx
  1175 | 000008C1 | 52                        | 	push dx
  1176 | 000008C2 | 56                        | 	push si
  1177 | 000008C3 | 57                        | 	push di
  1178 | 000008C4 | 55                        | 	push bp
  1179 | 000008C5 | 06                        | 	push es
  1180 | 000008C6 | 1E                        | 	push ds
  1181 |          |                           | 	
  1182 | 000008C7 | FB                        | 	sti
  1183 | 000008C8 | E8A700                    | 	call keyboard_handler
  1184 | 000008CB | FA                        | 	cli	
  1185 |          |                           | 	
  1186 | 000008CC | B020                      | 	mov	al, 0x20	; Load nonspecific EOI value (0x20) into register al
  1187 | 000008CE | E620                      | 	out	0x20, al	; Write EOI to PIC (port 0x20)	
  1188 |          |                           | 	
  1189 |          |                           | 	
  1190 | 000008D0 | 1F                        | 	pop ds
  1191 | 000008D1 | 07                        | 	pop es
  1192 | 000008D2 | 5D                        | 	pop bp
  1193 | 000008D3 | 5F                        | 	pop di
  1194 | 000008D4 | 5E                        | 	pop si
  1195 | 000008D5 | 5A                        | 	pop dx
  1196 | 000008D6 | 59                        | 	pop cx
  1197 | 000008D7 | 5B                        | 	pop bx
  1198 | 000008D8 | 58                        | 	pop ax
  1199 | 000008D9 | CF                        | 	iret
  1200 |          |                           | 	
  1201 |          |                           | YKDispatcher:
  1202 |          |                           | 
  1203 | 000008DA | FA                        | 		cli
  1204 | 000008DB | 55                        | 		push 	bp
  1205 | 000008DC | 89E5                      | 		mov		bp, sp		
  1206 |          |                           | 
  1207 | 000008DE | 8B5E04                    | 		mov		bx, [bp+4]	;Obtain stack pointer from TCB
  1208 | 000008E1 | 8B6704                    | 		mov		sp, [bx+4]	;Load stack pointer into SP
  1209 |          |                           | 
  1210 | 000008E4 | 5D                        | 		pop		bp
  1211 | 000008E5 | 07                        | 		pop		es
  1212 | 000008E6 | 1F                        | 		pop		ds
  1213 | 000008E7 | 5E                        | 		pop		si
  1214 | 000008E8 | 5F                        | 		pop		di
  1215 | 000008E9 | 5A                        | 		pop		dx
  1216 | 000008EA | 59                        | 		pop		cx
  1217 | 000008EB | 5B                        | 		pop		bx
  1218 | 000008EC | 58                        | 		pop		ax
  1219 |          |                           | 
  1220 | 000008ED | CF                        | 		iret
  1221 |          |                           | 
  1222 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from myinth.i
  1223 |          |                           | 	CPU	8086
  1224 |          |                           | 	ALIGN	2
  1225 | 000008EE | E9D507                    | 	jmp	main	; Jump to program start
  1226 | 000008F1 | 90                        | 	ALIGN	2
  1227 |          |                           | counter:
  1228 | 000008F2 | 0000                      | 	DW	0
  1229 |          |                           | 	ALIGN	2
  1230 |          |                           | reset_handler:
  1231 |          |                           | 	; >>>>> Line:	7
  1232 |          |                           | 	; >>>>> void reset_handler(){ 
  1233 | 000008F4 | EB0D                      | 	jmp	L_myinth_1
  1234 |          |                           | L_myinth_2:
  1235 |          |                           | 	; >>>>> Line:	8
  1236 |          |                           | 	; >>>>> exit(0); 
  1237 | 000008F6 | 30C0                      | 	xor	al, al
  1238 | 000008F8 | 50                        | 	push	ax
  1239 | 000008F9 | E8DEFA                    | 	call	exit
  1240 | 000008FC | 83C402                    | 	add	sp, 2
  1241 | 000008FF | 89EC                      | 	mov	sp, bp
  1242 | 00000901 | 5D                        | 	pop	bp
  1243 | 00000902 | C3                        | 	ret
  1244 |          |                           | L_myinth_1:
  1245 | 00000903 | 55                        | 	push	bp
  1246 | 00000904 | 89E5                      | 	mov	bp, sp
  1247 | 00000906 | EBEE                      | 	jmp	L_myinth_2
  1248 |          |                           | L_myinth_4:
  1249 | 00000908 | 5449434B2000              | 	DB	"TICK ",0
  1250 |          |                           | 	ALIGN	2
  1251 |          |                           | tick_handler:
  1252 |          |                           | 	; >>>>> Line:	11
  1253 |          |                           | 	; >>>>> void tick_handler(){ 
  1254 | 0000090E | EB28                      | 	jmp	L_myinth_5
  1255 |          |                           | L_myinth_6:
  1256 |          |                           | 	; >>>>> Line:	12
  1257 |          |                           | 	; >>>>> counter++; 
  1258 | 00000910 | FF06[F208]                | 	inc	word [counter]
  1259 |          |                           | 	; >>>>> Line:	13
  1260 |          |                           | 	; >>>>> printNewLine(); 
  1261 | 00000914 | E8FFFA                    | 	call	printNewLine
  1262 |          |                           | 	; >>>>> Line:	14
  1263 |          |                           | 	; >>>>> printNewLine(); 
  1264 | 00000917 | E8FCFA                    | 	call	printNewLine
  1265 |          |                           | 	; >>>>> Line:	15
  1266 |          |                           | 	; >>>>> printString("TICK "); 
  1267 | 0000091A | B8[0809]                  | 	mov	ax, L_myinth_4
  1268 | 0000091D | 50                        | 	push	ax
  1269 | 0000091E | E807FB                    | 	call	printString
  1270 | 00000921 | 83C402                    | 	add	sp, 2
  1271 |          |                           | 	; >>>>> Line:	16
  1272 |          |                           | 	; >>>>> printInt(counter); 
  1273 | 00000924 | FF36[F208]                | 	push	word [counter]
  1274 | 00000928 | E821FB                    | 	call	printInt
  1275 | 0000092B | 83C402                    | 	add	sp, 2
  1276 |          |                           | 	; >>>>> Line:	17
  1277 |          |                           | 	; >>>>> printNewLine(); 
  1278 | 0000092E | E8E5FA                    | 	call	printNewLine
  1279 |          |                           | 	; >>>>> Line:	18
  1280 |          |                           | 	; >>>>> printNewLine(); 
  1281 | 00000931 | E8E2FA                    | 	call	printNewLine
  1282 | 00000934 | 89EC                      | 	mov	sp, bp
  1283 | 00000936 | 5D                        | 	pop	bp
  1284 | 00000937 | C3                        | 	ret
  1285 |          |                           | L_myinth_5:
  1286 | 00000938 | 55                        | 	push	bp
  1287 | 00000939 | 89E5                      | 	mov	bp, sp
  1288 | 0000093B | EBD3                      | 	jmp	L_myinth_6
  1289 |          |                           | L_myinth_11:
  1290 | 0000093D | 2049474E4F52454400        | 	DB	" IGNORED",0
  1291 |          |                           | L_myinth_10:
  1292 | 00000946 | 4B4559505245535320-       | 	DB	"KEYPRESS ",0
  1293 | 0000094F | 00                        | ...
  1294 |          |                           | L_myinth_9:
  1295 | 00000950 | 44454C415920434F4D-       | 	DB	"DELAY COMPLETE",0
  1296 | 00000959 | 504C45544500              | ...
  1297 |          |                           | L_myinth_8:
  1298 | 0000095F | 44454C4159204B4559-       | 	DB	"DELAY KEY PRESSED",0
  1299 | 00000968 | 205052455353454400        | ...
  1300 | 00000971 | 90                        | 	ALIGN	2
  1301 |          |                           | keyboard_handler:
  1302 |          |                           | 	; >>>>> Line:	21
  1303 |          |                           | 	; >>>>> void keyboard_handler(){ 
  1304 | 00000972 | E98A00                    | 	jmp	L_myinth_12
  1305 |          |                           | L_myinth_13:
  1306 |          |                           | 	; >>>>> Line:	25
  1307 |          |                           | 	; >>>>> if(kb == 'd'){ 
  1308 | 00000975 | A0[C000]                  | 	mov	al, byte [KeyBuffer]
  1309 | 00000978 | 8846FD                    | 	mov	byte [bp-3], al
  1310 |          |                           | 	; >>>>> Line:	25
  1311 |          |                           | 	; >>>>> if(kb == 'd'){ 
  1312 | 0000097B | 807EFD64                  | 	cmp	byte [bp-3], 100
  1313 | 0000097F | 753F                      | 	jne	L_myinth_14
  1314 |          |                           | 	; >>>>> Line:	26
  1315 |          |                           | 	; >>>>> printNewLine(); 
  1316 | 00000981 | E892FA                    | 	call	printNewLine
  1317 |          |                           | 	; >>>>> Line:	27
  1318 |          |                           | 	; >>>>> printNewLine(); 
  1319 | 00000984 | E88FFA                    | 	call	printNewLine
  1320 |          |                           | 	; >>>>> Line:	28
  1321 |          |                           | 	; >>>>> printString("DELAY KEY PRESSED"); 
  1322 | 00000987 | B8[5F09]                  | 	mov	ax, L_myinth_8
  1323 | 0000098A | 50                        | 	push	ax
  1324 | 0000098B | E89AFA                    | 	call	printString
  1325 | 0000098E | 83C402                    | 	add	sp, 2
  1326 |          |                           | 	; >>>>> Line:	29
  1327 |          |                           | 	; >>>>> printNewLine(); 
  1328 | 00000991 | E882FA                    | 	call	printNewLine
  1329 |          |                           | 	; >>>>> Line:	30
  1330 |          |                           | 	; >>>>> printNewLine(); 
  1331 | 00000994 | E87FFA                    | 	call	printNewLine
  1332 |          |                           | 	; >>>>> Line:	33
  1333 |          |                           | 	; >>>>> for(i = 0; i < 5000; i++){ 
  1334 | 00000997 | C746FE0000                | 	mov	word [bp-2], 0
  1335 | 0000099C | EB03                      | 	jmp	L_myinth_16
  1336 |          |                           | L_myinth_15:
  1337 |          |                           | L_myinth_18:
  1338 |          |                           | 	; >>>>> Line:	35
  1339 |          |                           | 	; >>>>> } 
  1340 | 0000099E | FF46FE                    | 	inc	word [bp-2]
  1341 |          |                           | L_myinth_16:
  1342 | 000009A1 | 817EFE8813                | 	cmp	word [bp-2], 5000
  1343 | 000009A6 | 7CF6                      | 	jl	L_myinth_15
  1344 |          |                           | L_myinth_17:
  1345 |          |                           | 	; >>>>> Line:	37
  1346 |          |                           | 	; >>>>> printNewLine(); 
  1347 | 000009A8 | E86BFA                    | 	call	printNewLine
  1348 |          |                           | 	; >>>>> Line:	38
  1349 |          |                           | 	; >>>>> printNewLine(); 
  1350 | 000009AB | E868FA                    | 	call	printNewLine
  1351 |          |                           | 	; >>>>> Line:	39
  1352 |          |                           | 	; >>>>> printString("DELAY COMPLETE"); 
  1353 | 000009AE | B8[5009]                  | 	mov	ax, L_myinth_9
  1354 | 000009B1 | 50                        | 	push	ax
  1355 | 000009B2 | E873FA                    | 	call	printString
  1356 | 000009B5 | 83C402                    | 	add	sp, 2
  1357 |          |                           | 	; >>>>> Line:	40
  1358 |          |                           | 	; >>>>> printNewLine(); 
  1359 | 000009B8 | E85BFA                    | 	call	printNewLine
  1360 |          |                           | 	; >>>>> Line:	41
  1361 |          |                           | 	; >>>>> printNewLine(); 
  1362 | 000009BB | E858FA                    | 	call	printNewLine
  1363 | 000009BE | EB3B                      | 	jmp	L_myinth_19
  1364 |          |                           | L_myinth_14:
  1365 |          |                           | 	; >>>>> Line:	45
  1366 |          |                           | 	; >>>>> printNewLine(); 
  1367 | 000009C0 | E853FA                    | 	call	printNewLine
  1368 |          |                           | 	; >>>>> Line:	46
  1369 |          |                           | 	; >>>>> printNewLine(); 
  1370 | 000009C3 | E850FA                    | 	call	printNewLine
  1371 |          |                           | 	; >>>>> Line:	47
  1372 |          |                           | 	; >>>>> printString("KEYPRESS "); 
  1373 | 000009C6 | B8[4609]                  | 	mov	ax, L_myinth_10
  1374 | 000009C9 | 50                        | 	push	ax
  1375 | 000009CA | E85BFA                    | 	call	printString
  1376 | 000009CD | 83C402                    | 	add	sp, 2
  1377 |          |                           | 	; >>>>> Line:	48
  1378 |          |                           | 	; >>>>> printChar('('); 
  1379 | 000009D0 | B028                      | 	mov	al, 40
  1380 | 000009D2 | 50                        | 	push	ax
  1381 | 000009D3 | E82EFA                    | 	call	printChar
  1382 | 000009D6 | 83C402                    | 	add	sp, 2
  1383 |          |                           | 	; >>>>> Line:	49
  1384 |          |                           | 	; >>>>> printChar(kb); 
  1385 | 000009D9 | FF76FD                    | 	push	word [bp-3]
  1386 | 000009DC | E825FA                    | 	call	printChar
  1387 | 000009DF | 83C402                    | 	add	sp, 2
  1388 |          |                           | 	; >>>>> Line:	50
  1389 |          |                           | 	; >>>>> printChar(')'); 
  1390 | 000009E2 | B029                      | 	mov	al, 41
  1391 | 000009E4 | 50                        | 	push	ax
  1392 | 000009E5 | E81CFA                    | 	call	printChar
  1393 | 000009E8 | 83C402                    | 	add	sp, 2
  1394 |          |                           | 	; >>>>> Line:	51
  1395 |          |                           | 	; >>>>> printString(" IGNORED"); 
  1396 | 000009EB | B8[3D09]                  | 	mov	ax, L_myinth_11
  1397 | 000009EE | 50                        | 	push	ax
  1398 | 000009EF | E836FA                    | 	call	printString
  1399 | 000009F2 | 83C402                    | 	add	sp, 2
  1400 |          |                           | 	; >>>>> Line:	52
  1401 |          |                           | 	; >>>>> printNewLine(); 
  1402 | 000009F5 | E81EFA                    | 	call	printNewLine
  1403 |          |                           | 	; >>>>> Line:	53
  1404 |          |                           | 	; >>>>> printNewLine(); 
  1405 | 000009F8 | E81BFA                    | 	call	printNewLine
  1406 |          |                           | L_myinth_19:
  1407 | 000009FB | 89EC                      | 	mov	sp, bp
  1408 | 000009FD | 5D                        | 	pop	bp
  1409 | 000009FE | C3                        | 	ret
  1410 |          |                           | L_myinth_12:
  1411 | 000009FF | 55                        | 	push	bp
  1412 | 00000A00 | 89E5                      | 	mov	bp, sp
  1413 | 00000A02 | 83EC04                    | 	sub	sp, 4
  1414 | 00000A05 | E96DFF                    | 	jmp	L_myinth_13
  1415 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from yakc.i
  1416 |          |                           | 	CPU	8086
  1417 |          |                           | 	ALIGN	2
  1418 | 00000A08 | E9BB06                    | 	jmp	main	; Jump to program start
  1419 | 00000A0B | 90                        | 	ALIGN	2
  1420 |          |                           | L_yakc_4:
  1421 | 00000A0C | 0000                      | 	DW	0
  1422 |          |                           | L_yakc_6:
  1423 | 00000A0E | 0000                      | 	DW	0
  1424 |          |                           | L_yakc_7:
  1425 | 00000A10 | 0000                      | 	DW	0
  1426 |          |                           | 	ALIGN	2
  1427 |          |                           | getYKCtxSwCount:
  1428 |          |                           | 	; >>>>> Line:	16
  1429 |          |                           | 	; >>>>> unsigned int getYKCtxSwCount() { 
  1430 | 00000A12 | EB07                      | 	jmp	L_yakc_8
  1431 |          |                           | L_yakc_9:
  1432 |          |                           | 	; >>>>> Line:	17
  1433 |          |                           | 	; >>>>> return YKCtxSwCount; 
  1434 | 00000A14 | A1[0E0A]                  | 	mov	ax, word [L_yakc_6]
  1435 |          |                           | L_yakc_10:
  1436 | 00000A17 | 89EC                      | 	mov	sp, bp
  1437 | 00000A19 | 5D                        | 	pop	bp
  1438 | 00000A1A | C3                        | 	ret
  1439 |          |                           | L_yakc_8:
  1440 | 00000A1B | 55                        | 	push	bp
  1441 | 00000A1C | 89E5                      | 	mov	bp, sp
  1442 | 00000A1E | EBF4                      | 	jmp	L_yakc_9
  1443 |          |                           | 	ALIGN	2
  1444 |          |                           | YKInitialize:
  1445 |          |                           | 	; >>>>> Line:	20
  1446 |          |                           | 	; >>>>>  
  1447 | 00000A20 | EB27                      | 	jmp	L_yakc_12
  1448 |          |                           | L_yakc_13:
  1449 |          |                           | 	; >>>>> Line:	21
  1450 |          |                           | 	; >>>>> YKEnterMutex(); 
  1451 | 00000A22 | E82900                    | 	call	YKEnterMutex
  1452 |          |                           | 	; >>>>> Line:	24
  1453 |          |                           | 	; >>>>> initializeReadyQueue(); 
  1454 | 00000A25 | E8E601                    | 	call	initializeReadyQueue
  1455 |          |                           | 	; >>>>> Line:	25
  1456 |          |                           | 	; >>>>> initializeDelayQueue(); 
  1457 | 00000A28 | E8B703                    | 	call	initializeDelayQueue
  1458 |          |                           | 	; >>>>> Line:	26
  1459 |          |                           | 	; >>>>> taskBlock.nextFreeTCB = 0; 
  1460 | 00000A2B | C706[FE0B]0000            | 	mov	word [(56+L_yakc_1)], 0
  1461 |          |                           | 	; >>>>> Line:	28
  1462 |          |                           | 	; >>>>> YKNewTask(YKIdleTask, &idleStack[3], 100); 
  1463 | 00000A31 | B064                      | 	mov	al, 100
  1464 | 00000A33 | 50                        | 	push	ax
  1465 | 00000A34 | B8[060C]                  | 	mov	ax, (L_yakc_2+6)
  1466 | 00000A37 | 50                        | 	push	ax
  1467 | 00000A38 | B8[660A]                  | 	mov	ax, YKIdleTask
  1468 | 00000A3B | 50                        | 	push	ax
  1469 | 00000A3C | E84100                    | 	call	YKNewTask
  1470 | 00000A3F | 83C406                    | 	add	sp, 6
  1471 |          |                           | 	; >>>>> Line:	30
  1472 |          |                           | 	; >>>>> YKExitMutex(); 
  1473 | 00000A42 | E81500                    | 	call	YKExitMutex
  1474 | 00000A45 | 89EC                      | 	mov	sp, bp
  1475 | 00000A47 | 5D                        | 	pop	bp
  1476 | 00000A48 | C3                        | 	ret
  1477 |          |                           | L_yakc_12:
  1478 | 00000A49 | 55                        | 	push	bp
  1479 | 00000A4A | 89E5                      | 	mov	bp, sp
  1480 | 00000A4C | EBD4                      | 	jmp	L_yakc_13
  1481 |          |                           | 	ALIGN	2
  1482 |          |                           | YKEnterMutex:
  1483 |          |                           | 	; >>>>> Line:	33
  1484 |          |                           | 	; >>>>> void YKEnterMutex(void){ 
  1485 | 00000A4E | EB05                      | 	jmp	L_yakc_15
  1486 |          |                           | L_yakc_16:
  1487 |          |                           | 	; >>>>> Line:	34
  1488 |          |                           | 	; >>>>> asm("cli"); 
  1489 | 00000A50 | FA                        | 	cli
  1490 | 00000A51 | 89EC                      | 	mov	sp, bp
  1491 | 00000A53 | 5D                        | 	pop	bp
  1492 | 00000A54 | C3                        | 	ret
  1493 |          |                           | L_yakc_15:
  1494 | 00000A55 | 55                        | 	push	bp
  1495 | 00000A56 | 89E5                      | 	mov	bp, sp
  1496 | 00000A58 | EBF6                      | 	jmp	L_yakc_16
  1497 |          |                           | 	ALIGN	2
  1498 |          |                           | YKExitMutex:
  1499 |          |                           | 	; >>>>> Line:	37
  1500 |          |                           | 	; >>>>> void YKExitMutex(void){ 
  1501 | 00000A5A | EB05                      | 	jmp	L_yakc_18
  1502 |          |                           | L_yakc_19:
  1503 |          |                           | 	; >>>>> Line:	38
  1504 |          |                           | 	; >>>>> asm("sti"); 
  1505 | 00000A5C | FB                        | 	sti
  1506 | 00000A5D | 89EC                      | 	mov	sp, bp
  1507 | 00000A5F | 5D                        | 	pop	bp
  1508 | 00000A60 | C3                        | 	ret
  1509 |          |                           | L_yakc_18:
  1510 | 00000A61 | 55                        | 	push	bp
  1511 | 00000A62 | 89E5                      | 	mov	bp, sp
  1512 | 00000A64 | EBF6                      | 	jmp	L_yakc_19
  1513 |          |                           | 	ALIGN	2
  1514 |          |                           | YKIdleTask:
  1515 |          |                           | 	; >>>>> Line:	41
  1516 |          |                           | 	; >>>>> void YKIdleTask(void){ 
  1517 | 00000A66 | EB12                      | 	jmp	L_yakc_21
  1518 |          |                           | L_yakc_22:
  1519 |          |                           | 	; >>>>> Line:	44
  1520 |          |                           | 	; >>>>> while(1){ 
  1521 | 00000A68 | EB0A                      | 	jmp	L_yakc_24
  1522 |          |                           | L_yakc_23:
  1523 |          |                           | 	; >>>>> Line:	45
  1524 |          |                           | 	; >>>>> dummy++; 
  1525 | 00000A6A | FF46FE                    | 	inc	word [bp-2]
  1526 |          |                           | 	; >>>>> Line:	46
  1527 |          |                           | 	; >>>>> dummy--; 
  1528 | 00000A6D | FF4EFE                    | 	dec	word [bp-2]
  1529 |          |                           | 	; >>>>> Line:	47
  1530 |          |                           | 	; >>>>> YKIdleCount++; 
  1531 | 00000A70 | FF06[100A]                | 	inc	word [L_yakc_7]
  1532 |          |                           | L_yakc_24:
  1533 | 00000A74 | EBF4                      | 	jmp	L_yakc_23
  1534 |          |                           | L_yakc_25:
  1535 | 00000A76 | 89EC                      | 	mov	sp, bp
  1536 | 00000A78 | 5D                        | 	pop	bp
  1537 | 00000A79 | C3                        | 	ret
  1538 |          |                           | L_yakc_21:
  1539 | 00000A7A | 55                        | 	push	bp
  1540 | 00000A7B | 89E5                      | 	mov	bp, sp
  1541 | 00000A7D | 51                        | 	push	cx
  1542 | 00000A7E | EBE8                      | 	jmp	L_yakc_22
  1543 |          |                           | 	ALIGN	2
  1544 |          |                           | YKNewTask:
  1545 |          |                           | 	; >>>>> Line:	51
  1546 |          |                           | 	; >>>>> void YKNewTask(void (*task)(void), void *taskStack, unsigned char priority){ 
  1547 | 00000A80 | E98B00                    | 	jmp	L_yakc_27
  1548 |          |                           | L_yakc_28:
  1549 |          |                           | 	; >>>>> Line:	54
  1550 |          |                           | 	; >>>>> newTCB = getNewTCB(); 
  1551 | 00000A83 | E80801                    | 	call	getNewTCB
  1552 | 00000A86 | 8946FE                    | 	mov	word [bp-2], ax
  1553 |          |                           | 	; >>>>> Line:	55
  1554 |          |                           | 	; >>>>> if(newTCB == 0) { 
  1555 | 00000A89 | 8B46FE                    | 	mov	ax, word [bp-2]
  1556 | 00000A8C | 85C0                      | 	test	ax, ax
  1557 | 00000A8E | 750A                      | 	jne	L_yakc_29
  1558 |          |                           | 	; >>>>> Line:	56
  1559 |          |                           | 	; >>>>> exit(-1); 
  1560 | 00000A90 | B8FFFF                    | 	mov	ax, -1
  1561 | 00000A93 | 50                        | 	push	ax
  1562 | 00000A94 | E843F9                    | 	call	exit
  1563 | 00000A97 | 83C402                    | 	add	sp, 2
  1564 |          |                           | L_yakc_29:
  1565 |          |                           | 	; >>>>> Line:	60
  1566 |          |                           | 	; >>>>> TASK_ID+ 
  1567 | 00000A9A | FF06[0C0A]                | 	inc	word [L_yakc_4]
  1568 |          |                           | 	; >>>>> Line:	61
  1569 |          |                           | 	; >>>>> newTCB->tid = TASK_ID; 
  1570 | 00000A9E | 8B76FE                    | 	mov	si, word [bp-2]
  1571 | 00000AA1 | A1[0C0A]                  | 	mov	ax, word [L_yakc_4]
  1572 | 00000AA4 | 8904                      | 	mov	word [si], ax
  1573 |          |                           | 	; >>>>> Line:	62
  1574 |          |                           | 	; >>>>> newTCB->priority = priority; 
  1575 | 00000AA6 | 8B76FE                    | 	mov	si, word [bp-2]
  1576 | 00000AA9 | 83C602                    | 	add	si, 2
  1577 | 00000AAC | 8A4608                    | 	mov	al, byte [bp+8]
  1578 | 00000AAF | 8804                      | 	mov	byte [si], al
  1579 |          |                           | 	; >>>>> Line:	63
  1580 |          |                           | 	; >>>>> newTCB->stackPointer = ((void*)((int*) taskStack - 12)); 
  1581 | 00000AB1 | 8B4606                    | 	mov	ax, word [bp+6]
  1582 | 00000AB4 | 83E818                    | 	sub	ax, 24
  1583 | 00000AB7 | 8B76FE                    | 	mov	si, word [bp-2]
  1584 | 00000ABA | 83C604                    | 	add	si, 4
  1585 | 00000ABD | 8904                      | 	mov	word [si], ax
  1586 |          |                           | 	; >>>>> Line:	64
  1587 |          |                           | 	; >>>>> newTCB->state = T_READY; 
  1588 | 00000ABF | 8B76FE                    | 	mov	si, word [bp-2]
  1589 | 00000AC2 | 83C606                    | 	add	si, 6
  1590 | 00000AC5 | C7040100                  | 	mov	word [si], 1
  1591 |          |                           | 	; >>>>> Line:	65
  1592 |          |                           | 	; >>>>> newTCB->delayCount = 0; 
  1593 | 00000AC9 | 8B76FE                    | 	mov	si, word [bp-2]
  1594 | 00000ACC | 83C608                    | 	add	si, 8
  1595 | 00000ACF | C7040000                  | 	mov	word [si], 0
  1596 |          |                           | 	; >>>>> Line:	66
  1597 |          |                           | 	; >>>>> newTCB->next = 0; 
  1598 | 00000AD3 | 8B76FE                    | 	mov	si, word [bp-2]
  1599 | 00000AD6 | 83C60A                    | 	add	si, 10
  1600 | 00000AD9 | C7040000                  | 	mov	word [si], 0
  1601 |          |                           | 	; >>>>> Line:	67
  1602 |          |                           | 	; >>>>> newTCB->prev = 0; 
  1603 | 00000ADD | 8B76FE                    | 	mov	si, word [bp-2]
  1604 | 00000AE0 | 83C60C                    | 	add	si, 12
  1605 | 00000AE3 | C7040000                  | 	mov	word [si], 0
  1606 |          |                           | 	; >>>>> Line:	70
  1607 |          |                           | 	; >>>>> asm("push bx"); 
  1608 | 00000AE7 | 53                        | 	push bx
  1609 |          |                           | 	; >>>>> Line:	71
  1610 |          |                           | 	; >>>>> asm("push cx"); 
  1611 | 00000AE8 | 51                        | 	push cx
  1612 |          |                           | 	; >>>>> Line:	72
  1613 |          |                           | 	; >>>>> asm("mov bx, [bp+6]"); 
  1614 | 00000AE9 | 8B5E06                    | 	mov bx, [bp+6]
  1615 |          |                           | 	; >>>>> Line:	73
  1616 |          |                           | 	; >>>>> asm("mov cx, [bp+4]"); 
  1617 | 00000AEC | 8B4E04                    | 	mov cx, [bp+4]
  1618 |          |                           | 	; >>>>> Line:	74
  1619 |          |                           | 	; >>>>> asm("mov [bx-2], word 0x0200"); 
  1620 | 00000AEF | C747FE0002                | 	mov [bx-2], word 0x0200
  1621 |          |                           | 	; >>>>> Line:	75
  1622 |          |                           | 	; >>>>> asm("mov [bx-4], word 0x0"); 
  1623 | 00000AF4 | C747FC0000                | 	mov [bx-4], word 0x0
  1624 |          |                           | 	; >>>>> Line:	76
  1625 |          |                           | 	; >>>>> asm("mov [bx-6], cx"); 
  1626 | 00000AF9 | 894FFA                    | 	mov [bx-6], cx
  1627 |          |                           | 	; >>>>> Line:	77
  1628 |          |                           | 	; >>>>> asm("pop cx"); 
  1629 | 00000AFC | 59                        | 	pop cx
  1630 |          |                           | 	; >>>>> Line:	78
  1631 |          |                           | 	; >>>>> asm("pop bx"); 
  1632 | 00000AFD | 5B                        | 	pop bx
  1633 |          |                           | 	; >>>>> Line:	81
  1634 |          |                           | 	; >>>>> insertReadyQueue(newTCB); 
  1635 | 00000AFE | FF76FE                    | 	push	word [bp-2]
  1636 | 00000B01 | E82801                    | 	call	insertReadyQueue
  1637 | 00000B04 | 83C402                    | 	add	sp, 2
  1638 |          |                           | 	; >>>>> Line:	82
  1639 |          |                           | 	; >>>>> YKScheduler(); 
  1640 | 00000B07 | E82600                    | 	call	YKScheduler
  1641 |          |                           | L_yakc_30:
  1642 |          |                           | 	; >>>>> Line:	83
  1643 |          |                           | 	; >>>>> return; 
  1644 | 00000B0A | 89EC                      | 	mov	sp, bp
  1645 | 00000B0C | 5D                        | 	pop	bp
  1646 | 00000B0D | C3                        | 	ret
  1647 |          |                           | L_yakc_27:
  1648 | 00000B0E | 55                        | 	push	bp
  1649 | 00000B0F | 89E5                      | 	mov	bp, sp
  1650 | 00000B11 | 51                        | 	push	cx
  1651 | 00000B12 | E96EFF                    | 	jmp	L_yakc_28
  1652 | 00000B15 | 90                        | 	ALIGN	2
  1653 |          |                           | YKRun:
  1654 |          |                           | 	; >>>>> Line:	86
  1655 |          |                           | 	; >>>>> void YKRun(void){ 
  1656 | 00000B16 | EB13                      | 	jmp	L_yakc_32
  1657 |          |                           | L_yakc_33:
  1658 |          |                           | 	; >>>>> Line:	87
  1659 |          |                           | 	; >>>>> YKEnterMutex(); 
  1660 | 00000B18 | E833FF                    | 	call	YKEnterMutex
  1661 |          |                           | 	; >>>>> Line:	88
  1662 |          |                           | 	; >>>>> ask = &taskB 
  1663 | 00000B1B | C706[060C]0100            | 	mov	word [L_yakc_3], 1
  1664 |          |                           | 	; >>>>> Line:	89
  1665 |          |                           | 	; >>>>> YKScheduler(); 
  1666 | 00000B21 | E80C00                    | 	call	YKScheduler
  1667 |          |                           | 	; >>>>> Line:	90
  1668 |          |                           | 	; >>>>> YKExitMutex(); 
  1669 | 00000B24 | E833FF                    | 	call	YKExitMutex
  1670 | 00000B27 | 89EC                      | 	mov	sp, bp
  1671 | 00000B29 | 5D                        | 	pop	bp
  1672 | 00000B2A | C3                        | 	ret
  1673 |          |                           | L_yakc_32:
  1674 | 00000B2B | 55                        | 	push	bp
  1675 | 00000B2C | 89E5                      | 	mov	bp, sp
  1676 | 00000B2E | EBE8                      | 	jmp	L_yakc_33
  1677 |          |                           | 	ALIGN	2
  1678 |          |                           | YKScheduler:
  1679 |          |                           | 	; >>>>> Line:	93
  1680 |          |                           | 	; >>>>> void YKScheduler(void){ 
  1681 | 00000B30 | EB55                      | 	jmp	L_yakc_35
  1682 |          |                           | L_yakc_36:
  1683 |          |                           | 	; >>>>> Line:	96
  1684 |          |                           | 	; >>>>> YKEnterMutex(); 
  1685 | 00000B32 | E819FF                    | 	call	YKEnterMutex
  1686 |          |                           | 	; >>>>> Line:	97
  1687 |          |                           | 	; >>>>> if(kernelState == K_BLOCKED) { 
  1688 | 00000B35 | A1[060C]                  | 	mov	ax, word [L_yakc_3]
  1689 | 00000B38 | 85C0                      | 	test	ax, ax
  1690 | 00000B3A | 7502                      | 	jne	L_yakc_37
  1691 |          |                           | 	; >>>>> Line:	98
  1692 |          |                           | 	; >>>>> return; 
  1693 | 00000B3C | EB45                      | 	jmp	L_yakc_38
  1694 |          |                           | L_yakc_37:
  1695 |          |                           | 	; >>>>> Line:	100
  1696 |          |                           | 	; >>>>> newTask = peekReadyQueue(); 
  1697 | 00000B3E | E83902                    | 	call	peekReadyQueue
  1698 | 00000B41 | 8946FE                    | 	mov	word [bp-2], ax
  1699 |          |                           | 	; >>>>> Line:	101
  1700 |          |                           | 	; >>>>> if(newTask == 0) { 
  1701 | 00000B44 | 8B46FE                    | 	mov	ax, word [bp-2]
  1702 | 00000B47 | 85C0                      | 	test	ax, ax
  1703 | 00000B49 | 750A                      | 	jne	L_yakc_39
  1704 |          |                           | 	; >>>>> Line:	102
  1705 |          |                           | 	; >>>>> exit(-2); 
  1706 | 00000B4B | B8FEFF                    | 	mov	ax, -2
  1707 | 00000B4E | 50                        | 	push	ax
  1708 | 00000B4F | E888F8                    | 	call	exit
  1709 | 00000B52 | 83C402                    | 	add	sp, 2
  1710 |          |                           | L_yakc_39:
  1711 |          |                           | 	; >>>>> Line:	104
  1712 |          |                           | 	; >>>>> if(newTask != currentTask) { 
  1713 | 00000B55 | A1[080C]                  | 	mov	ax, word [L_yakc_5]
  1714 | 00000B58 | 3B46FE                    | 	cmp	ax, word [bp-2]
  1715 | 00000B5B | 7423                      | 	je	L_yakc_40
  1716 |          |                           | 	; >>>>> Line:	105
  1717 |          |                           | 	; >>>>> currentTask->state = T_READY; 
  1718 | 00000B5D | 8B36[080C]                | 	mov	si, word [L_yakc_5]
  1719 | 00000B61 | 83C606                    | 	add	si, 6
  1720 | 00000B64 | C7040100                  | 	mov	word [si], 1
  1721 |          |                           | 	; >>>>> Line:	106
  1722 |          |                           | 	; >>>>> currentTask = newTask; 
  1723 | 00000B68 | 8B46FE                    | 	mov	ax, word [bp-2]
  1724 | 00000B6B | A3[080C]                  | 	mov	word [L_yakc_5], ax
  1725 |          |                           | 	; >>>>> Line:	107
  1726 |          |                           | 	; >>>>> currentTask->state = T_RUNNING; 
  1727 | 00000B6E | 8B36[080C]                | 	mov	si, word [L_yakc_5]
  1728 | 00000B72 | 83C606                    | 	add	si, 6
  1729 | 00000B75 | C7040200                  | 	mov	word [si], 2
  1730 |          |                           | 	; >>>>> Line:	108
  1731 |          |                           | 	; >>>>> YKCtxSwCount++; 
  1732 | 00000B79 | FF06[0E0A]                | 	inc	word [L_yakc_6]
  1733 |          |                           | 	; >>>>> Line:	109
  1734 |          |                           | 	; >>>>> YKDispatcher(); 
  1735 | 00000B7D | E85AFD                    | 	call	YKDispatcher
  1736 |          |                           | L_yakc_40:
  1737 |          |                           | 	; >>>>> Line:	111
  1738 |          |                           | 	; >>>>> YKExitMutex(); 
  1739 | 00000B80 | E8D7FE                    | 	call	YKExitMutex
  1740 |          |                           | L_yakc_38:
  1741 |          |                           | 	; >>>>> Line:	112
  1742 |          |                           | 	; >>>>> return; 
  1743 | 00000B83 | 89EC                      | 	mov	sp, bp
  1744 | 00000B85 | 5D                        | 	pop	bp
  1745 | 00000B86 | C3                        | 	ret
  1746 |          |                           | L_yakc_35:
  1747 | 00000B87 | 55                        | 	push	bp
  1748 | 00000B88 | 89E5                      | 	mov	bp, sp
  1749 | 00000B8A | 51                        | 	push	cx
  1750 | 00000B8B | EBA5                      | 	jmp	L_yakc_36
  1751 | 00000B8D | 90                        | 	ALIGN	2
  1752 |          |                           | getNewTCB:
  1753 |          |                           | 	; >>>>> Line:	134
  1754 |          |                           | 	; >>>>> TCB* getNewTCB(void) { 
  1755 | 00000B8E | EB26                      | 	jmp	L_yakc_42
  1756 |          |                           | L_yakc_43:
  1757 |          |                           | 	; >>>>> Line:	136
  1758 |          |                           | 	; >>>>> if (taskBlock.nextFreeTCB < 3 + 1) { 
  1759 | 00000B90 | 833E[FE0B]04              | 	cmp	word [(56+L_yakc_1)], 4
  1760 | 00000B95 | 7319                      | 	jae	L_yakc_44
  1761 |          |                           | 	; >>>>> Line:	137
  1762 |          |                           | 	; >>>>> task = &taskB 
  1763 | 00000B97 | A1[FE0B]                  | 	mov	ax, word [(56+L_yakc_1)]
  1764 | 00000B9A | B90E00                    | 	mov	cx, 14
  1765 | 00000B9D | F7E9                      | 	imul	cx
  1766 | 00000B9F | 05[C60B]                  | 	add	ax, L_yakc_1
  1767 | 00000BA2 | 8946FE                    | 	mov	word [bp-2], ax
  1768 |          |                           | 	; >>>>> Line:	138
  1769 |          |                           | 	; >>>>> taskBlock.nextFreeTCB++; 
  1770 | 00000BA5 | FF06[FE0B]                | 	inc	word [(56+L_yakc_1)]
  1771 |          |                           | 	; >>>>> Line:	139
  1772 |          |                           | 	; >>>>> return task; 
  1773 | 00000BA9 | 8B46FE                    | 	mov	ax, word [bp-2]
  1774 | 00000BAC | EB04                      | 	jmp	L_yakc_45
  1775 | 00000BAE | EB02                      | 	jmp	L_yakc_46
  1776 |          |                           | L_yakc_44:
  1777 |          |                           | 	; >>>>> Line:	141
  1778 |          |                           | 	; >>>>> return 0; 
  1779 | 00000BB0 | 31C0                      | 	xor	ax, ax
  1780 |          |                           | L_yakc_46:
  1781 |          |                           | L_yakc_45:
  1782 | 00000BB2 | 89EC                      | 	mov	sp, bp
  1783 | 00000BB4 | 5D                        | 	pop	bp
  1784 | 00000BB5 | C3                        | 	ret
  1785 |          |                           | L_yakc_42:
  1786 | 00000BB6 | 55                        | 	push	bp
  1787 | 00000BB7 | 89E5                      | 	mov	bp, sp
  1788 | 00000BB9 | 51                        | 	push	cx
  1789 | 00000BBA | EBD4                      | 	jmp	L_yakc_43
  1790 |          |                           | 	ALIGN	2
  1791 |          |                           | readyQueue:
  1792 | 00000BBC | 00<rept>                  | 	TIMES	6 db 0
  1793 |          |                           | delayQueue:
  1794 | 00000BC2 | 00<rept>                  | 	TIMES	4 db 0
  1795 |          |                           | L_yakc_1:
  1796 | 00000BC6 | 00<rept>                  | 	TIMES	58 db 0
  1797 |          |                           | L_yakc_2:
  1798 | 00000C00 | 00<rept>                  | 	TIMES	6 db 0
  1799 |          |                           | L_yakc_3:
  1800 | 00000C06 | 00<rept>                  | 	TIMES	2 db 0
  1801 |          |                           | L_yakc_5:
  1802 | 00000C08 | 00<rept>                  | 	TIMES	2 db 0
  1803 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from ReadyQueue.i
  1804 |          |                           | 	CPU	8086
  1805 |          |                           | 	ALIGN	2
  1806 | 00000C0A | E9B904                    | 	jmp	main	; Jump to program start
  1807 | 00000C0D | 90                        | 	ALIGN	2
  1808 |          |                           | initializeReadyQueue:
  1809 |          |                           | 	; >>>>> Line:	7
  1810 |          |                           | 	; >>>>> void initializeReadyQueue() { 
  1811 | 00000C0E | EB16                      | 	jmp	L_ReadyQueue_1
  1812 |          |                           | L_ReadyQueue_2:
  1813 |          |                           | 	; >>>>> Line:	8
  1814 |          |                           | 	; >>>>> readyQueue.size = 0; 
  1815 | 00000C10 | C706[C00B]0000            | 	mov	word [(4+readyQueue)], 0
  1816 |          |                           | 	; >>>>> Line:	9
  1817 |          |                           | 	; >>>>> readyQueue.head = 
  1818 | 00000C16 | C706[BC0B]0000            | 	mov	word [readyQueue], 0
  1819 |          |                           | 	; >>>>> Line:	10
  1820 |          |                           | 	; >>>>> readyQueue.tail = 0; 
  1821 | 00000C1C | C706[BE0B]0000            | 	mov	word [(2+readyQueue)], 0
  1822 | 00000C22 | 89EC                      | 	mov	sp, bp
  1823 | 00000C24 | 5D                        | 	pop	bp
  1824 | 00000C25 | C3                        | 	ret
  1825 |          |                           | L_ReadyQueue_1:
  1826 | 00000C26 | 55                        | 	push	bp
  1827 | 00000C27 | 89E5                      | 	mov	bp, sp
  1828 | 00000C29 | EBE5                      | 	jmp	L_ReadyQueue_2
  1829 | 00000C2B | 90                        | 	ALIGN	2
  1830 |          |                           | insertReadyQueue:
  1831 |          |                           | 	; >>>>> Line:	13
  1832 |          |                           | 	; >>>>> void insertReadyQueue(TCB* tcb) { 
  1833 | 00000C2C | E94401                    | 	jmp	L_ReadyQueue_4
  1834 |          |                           | L_ReadyQueue_5:
  1835 |          |                           | 	; >>>>> Line:	17
  1836 |          |                           | 	; >>>>> if(tcb == 0) return; 
  1837 | 00000C2F | 8B4604                    | 	mov	ax, word [bp+4]
  1838 | 00000C32 | 85C0                      | 	test	ax, ax
  1839 | 00000C34 | 7503                      | 	jne	L_ReadyQueue_6
  1840 |          |                           | 	; >>>>> Line:	17
  1841 |          |                           | 	; >>>>> if(tcb == 0) return; 
  1842 | 00000C36 | E93601                    | 	jmp	L_ReadyQueue_7
  1843 |          |                           | L_ReadyQueue_6:
  1844 |          |                           | 	; >>>>> Line:	20
  1845 |          |                           | 	; >>>>> if (readyQueue.size == 0) { 
  1846 | 00000C39 | A1[C00B]                  | 	mov	ax, word [(4+readyQueue)]
  1847 | 00000C3C | 85C0                      | 	test	ax, ax
  1848 | 00000C3E | 7526                      | 	jne	L_ReadyQueue_8
  1849 |          |                           | 	; >>>>> Line:	21
  1850 |          |                           | 	; >>>>> readyQueue.head = tcb; 
  1851 | 00000C40 | 8B4604                    | 	mov	ax, word [bp+4]
  1852 | 00000C43 | A3[BC0B]                  | 	mov	word [readyQueue], ax
  1853 |          |                           | 	; >>>>> Line:	22
  1854 |          |                           | 	; >>>>> readyQueue.tail = tcb; 
  1855 | 00000C46 | A3[BE0B]                  | 	mov	word [(2+readyQueue)], ax
  1856 |          |                           | 	; >>>>> Line:	23
  1857 |          |                           | 	; >>>>> tcb->next = 0; 
  1858 | 00000C49 | 8B7604                    | 	mov	si, word [bp+4]
  1859 | 00000C4C | 83C60A                    | 	add	si, 10
  1860 | 00000C4F | C7040000                  | 	mov	word [si], 0
  1861 |          |                           | 	; >>>>> Line:	24
  1862 |          |                           | 	; >>>>> tcb->prev = 0; 
  1863 | 00000C53 | 8B7604                    | 	mov	si, word [bp+4]
  1864 | 00000C56 | 83C60C                    | 	add	si, 12
  1865 | 00000C59 | C7040000                  | 	mov	word [si], 0
  1866 |          |                           | 	; >>>>> Line:	25
  1867 |          |                           | 	; >>>>> readyQueue.size = 1; 
  1868 | 00000C5D | C706[C00B]0100            | 	mov	word [(4+readyQueue)], 1
  1869 |          |                           | 	; >>>>> Line:	26
  1870 |          |                           | 	; >>>>> return; 
  1871 | 00000C63 | E90901                    | 	jmp	L_ReadyQueue_7
  1872 |          |                           | L_ReadyQueue_8:
  1873 |          |                           | 	; >>>>> Line:	30
  1874 |          |                           | 	; >>>>> if (readyQueue.size == 1) { 
  1875 | 00000C66 | 833E[C00B]01              | 	cmp	word [(4+readyQueue)], 1
  1876 | 00000C6B | 7571                      | 	jne	L_ReadyQueue_9
  1877 |          |                           | 	; >>>>> Line:	31
  1878 |          |                           | 	; >>>>> if (readyQueue.head->priority < tcb->priority) { 
  1879 | 00000C6D | 8B36[BC0B]                | 	mov	si, word [readyQueue]
  1880 | 00000C71 | 83C602                    | 	add	si, 2
  1881 | 00000C74 | 8B7E04                    | 	mov	di, word [bp+4]
  1882 | 00000C77 | 83C702                    | 	add	di, 2
  1883 | 00000C7A | 8A05                      | 	mov	al, byte [di]
  1884 | 00000C7C | 3A04                      | 	cmp	al, byte [si]
  1885 | 00000C7E | 7630                      | 	jbe	L_ReadyQueue_10
  1886 |          |                           | 	; >>>>> Line:	32
  1887 |          |                           | 	; >>>>> readyQueue.head->next = tcb; 
  1888 | 00000C80 | 8B36[BC0B]                | 	mov	si, word [readyQueue]
  1889 | 00000C84 | 83C60A                    | 	add	si, 10
  1890 | 00000C87 | 8B4604                    | 	mov	ax, word [bp+4]
  1891 | 00000C8A | 8904                      | 	mov	word [si], ax
  1892 |          |                           | 	; >>>>> Line:	33
  1893 |          |                           | 	; >>>>> tcb->prev = readyQueue.head; 
  1894 | 00000C8C | 8B7604                    | 	mov	si, word [bp+4]
  1895 | 00000C8F | 83C60C                    | 	add	si, 12
  1896 | 00000C92 | A1[BC0B]                  | 	mov	ax, word [readyQueue]
  1897 | 00000C95 | 8904                      | 	mov	word [si], ax
  1898 |          |                           | 	; >>>>> Line:	34
  1899 |          |                           | 	; >>>>> tcb->next = 0; 
  1900 | 00000C97 | 8B7604                    | 	mov	si, word [bp+4]
  1901 | 00000C9A | 83C60A                    | 	add	si, 10
  1902 | 00000C9D | C7040000                  | 	mov	word [si], 0
  1903 |          |                           | 	; >>>>> Line:	35
  1904 |          |                           | 	; >>>>> readyQueue.tail = tcb; 
  1905 | 00000CA1 | 8B4604                    | 	mov	ax, word [bp+4]
  1906 | 00000CA4 | A3[BE0B]                  | 	mov	word [(2+readyQueue)], ax
  1907 |          |                           | 	; >>>>> Line:	36
  1908 |          |                           | 	; >>>>> readyQueue.size++; 
  1909 | 00000CA7 | FF06[C00B]                | 	inc	word [(4+readyQueue)]
  1910 |          |                           | 	; >>>>> Line:	37
  1911 |          |                           | 	; >>>>> return; 
  1912 | 00000CAB | E9C100                    | 	jmp	L_ReadyQueue_7
  1913 | 00000CAE | EB2E                      | 	jmp	L_ReadyQueue_11
  1914 |          |                           | L_ReadyQueue_10:
  1915 |          |                           | 	; >>>>> Line:	39
  1916 |          |                           | 	; >>>>> tcb->next = readyQueue.he 
  1917 | 00000CB0 | 8B7604                    | 	mov	si, word [bp+4]
  1918 | 00000CB3 | 83C60A                    | 	add	si, 10
  1919 | 00000CB6 | A1[BC0B]                  | 	mov	ax, word [readyQueue]
  1920 | 00000CB9 | 8904                      | 	mov	word [si], ax
  1921 |          |                           | 	; >>>>> Line:	40
  1922 |          |                           | 	; >>>>> tcb->prev = 0; 
  1923 | 00000CBB | 8B7604                    | 	mov	si, word [bp+4]
  1924 | 00000CBE | 83C60C                    | 	add	si, 12
  1925 | 00000CC1 | C7040000                  | 	mov	word [si], 0
  1926 |          |                           | 	; >>>>> Line:	41
  1927 |          |                           | 	; >>>>> readyQueue.tail->prev = tcb; 
  1928 | 00000CC5 | 8B36[BE0B]                | 	mov	si, word [(2+readyQueue)]
  1929 | 00000CC9 | 83C60C                    | 	add	si, 12
  1930 | 00000CCC | 8B4604                    | 	mov	ax, word [bp+4]
  1931 | 00000CCF | 8904                      | 	mov	word [si], ax
  1932 |          |                           | 	; >>>>> Line:	42
  1933 |          |                           | 	; >>>>> readyQueue.head = tcb; 
  1934 | 00000CD1 | 8B4604                    | 	mov	ax, word [bp+4]
  1935 | 00000CD4 | A3[BC0B]                  | 	mov	word [readyQueue], ax
  1936 |          |                           | 	; >>>>> Line:	43
  1937 |          |                           | 	; >>>>> readyQueue.size++; 
  1938 | 00000CD7 | FF06[C00B]                | 	inc	word [(4+readyQueue)]
  1939 |          |                           | 	; >>>>> Line:	44
  1940 |          |                           | 	; >>>>> return; 
  1941 | 00000CDB | E99100                    | 	jmp	L_ReadyQueue_7
  1942 |          |                           | L_ReadyQueue_11:
  1943 |          |                           | L_ReadyQueue_9:
  1944 |          |                           | 	; >>>>> Line:	49
  1945 |          |                           | 	; >>>>> temp = readyQueue.head; 
  1946 | 00000CDE | A1[BC0B]                  | 	mov	ax, word [readyQueue]
  1947 | 00000CE1 | 8946FE                    | 	mov	word [bp-2], ax
  1948 |          |                           | 	; >>>>> Line:	50
  1949 |          |                           | 	; >>>>> while (temp != 0) { 
  1950 | 00000CE4 | EB57                      | 	jmp	L_ReadyQueue_13
  1951 |          |                           | L_ReadyQueue_12:
  1952 |          |                           | 	; >>>>> Line:	51
  1953 |          |                           | 	; >>>>> if (temp->priority > tcb->priority) { 
  1954 | 00000CE6 | 8B76FE                    | 	mov	si, word [bp-2]
  1955 | 00000CE9 | 83C602                    | 	add	si, 2
  1956 | 00000CEC | 8B7E04                    | 	mov	di, word [bp+4]
  1957 | 00000CEF | 83C702                    | 	add	di, 2
  1958 | 00000CF2 | 8A05                      | 	mov	al, byte [di]
  1959 | 00000CF4 | 3A04                      | 	cmp	al, byte [si]
  1960 | 00000CF6 | 733A                      | 	jae	L_ReadyQueue_15
  1961 |          |                           | 	; >>>>> Line:	52
  1962 |          |                           | 	; >>>>> tcb->next = temp; 
  1963 | 00000CF8 | 8B7604                    | 	mov	si, word [bp+4]
  1964 | 00000CFB | 83C60A                    | 	add	si, 10
  1965 | 00000CFE | 8B46FE                    | 	mov	ax, word [bp-2]
  1966 | 00000D01 | 8904                      | 	mov	word [si], ax
  1967 |          |                           | 	; >>>>> Line:	53
  1968 |          |                           | 	; >>>>> tcb->prev = temp->prev; 
  1969 | 00000D03 | 8B76FE                    | 	mov	si, word [bp-2]
  1970 | 00000D06 | 83C60C                    | 	add	si, 12
  1971 | 00000D09 | 8B7E04                    | 	mov	di, word [bp+4]
  1972 | 00000D0C | 83C70C                    | 	add	di, 12
  1973 | 00000D0F | 8B04                      | 	mov	ax, word [si]
  1974 | 00000D11 | 8905                      | 	mov	word [di], ax
  1975 |          |                           | 	; >>>>> Line:	54
  1976 |          |                           | 	; >>>>> temp->prev = tcb; 
  1977 | 00000D13 | 8B76FE                    | 	mov	si, word [bp-2]
  1978 | 00000D16 | 83C60C                    | 	add	si, 12
  1979 | 00000D19 | 8B4604                    | 	mov	ax, word [bp+4]
  1980 | 00000D1C | 8904                      | 	mov	word [si], ax
  1981 |          |                           | 	; >>>>> Line:	55
  1982 |          |                           | 	; >>>>> if (temp == readyQueue.head) readyQueue.head = tcb; 
  1983 | 00000D1E | A1[BC0B]                  | 	mov	ax, word [readyQueue]
  1984 | 00000D21 | 3B46FE                    | 	cmp	ax, word [bp-2]
  1985 | 00000D24 | 7506                      | 	jne	L_ReadyQueue_16
  1986 |          |                           | 	; >>>>> Line:	55
  1987 |          |                           | 	; >>>>> if (temp == readyQueue.head) readyQueue.head = tcb; 
  1988 | 00000D26 | 8B4604                    | 	mov	ax, word [bp+4]
  1989 | 00000D29 | A3[BC0B]                  | 	mov	word [readyQueue], ax
  1990 |          |                           | L_ReadyQueue_16:
  1991 |          |                           | 	; >>>>> Line:	56
  1992 |          |                           | 	; >>>>> readyQueue.size++; 
  1993 | 00000D2C | FF06[C00B]                | 	inc	word [(4+readyQueue)]
  1994 |          |                           | 	; >>>>> Line:	57
  1995 |          |                           | 	; >>>>> return; 
  1996 | 00000D30 | EB3D                      | 	jmp	L_ReadyQueue_7
  1997 |          |                           | L_ReadyQueue_15:
  1998 |          |                           | 	; >>>>> Line:	59
  1999 |          |                           | 	; >>>>> temp = temp->next; 
  2000 | 00000D32 | 8B76FE                    | 	mov	si, word [bp-2]
  2001 | 00000D35 | 83C60A                    | 	add	si, 10
  2002 | 00000D38 | 8B04                      | 	mov	ax, word [si]
  2003 | 00000D3A | 8946FE                    | 	mov	word [bp-2], ax
  2004 |          |                           | L_ReadyQueue_13:
  2005 | 00000D3D | 8B46FE                    | 	mov	ax, word [bp-2]
  2006 | 00000D40 | 85C0                      | 	test	ax, ax
  2007 | 00000D42 | 75A2                      | 	jne	L_ReadyQueue_12
  2008 |          |                           | L_ReadyQueue_14:
  2009 |          |                           | 	; >>>>> Line:	63
  2010 |          |                           | 	; >>>>> readyQueue.tail->next = tcb; 
  2011 | 00000D44 | 8B36[BE0B]                | 	mov	si, word [(2+readyQueue)]
  2012 | 00000D48 | 83C60A                    | 	add	si, 10
  2013 | 00000D4B | 8B4604                    | 	mov	ax, word [bp+4]
  2014 | 00000D4E | 8904                      | 	mov	word [si], ax
  2015 |          |                           | 	; >>>>> Line:	64
  2016 |          |                           | 	; >>>>> tcb->prev = readyQueue.tail; 
  2017 | 00000D50 | 8B7604                    | 	mov	si, word [bp+4]
  2018 | 00000D53 | 83C60C                    | 	add	si, 12
  2019 | 00000D56 | A1[BE0B]                  | 	mov	ax, word [(2+readyQueue)]
  2020 | 00000D59 | 8904                      | 	mov	word [si], ax
  2021 |          |                           | 	; >>>>> Line:	65
  2022 |          |                           | 	; >>>>> readyQueue.tail = tcb; 
  2023 | 00000D5B | 8B4604                    | 	mov	ax, word [bp+4]
  2024 | 00000D5E | A3[BE0B]                  | 	mov	word [(2+readyQueue)], ax
  2025 |          |                           | 	; >>>>> Line:	66
  2026 |          |                           | 	; >>>>> tcb->next = 0; 
  2027 | 00000D61 | 8B7604                    | 	mov	si, word [bp+4]
  2028 | 00000D64 | 83C60A                    | 	add	si, 10
  2029 | 00000D67 | C7040000                  | 	mov	word [si], 0
  2030 |          |                           | 	; >>>>> Line:	67
  2031 |          |                           | 	; >>>>> readyQueue.size+ 
  2032 | 00000D6B | FF06[C00B]                | 	inc	word [(4+readyQueue)]
  2033 |          |                           | L_ReadyQueue_7:
  2034 |          |                           | 	; >>>>> Line:	68
  2035 |          |                           | 	; >>>>> return; 
  2036 | 00000D6F | 89EC                      | 	mov	sp, bp
  2037 | 00000D71 | 5D                        | 	pop	bp
  2038 | 00000D72 | C3                        | 	ret
  2039 |          |                           | L_ReadyQueue_4:
  2040 | 00000D73 | 55                        | 	push	bp
  2041 | 00000D74 | 89E5                      | 	mov	bp, sp
  2042 | 00000D76 | 51                        | 	push	cx
  2043 | 00000D77 | E9B5FE                    | 	jmp	L_ReadyQueue_5
  2044 |          |                           | 	ALIGN	2
  2045 |          |                           | peekReadyQueue:
  2046 |          |                           | 	; >>>>> Line:	72
  2047 |          |                           | 	; >>>>> TCB* peekReadyQueue() { 
  2048 | 00000D7A | EB14                      | 	jmp	L_ReadyQueue_18
  2049 |          |                           | L_ReadyQueue_19:
  2050 |          |                           | 	; >>>>> Line:	73
  2051 |          |                           | 	; >>>>> if (readyQueue.size == 0) { 
  2052 | 00000D7C | A1[C00B]                  | 	mov	ax, word [(4+readyQueue)]
  2053 | 00000D7F | 85C0                      | 	test	ax, ax
  2054 | 00000D81 | 7506                      | 	jne	L_ReadyQueue_20
  2055 |          |                           | 	; >>>>> Line:	74
  2056 |          |                           | 	; >>>>> return 0; 
  2057 | 00000D83 | 31C0                      | 	xor	ax, ax
  2058 | 00000D85 | EB05                      | 	jmp	L_ReadyQueue_21
  2059 | 00000D87 | EB03                      | 	jmp	L_ReadyQueue_22
  2060 |          |                           | L_ReadyQueue_20:
  2061 |          |                           | 	; >>>>> Line:	76
  2062 |          |                           | 	; >>>>> return readyQueue.head; 
  2063 | 00000D89 | A1[BC0B]                  | 	mov	ax, word [readyQueue]
  2064 |          |                           | L_ReadyQueue_22:
  2065 |          |                           | L_ReadyQueue_21:
  2066 | 00000D8C | 89EC                      | 	mov	sp, bp
  2067 | 00000D8E | 5D                        | 	pop	bp
  2068 | 00000D8F | C3                        | 	ret
  2069 |          |                           | L_ReadyQueue_18:
  2070 | 00000D90 | 55                        | 	push	bp
  2071 | 00000D91 | 89E5                      | 	mov	bp, sp
  2072 | 00000D93 | EBE7                      | 	jmp	L_ReadyQueue_19
  2073 | 00000D95 | 90                        | 	ALIGN	2
  2074 |          |                           | removeReadyQueue:
  2075 |          |                           | 	; >>>>> Line:	80
  2076 |          |                           | 	; >>>>> TCB* removeReadyQueue() { 
  2077 | 00000D96 | EB3F                      | 	jmp	L_ReadyQueue_24
  2078 |          |                           | L_ReadyQueue_25:
  2079 |          |                           | 	; >>>>> Line:	84
  2080 |          |                           | 	; >>>>> if (readyQueue.size == 0) { 
  2081 | 00000D98 | A1[C00B]                  | 	mov	ax, word [(4+readyQueue)]
  2082 | 00000D9B | 85C0                      | 	test	ax, ax
  2083 | 00000D9D | 751B                      | 	jne	L_ReadyQueue_26
  2084 |          |                           | 	; >>>>> Line:	85
  2085 |          |                           | 	; >>>>> retValue = readyQueue.head; 
  2086 | 00000D9F | A1[BC0B]                  | 	mov	ax, word [readyQueue]
  2087 | 00000DA2 | 8946FE                    | 	mov	word [bp-2], ax
  2088 |          |                           | 	; >>>>> Line:	86
  2089 |          |                           | 	; >>>>> readyQueue.size--; 
  2090 | 00000DA5 | FF0E[C00B]                | 	dec	word [(4+readyQueue)]
  2091 |          |                           | 	; >>>>> Line:	87
  2092 |          |                           | 	; >>>>> readyQueue.head = 0; 
  2093 | 00000DA9 | C706[BC0B]0000            | 	mov	word [readyQueue], 0
  2094 |          |                           | 	; >>>>> Line:	88
  2095 |          |                           | 	; >>>>> readyQueue.tail = 0; 
  2096 | 00000DAF | C706[BE0B]0000            | 	mov	word [(2+readyQueue)], 0
  2097 |          |                           | 	; >>>>> Line:	89
  2098 |          |                           | 	; >>>>> return retValue; 
  2099 | 00000DB5 | 8B46FE                    | 	mov	ax, word [bp-2]
  2100 | 00000DB8 | EB19                      | 	jmp	L_ReadyQueue_27
  2101 |          |                           | L_ReadyQueue_26:
  2102 |          |                           | 	; >>>>> Line:	92
  2103 |          |                           | 	; >>>>> retValue = readyQueue.head; 
  2104 | 00000DBA | A1[BC0B]                  | 	mov	ax, word [readyQueue]
  2105 | 00000DBD | 8946FE                    | 	mov	word [bp-2], ax
  2106 |          |                           | 	; >>>>> Line:	93
  2107 |          |                           | 	; >>>>> readyQueue.head = readyQueue.head->next; 
  2108 | 00000DC0 | 8B36[BC0B]                | 	mov	si, word [readyQueue]
  2109 | 00000DC4 | 83C60A                    | 	add	si, 10
  2110 | 00000DC7 | 8B04                      | 	mov	ax, word [si]
  2111 | 00000DC9 | A3[BC0B]                  | 	mov	word [readyQueue], ax
  2112 |          |                           | 	; >>>>> Line:	94
  2113 |          |                           | 	; >>>>> readyQueue.size--; 
  2114 | 00000DCC | FF0E[C00B]                | 	dec	word [(4+readyQueue)]
  2115 |          |                           | 	; >>>>> Line:	95
  2116 |          |                           | 	; >>>>> return retValue; 
  2117 | 00000DD0 | 8B46FE                    | 	mov	ax, word [bp-2]
  2118 |          |                           | L_ReadyQueue_27:
  2119 | 00000DD3 | 89EC                      | 	mov	sp, bp
  2120 | 00000DD5 | 5D                        | 	pop	bp
  2121 | 00000DD6 | C3                        | 	ret
  2122 |          |                           | L_ReadyQueue_24:
  2123 | 00000DD7 | 55                        | 	push	bp
  2124 | 00000DD8 | 89E5                      | 	mov	bp, sp
  2125 | 00000DDA | 51                        | 	push	cx
  2126 | 00000DDB | EBBB                      | 	jmp	L_ReadyQueue_25
  2127 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from DelayQueue.i
  2128 |          |                           | 	CPU	8086
  2129 | 00000DDD | 90                        | 	ALIGN	2
  2130 | 00000DDE | E9E502                    | 	jmp	main	; Jump to program start
  2131 | 00000DE1 | 90                        | 	ALIGN	2
  2132 |          |                           | initializeDelayQueue:
  2133 |          |                           | 	; >>>>> Line:	8
  2134 |          |                           | 	; >>>>> void initializeDelayQueue() { 
  2135 | 00000DE2 | EB10                      | 	jmp	L_DelayQueue_1
  2136 |          |                           | L_DelayQueue_2:
  2137 |          |                           | 	; >>>>> Line:	9
  2138 |          |                           | 	; >>>>> delayQueue.size = 0; 
  2139 | 00000DE4 | C706[C40B]0000            | 	mov	word [(2+delayQueue)], 0
  2140 |          |                           | 	; >>>>> Line:	10
  2141 |          |                           | 	; >>>>> delayQueue.head = 0; 
  2142 | 00000DEA | C706[C20B]0000            | 	mov	word [delayQueue], 0
  2143 | 00000DF0 | 89EC                      | 	mov	sp, bp
  2144 | 00000DF2 | 5D                        | 	pop	bp
  2145 | 00000DF3 | C3                        | 	ret
  2146 |          |                           | L_DelayQueue_1:
  2147 | 00000DF4 | 55                        | 	push	bp
  2148 | 00000DF5 | 89E5                      | 	mov	bp, sp
  2149 | 00000DF7 | EBEB                      | 	jmp	L_DelayQueue_2
  2150 | 00000DF9 | 90                        | 	ALIGN	2
  2151 |          |                           | tickClock:
  2152 |          |                           | 	; >>>>> Line:	13
  2153 |          |                           | 	; >>>>> void tickClock() { 
  2154 | 00000DFA | EB4A                      | 	jmp	L_DelayQueue_4
  2155 |          |                           | L_DelayQueue_5:
  2156 |          |                           | 	; >>>>> Line:	18
  2157 |          |                           | 	; >>>>> if (delayQueue.size == 0) return; 
  2158 | 00000DFC | A1[C40B]                  | 	mov	ax, word [(2+delayQueue)]
  2159 | 00000DFF | 85C0                      | 	test	ax, ax
  2160 | 00000E01 | 7502                      | 	jne	L_DelayQueue_6
  2161 |          |                           | 	; >>>>> Line:	18
  2162 |          |                           | 	; >>>>> if (delayQueue.size == 0) return; 
  2163 | 00000E03 | EB3D                      | 	jmp	L_DelayQueue_7
  2164 |          |                           | L_DelayQueue_6:
  2165 |          |                           | 	; >>>>> Line:	21
  2166 |          |                           | 	; >>>>> current = delayQueue.head; 
  2167 | 00000E05 | A1[C20B]                  | 	mov	ax, word [delayQueue]
  2168 | 00000E08 | 8946FE                    | 	mov	word [bp-2], ax
  2169 |          |                           | 	; >>>>> Line:	22
  2170 |          |                           | 	; >>>>> while (current != 0) { 
  2171 | 00000E0B | EB2E                      | 	jmp	L_DelayQueue_9
  2172 |          |                           | L_DelayQueue_8:
  2173 |          |                           | 	; >>>>> Line:	23
  2174 |          |                           | 	; >>>>> rent != 0) { 
  2175 | 00000E0D | 8B76FE                    | 	mov	si, word [bp-2]
  2176 | 00000E10 | 83C608                    | 	add	si, 8
  2177 | 00000E13 | FF0C                      | 	dec	word [si]
  2178 |          |                           | 	; >>>>> Line:	24
  2179 |          |                           | 	; >>>>> temp = current; 
  2180 | 00000E15 | 8B46FE                    | 	mov	ax, word [bp-2]
  2181 | 00000E18 | 8946FC                    | 	mov	word [bp-4], ax
  2182 |          |                           | 	; >>>>> Line:	25
  2183 |          |                           | 	; >>>>> if (temp->delayCount == 0) { 
  2184 | 00000E1B | 8B76FC                    | 	mov	si, word [bp-4]
  2185 | 00000E1E | 83C608                    | 	add	si, 8
  2186 | 00000E21 | 8B04                      | 	mov	ax, word [si]
  2187 | 00000E23 | 85C0                      | 	test	ax, ax
  2188 | 00000E25 | 7509                      | 	jne	L_DelayQueue_11
  2189 |          |                           | 	; >>>>> Line:	26
  2190 |          |                           | 	; >>>>> removeDelayQueue(temp); 
  2191 | 00000E27 | FF76FC                    | 	push	word [bp-4]
  2192 | 00000E2A | E83D01                    | 	call	removeDelayQueue
  2193 | 00000E2D | 83C402                    | 	add	sp, 2
  2194 |          |                           | L_DelayQueue_11:
  2195 |          |                           | 	; >>>>> Line:	28
  2196 |          |                           | 	; >>>>> current = current->next; 
  2197 | 00000E30 | 8B76FE                    | 	mov	si, word [bp-2]
  2198 | 00000E33 | 83C60A                    | 	add	si, 10
  2199 | 00000E36 | 8B04                      | 	mov	ax, word [si]
  2200 | 00000E38 | 8946FE                    | 	mov	word [bp-2], ax
  2201 |          |                           | L_DelayQueue_9:
  2202 | 00000E3B | 8B46FE                    | 	mov	ax, word [bp-2]
  2203 | 00000E3E | 85C0                      | 	test	ax, ax
  2204 | 00000E40 | 75CB                      | 	jne	L_DelayQueue_8
  2205 |          |                           | L_DelayQueue_10:
  2206 |          |                           | L_DelayQueue_7:
  2207 | 00000E42 | 89EC                      | 	mov	sp, bp
  2208 | 00000E44 | 5D                        | 	pop	bp
  2209 | 00000E45 | C3                        | 	ret
  2210 |          |                           | L_DelayQueue_4:
  2211 | 00000E46 | 55                        | 	push	bp
  2212 | 00000E47 | 89E5                      | 	mov	bp, sp
  2213 | 00000E49 | 83EC04                    | 	sub	sp, 4
  2214 | 00000E4C | EBAE                      | 	jmp	L_DelayQueue_5
  2215 |          |                           | 	ALIGN	2
  2216 |          |                           | insertDelayQueue:
  2217 |          |                           | 	; >>>>> Line:	33
  2218 |          |                           | 	; >>>>> void insertDelayQueue(TCB* tcb) { 
  2219 | 00000E4E | E91001                    | 	jmp	L_DelayQueue_13
  2220 |          |                           | L_DelayQueue_14:
  2221 |          |                           | 	; >>>>> Line:	38
  2222 |          |                           | 	; >>>>> if (tcb == 0) return; 
  2223 | 00000E51 | 8B4604                    | 	mov	ax, word [bp+4]
  2224 | 00000E54 | 85C0                      | 	test	ax, ax
  2225 | 00000E56 | 7503                      | 	jne	L_DelayQueue_15
  2226 |          |                           | 	; >>>>> Line:	38
  2227 |          |                           | 	; >>>>> if (tcb == 0) return; 
  2228 | 00000E58 | E90201                    | 	jmp	L_DelayQueue_16
  2229 |          |                           | L_DelayQueue_15:
  2230 |          |                           | 	; >>>>> Line:	41
  2231 |          |                           | 	; >>>>> if (delayQueue.size == 0) { 
  2232 | 00000E5B | A1[C40B]                  | 	mov	ax, word [(2+delayQueue)]
  2233 | 00000E5E | 85C0                      | 	test	ax, ax
  2234 | 00000E60 | 7521                      | 	jne	L_DelayQueue_17
  2235 |          |                           | 	; >>>>> Line:	42
  2236 |          |                           | 	; >>>>> delayQueue.head = tcb; 
  2237 | 00000E62 | 8B4604                    | 	mov	ax, word [bp+4]
  2238 | 00000E65 | A3[C20B]                  | 	mov	word [delayQueue], ax
  2239 |          |                           | 	; >>>>> Line:	43
  2240 |          |                           | 	; >>>>> tcb->next = 0; 
  2241 | 00000E68 | 8B7604                    | 	mov	si, word [bp+4]
  2242 | 00000E6B | 83C60A                    | 	add	si, 10
  2243 | 00000E6E | C7040000                  | 	mov	word [si], 0
  2244 |          |                           | 	; >>>>> Line:	44
  2245 |          |                           | 	; >>>>> tcb->prev = 0; 
  2246 | 00000E72 | 8B7604                    | 	mov	si, word [bp+4]
  2247 | 00000E75 | 83C60C                    | 	add	si, 12
  2248 | 00000E78 | C7040000                  | 	mov	word [si], 0
  2249 |          |                           | 	; >>>>> Line:	45
  2250 |          |                           | 	; >>>>> delayQueue.size++; 
  2251 | 00000E7C | FF06[C40B]                | 	inc	word [(2+delayQueue)]
  2252 |          |                           | 	; >>>>> Line:	46
  2253 |          |                           | 	; >>>>> return; 
  2254 | 00000E80 | E9DA00                    | 	jmp	L_DelayQueue_16
  2255 |          |                           | L_DelayQueue_17:
  2256 |          |                           | 	; >>>>> Line:	50
  2257 |          |                           | 	; >>>>> current = delayQueue.head; 
  2258 | 00000E83 | A1[C20B]                  | 	mov	ax, word [delayQueue]
  2259 | 00000E86 | 8946FE                    | 	mov	word [bp-2], ax
  2260 |          |                           | 	; >>>>> Line:	51
  2261 |          |                           | 	; >>>>> sumCount = 0; 
  2262 | 00000E89 | C746FC0000                | 	mov	word [bp-4], 0
  2263 |          |                           | 	; >>>>> Line:	52
  2264 |          |                           | 	; >>>>> while (current != 0) { 
  2265 | 00000E8E | E9C200                    | 	jmp	L_DelayQueue_19
  2266 |          |                           | L_DelayQueue_18:
  2267 |          |                           | 	; >>>>> Line:	53
  2268 |          |                           | 	; >>>>>  
  2269 | 00000E91 | 8B76FE                    | 	mov	si, word [bp-2]
  2270 | 00000E94 | 83C608                    | 	add	si, 8
  2271 | 00000E97 | 8B04                      | 	mov	ax, word [si]
  2272 | 00000E99 | 0146FC                    | 	add	word [bp-4], ax
  2273 |          |                           | 	; >>>>> Line:	54
  2274 |          |                           | 	; >>>>> if (tcb->delayCount < sumCount) { 
  2275 | 00000E9C | 8B7604                    | 	mov	si, word [bp+4]
  2276 | 00000E9F | 83C608                    | 	add	si, 8
  2277 | 00000EA2 | 8B46FC                    | 	mov	ax, word [bp-4]
  2278 | 00000EA5 | 3B04                      | 	cmp	ax, word [si]
  2279 | 00000EA7 | 765A                      | 	jbe	L_DelayQueue_21
  2280 |          |                           | 	; >>>>> Line:	55
  2281 |          |                           | 	; >>>>> tcb->prev = current->prev; 
  2282 | 00000EA9 | 8B76FE                    | 	mov	si, word [bp-2]
  2283 | 00000EAC | 83C60C                    | 	add	si, 12
  2284 | 00000EAF | 8B7E04                    | 	mov	di, word [bp+4]
  2285 | 00000EB2 | 83C70C                    | 	add	di, 12
  2286 | 00000EB5 | 8B04                      | 	mov	ax, word [si]
  2287 | 00000EB7 | 8905                      | 	mov	word [di], ax
  2288 |          |                           | 	; >>>>> Line:	56
  2289 |          |                           | 	; >>>>> tcb->next = current; 
  2290 | 00000EB9 | 8B7604                    | 	mov	si, word [bp+4]
  2291 | 00000EBC | 83C60A                    | 	add	si, 10
  2292 | 00000EBF | 8B46FE                    | 	mov	ax, word [bp-2]
  2293 | 00000EC2 | 8904                      | 	mov	word [si], ax
  2294 |          |                           | 	; >>>>> Line:	57
  2295 |          |                           | 	; >>>>> if (current == delayQueue.head) { 
  2296 | 00000EC4 | A1[C20B]                  | 	mov	ax, word [delayQueue]
  2297 | 00000EC7 | 3B46FE                    | 	cmp	ax, word [bp-2]
  2298 | 00000ECA | 7513                      | 	jne	L_DelayQueue_22
  2299 |          |                           | 	; >>>>> Line:	58
  2300 |          |                           | 	; >>>>> delayQueue.head = tcb; 
  2301 | 00000ECC | 8B4604                    | 	mov	ax, word [bp+4]
  2302 | 00000ECF | A3[C20B]                  | 	mov	word [delayQueue], ax
  2303 |          |                           | 	; >>>>> Line:	59
  2304 |          |                           | 	; >>>>> current->prev->next = tcb; 
  2305 | 00000ED2 | 8B76FE                    | 	mov	si, word [bp-2]
  2306 | 00000ED5 | 83C60C                    | 	add	si, 12
  2307 | 00000ED8 | 8B34                      | 	mov	si, word [si]
  2308 | 00000EDA | 83C60A                    | 	add	si, 10
  2309 | 00000EDD | 8904                      | 	mov	word [si], ax
  2310 |          |                           | L_DelayQueue_22:
  2311 |          |                           | 	; >>>>> Line:	61
  2312 |          |                           | 	; >>>>> current->prev = tcb; 
  2313 | 00000EDF | 8B76FE                    | 	mov	si, word [bp-2]
  2314 | 00000EE2 | 83C60C                    | 	add	si, 12
  2315 | 00000EE5 | 8B4604                    | 	mov	ax, word [bp+4]
  2316 | 00000EE8 | 8904                      | 	mov	word [si], ax
  2317 |          |                           | 	; >>>>> Line:	62
  2318 |          |                           | 	; >>>>> delayQueue.size++; 
  2319 | 00000EEA | FF06[C40B]                | 	inc	word [(2+delayQueue)]
  2320 |          |                           | 	; >>>>> Line:	63
  2321 |          |                           | 	; >>>>> tcb->delayCount = tcb->delayCount - sumCount; 
  2322 | 00000EEE | 8B7604                    | 	mov	si, word [bp+4]
  2323 | 00000EF1 | 83C608                    | 	add	si, 8
  2324 | 00000EF4 | 8B04                      | 	mov	ax, word [si]
  2325 | 00000EF6 | 2B46FC                    | 	sub	ax, word [bp-4]
  2326 | 00000EF9 | 8B7604                    | 	mov	si, word [bp+4]
  2327 | 00000EFC | 83C608                    | 	add	si, 8
  2328 | 00000EFF | 8904                      | 	mov	word [si], ax
  2329 |          |                           | 	; >>>>> Line:	64
  2330 |          |                           | 	; >>>>> return; 
  2331 | 00000F01 | EB5A                      | 	jmp	L_DelayQueue_16
  2332 |          |                           | L_DelayQueue_21:
  2333 |          |                           | 	; >>>>> Line:	66
  2334 |          |                           | 	; >>>>> if (current->next == 0) { 
  2335 | 00000F03 | 8B76FE                    | 	mov	si, word [bp-2]
  2336 | 00000F06 | 83C60A                    | 	add	si, 10
  2337 | 00000F09 | 8B04                      | 	mov	ax, word [si]
  2338 | 00000F0B | 85C0                      | 	test	ax, ax
  2339 | 00000F0D | 7539                      | 	jne	L_DelayQueue_23
  2340 |          |                           | 	; >>>>> Line:	67
  2341 |          |                           | 	; >>>>> current->next = tcb; 
  2342 | 00000F0F | 8B76FE                    | 	mov	si, word [bp-2]
  2343 | 00000F12 | 83C60A                    | 	add	si, 10
  2344 | 00000F15 | 8B4604                    | 	mov	ax, word [bp+4]
  2345 | 00000F18 | 8904                      | 	mov	word [si], ax
  2346 |          |                           | 	; >>>>> Line:	68
  2347 |          |                           | 	; >>>>> tcb->prev = current; 
  2348 | 00000F1A | 8B7604                    | 	mov	si, word [bp+4]
  2349 | 00000F1D | 83C60C                    | 	add	si, 12
  2350 | 00000F20 | 8B46FE                    | 	mov	ax, word [bp-2]
  2351 | 00000F23 | 8904                      | 	mov	word [si], ax
  2352 |          |                           | 	; >>>>> Line:	69
  2353 |          |                           | 	; >>>>> tcb->next = 0; 
  2354 | 00000F25 | 8B7604                    | 	mov	si, word [bp+4]
  2355 | 00000F28 | 83C60A                    | 	add	si, 10
  2356 | 00000F2B | C7040000                  | 	mov	word [si], 0
  2357 |          |                           | 	; >>>>> Line:	70
  2358 |          |                           | 	; >>>>> delayQueue.size++; 
  2359 | 00000F2F | FF06[C40B]                | 	inc	word [(2+delayQueue)]
  2360 |          |                           | 	; >>>>> Line:	71
  2361 |          |                           | 	; >>>>> tcb->delayCount = tcb->delayCount - sumCount; 
  2362 | 00000F33 | 8B7604                    | 	mov	si, word [bp+4]
  2363 | 00000F36 | 83C608                    | 	add	si, 8
  2364 | 00000F39 | 8B04                      | 	mov	ax, word [si]
  2365 | 00000F3B | 2B46FC                    | 	sub	ax, word [bp-4]
  2366 | 00000F3E | 8B7604                    | 	mov	si, word [bp+4]
  2367 | 00000F41 | 83C608                    | 	add	si, 8
  2368 | 00000F44 | 8904                      | 	mov	word [si], ax
  2369 |          |                           | 	; >>>>> Line:	72
  2370 |          |                           | 	; >>>>> return; 
  2371 | 00000F46 | EB15                      | 	jmp	L_DelayQueue_16
  2372 |          |                           | L_DelayQueue_23:
  2373 |          |                           | 	; >>>>> Line:	74
  2374 |          |                           | 	; >>>>> current = current->next; 
  2375 | 00000F48 | 8B76FE                    | 	mov	si, word [bp-2]
  2376 | 00000F4B | 83C60A                    | 	add	si, 10
  2377 | 00000F4E | 8B04                      | 	mov	ax, word [si]
  2378 | 00000F50 | 8946FE                    | 	mov	word [bp-2], ax
  2379 |          |                           | L_DelayQueue_19:
  2380 | 00000F53 | 8B46FE                    | 	mov	ax, word [bp-2]
  2381 | 00000F56 | 85C0                      | 	test	ax, ax
  2382 | 00000F58 | 7403E934FF                | 	jne	L_DelayQueue_18
  2383 |          |                           | L_DelayQueue_20:
  2384 |          |                           | L_DelayQueue_16:
  2385 | 00000F5D | 89EC                      | 	mov	sp, bp
  2386 | 00000F5F | 5D                        | 	pop	bp
  2387 | 00000F60 | C3                        | 	ret
  2388 |          |                           | L_DelayQueue_13:
  2389 | 00000F61 | 55                        | 	push	bp
  2390 | 00000F62 | 89E5                      | 	mov	bp, sp
  2391 | 00000F64 | 83EC04                    | 	sub	sp, 4
  2392 | 00000F67 | E9E7FE                    | 	jmp	L_DelayQueue_14
  2393 |          |                           | 	ALIGN	2
  2394 |          |                           | removeDelayQueue:
  2395 |          |                           | 	; >>>>> Line:	79
  2396 |          |                           | 	; >>>>> void removeDelayQueue(TCB* tcb) { 
  2397 | 00000F6A | E92601                    | 	jmp	L_DelayQueue_25
  2398 |          |                           | L_DelayQueue_26:
  2399 |          |                           | 	; >>>>> Line:	84
  2400 |          |                           | 	; >>>>> if (tcb == 0) return; 
  2401 | 00000F6D | 8B4604                    | 	mov	ax, word [bp+4]
  2402 | 00000F70 | 85C0                      | 	test	ax, ax
  2403 | 00000F72 | 7503                      | 	jne	L_DelayQueue_27
  2404 |          |                           | 	; >>>>> Line:	84
  2405 |          |                           | 	; >>>>> if (tcb == 0) return; 
  2406 | 00000F74 | E91801                    | 	jmp	L_DelayQueue_28
  2407 |          |                           | L_DelayQueue_27:
  2408 |          |                           | 	; >>>>> Line:	86
  2409 |          |                           | 	; >>>>> current = delayQueue.head; 
  2410 | 00000F77 | A1[C20B]                  | 	mov	ax, word [delayQueue]
  2411 | 00000F7A | 8946FE                    | 	mov	word [bp-2], ax
  2412 |          |                           | 	; >>>>> Line:	87
  2413 |          |                           | 	; >>>>> while (current != 0) { 
  2414 | 00000F7D | E90501                    | 	jmp	L_DelayQueue_30
  2415 |          |                           | L_DelayQueue_29:
  2416 |          |                           | 	; >>>>> Line:	88
  2417 |          |                           | 	; >>>>> if (current->priority = tcb->priority) { 
  2418 | 00000F80 | 8B7604                    | 	mov	si, word [bp+4]
  2419 | 00000F83 | 83C602                    | 	add	si, 2
  2420 | 00000F86 | 8B7EFE                    | 	mov	di, word [bp-2]
  2421 | 00000F89 | 83C702                    | 	add	di, 2
  2422 | 00000F8C | 8B04                      | 	mov	ax, word [si]
  2423 | 00000F8E | 8905                      | 	mov	word [di], ax
  2424 | 00000F90 | 84C0                      | 	test	al, al
  2425 | 00000F92 | 7503E9EE00                | 	je	L_DelayQueue_32
  2426 |          |                           | 	; >>>>> Line:	89
  2427 |          |                           | 	; >>>>> if (current == delayQueue.head) { 
  2428 | 00000F97 | A1[C20B]                  | 	mov	ax, word [delayQueue]
  2429 | 00000F9A | 3B46FE                    | 	cmp	ax, word [bp-2]
  2430 | 00000F9D | 754F                      | 	jne	L_DelayQueue_33
  2431 |          |                           | 	; >>>>> Line:	90
  2432 |          |                           | 	; >>>>> temp = current; 
  2433 | 00000F9F | 8B46FE                    | 	mov	ax, word [bp-2]
  2434 | 00000FA2 | 8946FC                    | 	mov	word [bp-4], ax
  2435 |          |                           | 	; >>>>> Line:	91
  2436 |          |                           | 	; >>>>> { 
  2437 | 00000FA5 | 8B76FE                    | 	mov	si, word [bp-2]
  2438 | 00000FA8 | 83C60A                    | 	add	si, 10
  2439 | 00000FAB | 8B04                      | 	mov	ax, word [si]
  2440 | 00000FAD | 8946FE                    | 	mov	word [bp-2], ax
  2441 |          |                           | 	; >>>>> Line:	92
  2442 |          |                           | 	; >>>>> delayQueue.head = temp->next; 
  2443 | 00000FB0 | 8B76FC                    | 	mov	si, word [bp-4]
  2444 | 00000FB3 | 83C60A                    | 	add	si, 10
  2445 | 00000FB6 | 8B04                      | 	mov	ax, word [si]
  2446 | 00000FB8 | A3[C20B]                  | 	mov	word [delayQueue], ax
  2447 |          |                           | 	; >>>>> Line:	93
  2448 |          |                           | 	; >>>>> temp->next->prev = 0; 
  2449 | 00000FBB | 8B76FC                    | 	mov	si, word [bp-4]
  2450 | 00000FBE | 83C60A                    | 	add	si, 10
  2451 | 00000FC1 | 8B34                      | 	mov	si, word [si]
  2452 | 00000FC3 | 83C60C                    | 	add	si, 12
  2453 | 00000FC6 | C7040000                  | 	mov	word [si], 0
  2454 |          |                           | 	; >>>>> Line:	94
  2455 |          |                           | 	; >>>>> delayQueue.size--; 
  2456 | 00000FCA | FF0E[C40B]                | 	dec	word [(2+delayQueue)]
  2457 |          |                           | 	; >>>>> Line:	95
  2458 |          |                           | 	; >>>>> temp->next = 0; 
  2459 | 00000FCE | 8B76FC                    | 	mov	si, word [bp-4]
  2460 | 00000FD1 | 83C60A                    | 	add	si, 10
  2461 | 00000FD4 | C7040000                  | 	mov	word [si], 0
  2462 |          |                           | 	; >>>>> Line:	96
  2463 |          |                           | 	; >>>>> temp->prev = 0; 
  2464 | 00000FD8 | 8B76FC                    | 	mov	si, word [bp-4]
  2465 | 00000FDB | 83C60C                    | 	add	si, 12
  2466 | 00000FDE | C7040000                  | 	mov	word [si], 0
  2467 |          |                           | 	; >>>>> Line:	97
  2468 |          |                           | 	; >>>>> insertReadyQueue(temp); 
  2469 | 00000FE2 | FF76FC                    | 	push	word [bp-4]
  2470 | 00000FE5 | E844FC                    | 	call	insertReadyQueue
  2471 | 00000FE8 | 83C402                    | 	add	sp, 2
  2472 | 00000FEB | E99700                    | 	jmp	L_DelayQueue_34
  2473 |          |                           | L_DelayQueue_33:
  2474 |          |                           | 	; >>>>> Line:	98
  2475 |          |                           | 	; >>>>> } else if (current->next == 0) { 
  2476 | 00000FEE | 8B76FE                    | 	mov	si, word [bp-2]
  2477 | 00000FF1 | 83C60A                    | 	add	si, 10
  2478 | 00000FF4 | 8B04                      | 	mov	ax, word [si]
  2479 | 00000FF6 | 85C0                      | 	test	ax, ax
  2480 | 00000FF8 | 752F                      | 	jne	L_DelayQueue_35
  2481 |          |                           | 	; >>>>> Line:	99
  2482 |          |                           | 	; >>>>> temp = current; 
  2483 | 00000FFA | 8B46FE                    | 	mov	ax, word [bp-2]
  2484 | 00000FFD | 8946FC                    | 	mov	word [bp-4], ax
  2485 |          |                           | 	; >>>>> Line:	100
  2486 |          |                           | 	; >>>>> current = current->next; 
  2487 | 00001000 | 8B76FE                    | 	mov	si, word [bp-2]
  2488 | 00001003 | 83C60A                    | 	add	si, 10
  2489 | 00001006 | 8B04                      | 	mov	ax, word [si]
  2490 | 00001008 | 8946FE                    | 	mov	word [bp-2], ax
  2491 |          |                           | 	; >>>>> Line:	101
  2492 |          |                           | 	; >>>>> temp->prev->next = 0; 
  2493 | 0000100B | 8B76FC                    | 	mov	si, word [bp-4]
  2494 | 0000100E | 83C60C                    | 	add	si, 12
  2495 | 00001011 | 8B34                      | 	mov	si, word [si]
  2496 | 00001013 | 83C60A                    | 	add	si, 10
  2497 | 00001016 | C7040000                  | 	mov	word [si], 0
  2498 |          |                           | 	; >>>>> Line:	102
  2499 |          |                           | 	; >>>>> delayQueue.size--; 
  2500 | 0000101A | FF0E[C40B]                | 	dec	word [(2+delayQueue)]
  2501 |          |                           | 	; >>>>> Line:	103
  2502 |          |                           | 	; >>>>> insertReadyQueue(temp); 
  2503 | 0000101E | FF76FC                    | 	push	word [bp-4]
  2504 | 00001021 | E808FC                    | 	call	insertReadyQueue
  2505 | 00001024 | 83C402                    | 	add	sp, 2
  2506 | 00001027 | EB5C                      | 	jmp	L_DelayQueue_36
  2507 |          |                           | L_DelayQueue_35:
  2508 |          |                           | 	; >>>>> Line:	105
  2509 |          |                           | 	; >>>>>  
  2510 | 00001029 | 8B46FE                    | 	mov	ax, word [bp-2]
  2511 | 0000102C | 8946FC                    | 	mov	word [bp-4], ax
  2512 |          |                           | 	; >>>>> Line:	106
  2513 |          |                           | 	; >>>>> current = current->next; 
  2514 | 0000102F | 8B76FE                    | 	mov	si, word [bp-2]
  2515 | 00001032 | 83C60A                    | 	add	si, 10
  2516 | 00001035 | 8B04                      | 	mov	ax, word [si]
  2517 | 00001037 | 8946FE                    | 	mov	word [bp-2], ax
  2518 |          |                           | 	; >>>>> Line:	107
  2519 |          |                           | 	; >>>>> temp->prev->next = temp->next; 
  2520 | 0000103A | 8B76FC                    | 	mov	si, word [bp-4]
  2521 | 0000103D | 83C60A                    | 	add	si, 10
  2522 | 00001040 | 8B7EFC                    | 	mov	di, word [bp-4]
  2523 | 00001043 | 83C70C                    | 	add	di, 12
  2524 | 00001046 | 8B3D                      | 	mov	di, word [di]
  2525 | 00001048 | 83C70A                    | 	add	di, 10
  2526 | 0000104B | 8B04                      | 	mov	ax, word [si]
  2527 | 0000104D | 8905                      | 	mov	word [di], ax
  2528 |          |                           | 	; >>>>> Line:	108
  2529 |          |                           | 	; >>>>> temp->next->prev = temp->prev; 
  2530 | 0000104F | 8B76FC                    | 	mov	si, word [bp-4]
  2531 | 00001052 | 83C60C                    | 	add	si, 12
  2532 | 00001055 | 8B7EFC                    | 	mov	di, word [bp-4]
  2533 | 00001058 | 83C70A                    | 	add	di, 10
  2534 | 0000105B | 8B3D                      | 	mov	di, word [di]
  2535 | 0000105D | 83C70C                    | 	add	di, 12
  2536 | 00001060 | 8B04                      | 	mov	ax, word [si]
  2537 | 00001062 | 8905                      | 	mov	word [di], ax
  2538 |          |                           | 	; >>>>> Line:	109
  2539 |          |                           | 	; >>>>> temp->next = 0; 
  2540 | 00001064 | 8B76FC                    | 	mov	si, word [bp-4]
  2541 | 00001067 | 83C60A                    | 	add	si, 10
  2542 | 0000106A | C7040000                  | 	mov	word [si], 0
  2543 |          |                           | 	; >>>>> Line:	110
  2544 |          |                           | 	; >>>>> temp->prev = 0; 
  2545 | 0000106E | 8B76FC                    | 	mov	si, word [bp-4]
  2546 | 00001071 | 83C60C                    | 	add	si, 12
  2547 | 00001074 | C7040000                  | 	mov	word [si], 0
  2548 |          |                           | 	; >>>>> Line:	111
  2549 |          |                           | 	; >>>>> delayQueue.size--; 
  2550 | 00001078 | FF0E[C40B]                | 	dec	word [(2+delayQueue)]
  2551 |          |                           | 	; >>>>> Line:	112
  2552 |          |                           | 	; >>>>> insertReadyQueue(temp); 
  2553 | 0000107C | FF76FC                    | 	push	word [bp-4]
  2554 | 0000107F | E8AAFB                    | 	call	insertReadyQueue
  2555 | 00001082 | 83C402                    | 	add	sp, 2
  2556 |          |                           | L_DelayQueue_36:
  2557 |          |                           | L_DelayQueue_34:
  2558 |          |                           | L_DelayQueue_32:
  2559 |          |                           | L_DelayQueue_30:
  2560 | 00001085 | 8B46FE                    | 	mov	ax, word [bp-2]
  2561 | 00001088 | 85C0                      | 	test	ax, ax
  2562 | 0000108A | 7403E9F1FE                | 	jne	L_DelayQueue_29
  2563 |          |                           | L_DelayQueue_31:
  2564 |          |                           | L_DelayQueue_28:
  2565 | 0000108F | 89EC                      | 	mov	sp, bp
  2566 | 00001091 | 5D                        | 	pop	bp
  2567 | 00001092 | C3                        | 	ret
  2568 |          |                           | L_DelayQueue_25:
  2569 | 00001093 | 55                        | 	push	bp
  2570 | 00001094 | 89E5                      | 	mov	bp, sp
  2571 | 00001096 | 83EC04                    | 	sub	sp, 4
  2572 | 00001099 | E9D1FE                    | 	jmp	L_DelayQueue_26
  2573 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from lab4b_app.i
  2574 |          |                           | 	CPU	8086
  2575 |          |                           | 	ALIGN	2
  2576 | 0000109C | EB28                      | 	jmp	main	; Jump to program start
  2577 |          |                           | L_lab4b_app_2:
  2578 | 0000109E | 5374617274696E6720-       | 	DB	"Starting kernel...",0xA,0
  2579 | 000010A7 | 6B65726E656C2E2E2E-       | ...
  2580 | 000010B0 | 0A00                      | ...
  2581 |          |                           | L_lab4b_app_1:
  2582 | 000010B2 | 4372656174696E6720-       | 	DB	"Creating task A...",0xA,0
  2583 | 000010BB | 7461736B20412E2E2E-       | ...
  2584 | 000010C4 | 0A00                      | ...
  2585 |          |                           | 	ALIGN	2
  2586 |          |                           | main:
  2587 |          |                           | 	; >>>>> Line:	23
  2588 |          |                           | 	; >>>>> { 
  2589 | 000010C6 | EB2F                      | 	jmp	L_lab4b_app_3
  2590 |          |                           | L_lab4b_app_4:
  2591 |          |                           | 	; >>>>> Line:	24
  2592 |          |                           | 	; >>>>> YKInitialize(); 
  2593 | 000010C8 | E855F9                    | 	call	YKInitialize
  2594 |          |                           | 	; >>>>> Line:	26
  2595 |          |                           | 	; >>>>> printString("Creating task A...\n"); 
  2596 | 000010CB | B8[B210]                  | 	mov	ax, L_lab4b_app_1
  2597 | 000010CE | 50                        | 	push	ax
  2598 | 000010CF | E856F3                    | 	call	printString
  2599 | 000010D2 | 83C402                    | 	add	sp, 2
  2600 |          |                           | 	; >>>>> Line:	27
  2601 |          |                           | 	; >>>>> YKNewTask(ATask, (void *)&AStk[256], 5); 
  2602 | 000010D5 | B005                      | 	mov	al, 5
  2603 | 000010D7 | 50                        | 	push	ax
  2604 | 000010D8 | B8[CA14]                  | 	mov	ax, (AStk+512)
  2605 | 000010DB | 50                        | 	push	ax
  2606 | 000010DC | B8[8011]                  | 	mov	ax, ATask
  2607 | 000010DF | 50                        | 	push	ax
  2608 | 000010E0 | E89DF9                    | 	call	YKNewTask
  2609 | 000010E3 | 83C406                    | 	add	sp, 6
  2610 |          |                           | 	; >>>>> Line:	29
  2611 |          |                           | 	; >>>>> printString("Starting kernel...\n"); 
  2612 | 000010E6 | B8[9E10]                  | 	mov	ax, L_lab4b_app_2
  2613 | 000010E9 | 50                        | 	push	ax
  2614 | 000010EA | E83BF3                    | 	call	printString
  2615 | 000010ED | 83C402                    | 	add	sp, 2
  2616 |          |                           | 	; >>>>> Line:	30
  2617 |          |                           | 	; >>>>> YKRun(); 
  2618 | 000010F0 | E823FA                    | 	call	YKRun
  2619 | 000010F3 | 89EC                      | 	mov	sp, bp
  2620 | 000010F5 | 5D                        | 	pop	bp
  2621 | 000010F6 | C3                        | 	ret
  2622 |          |                           | L_lab4b_app_3:
  2623 | 000010F7 | 55                        | 	push	bp
  2624 | 000010F8 | 89E5                      | 	mov	bp, sp
  2625 | 000010FA | EBCC                      | 	jmp	L_lab4b_app_4
  2626 |          |                           | L_lab4b_app_9:
  2627 | 000010FC | 5461736B2041206973-       | 	DB	"Task A is still running! Oh no! Task A was supposed to stop.",0xA,0
  2628 | 00001105 | 207374696C6C207275-       | ...
  2629 | 0000110E | 6E6E696E6721204F68-       | ...
  2630 | 00001117 | 206E6F21205461736B-       | ...
  2631 | 00001120 | 204120776173207375-       | ...
  2632 | 00001129 | 70706F73656420746F-       | ...
  2633 | 00001132 | 2073746F702E0A00          | ...
  2634 |          |                           | L_lab4b_app_8:
  2635 | 0000113A | 4372656174696E6720-       | 	DB	"Creating task C...",0xA,0
  2636 | 00001143 | 7461736B20432E2E2E-       | ...
  2637 | 0000114C | 0A00                      | ...
  2638 |          |                           | L_lab4b_app_7:
  2639 | 0000114E | 4372656174696E6720-       | 	DB	"Creating low priority task B...",0xA,0
  2640 | 00001157 | 6C6F77207072696F72-       | ...
  2641 | 00001160 | 697479207461736B20-       | ...
  2642 | 00001169 | 422E2E2E0A00              | ...
  2643 |          |                           | L_lab4b_app_6:
  2644 | 0000116F | 5461736B2041207374-       | 	DB	"Task A started!",0xA,0
  2645 | 00001178 | 6172746564210A00          | ...
  2646 |          |                           | 	ALIGN	2
  2647 |          |                           | ATask:
  2648 |          |                           | 	; >>>>> Line:	34
  2649 |          |                           | 	; >>>>> { 
  2650 | 00001180 | EB57                      | 	jmp	L_lab4b_app_10
  2651 |          |                           | L_lab4b_app_11:
  2652 |          |                           | 	; >>>>> Line:	35
  2653 |          |                           | 	; >>>>> printString("Task A started!\n") 
  2654 | 00001182 | B8[6F11]                  | 	mov	ax, L_lab4b_app_6
  2655 | 00001185 | 50                        | 	push	ax
  2656 | 00001186 | E89FF2                    | 	call	printString
  2657 | 00001189 | 83C402                    | 	add	sp, 2
  2658 |          |                           | 	; >>>>> Line:	37
  2659 |          |                           | 	; >>>>> printString("Creating low priority task B...\n"); 
  2660 | 0000118C | B8[4E11]                  | 	mov	ax, L_lab4b_app_7
  2661 | 0000118F | 50                        | 	push	ax
  2662 | 00001190 | E895F2                    | 	call	printString
  2663 | 00001193 | 83C402                    | 	add	sp, 2
  2664 |          |                           | 	; >>>>> Line:	38
  2665 |          |                           | 	; >>>>> YKNewTask(BTask, (void *)&BStk[256], 7); 
  2666 | 00001196 | B007                      | 	mov	al, 7
  2667 | 00001198 | 50                        | 	push	ax
  2668 | 00001199 | B8[CA16]                  | 	mov	ax, (BStk+512)
  2669 | 0000119C | 50                        | 	push	ax
  2670 | 0000119D | B8[1612]                  | 	mov	ax, BTask
  2671 | 000011A0 | 50                        | 	push	ax
  2672 | 000011A1 | E8DCF8                    | 	call	YKNewTask
  2673 | 000011A4 | 83C406                    | 	add	sp, 6
  2674 |          |                           | 	; >>>>> Line:	40
  2675 |          |                           | 	; >>>>> printString("Creating task C...\n"); 
  2676 | 000011A7 | B8[3A11]                  | 	mov	ax, L_lab4b_app_8
  2677 | 000011AA | 50                        | 	push	ax
  2678 | 000011AB | E87AF2                    | 	call	printString
  2679 | 000011AE | 83C402                    | 	add	sp, 2
  2680 |          |                           | 	; >>>>> Line:	41
  2681 |          |                           | 	; >>>>> YKNewTask(CTask, (void *)&CStk[256], 2); 
  2682 | 000011B1 | B002                      | 	mov	al, 2
  2683 | 000011B3 | 50                        | 	push	ax
  2684 | 000011B4 | B8[CA18]                  | 	mov	ax, (CStk+512)
  2685 | 000011B7 | 50                        | 	push	ax
  2686 | 000011B8 | B8[7412]                  | 	mov	ax, CTask
  2687 | 000011BB | 50                        | 	push	ax
  2688 | 000011BC | E8C1F8                    | 	call	YKNewTask
  2689 | 000011BF | 83C406                    | 	add	sp, 6
  2690 |          |                           | 	; >>>>> Line:	43
  2691 |          |                           | 	; >>>>> printString("Task A is still running! Oh no! Task A was supposed to stop.\n"); 
  2692 | 000011C2 | B8[FC10]                  | 	mov	ax, L_lab4b_app_9
  2693 | 000011C5 | 50                        | 	push	ax
  2694 | 000011C6 | E85FF2                    | 	call	printString
  2695 | 000011C9 | 83C402                    | 	add	sp, 2
  2696 |          |                           | 	; >>>>> Line:	44
  2697 |          |                           | 	; >>>>> exit(0); 
  2698 | 000011CC | 30C0                      | 	xor	al, al
  2699 | 000011CE | 50                        | 	push	ax
  2700 | 000011CF | E808F2                    | 	call	exit
  2701 | 000011D2 | 83C402                    | 	add	sp, 2
  2702 | 000011D5 | 89EC                      | 	mov	sp, bp
  2703 | 000011D7 | 5D                        | 	pop	bp
  2704 | 000011D8 | C3                        | 	ret
  2705 |          |                           | L_lab4b_app_10:
  2706 | 000011D9 | 55                        | 	push	bp
  2707 | 000011DA | 89E5                      | 	mov	bp, sp
  2708 | 000011DC | EBA4                      | 	jmp	L_lab4b_app_11
  2709 |          |                           | L_lab4b_app_13:
  2710 | 000011DE | 5461736B2042207374-       | 	DB	"Task B started! Oh no! Task B wasn't supposed to run.",0xA,0
  2711 | 000011E7 | 617274656421204F68-       | ...
  2712 | 000011F0 | 206E6F21205461736B-       | ...
  2713 | 000011F9 | 2042207761736E2774-       | ...
  2714 | 00001202 | 20737570706F736564-       | ...
  2715 | 0000120B | 20746F2072756E2E0A-       | ...
  2716 | 00001214 | 00                        | ...
  2717 | 00001215 | 90                        | 	ALIGN	2
  2718 |          |                           | BTask:
  2719 |          |                           | 	; >>>>> Line:	48
  2720 |          |                           | 	; >>>>> { 
  2721 | 00001216 | EB17                      | 	jmp	L_lab4b_app_14
  2722 |          |                           | L_lab4b_app_15:
  2723 |          |                           | 	; >>>>> Line:	49
  2724 |          |                           | 	; >>>>> printString("Task B started! Oh no! Task B wasn't supposed to run.\n"); 
  2725 | 00001218 | B8[DE11]                  | 	mov	ax, L_lab4b_app_13
  2726 | 0000121B | 50                        | 	push	ax
  2727 | 0000121C | E809F2                    | 	call	printString
  2728 | 0000121F | 83C402                    | 	add	sp, 2
  2729 |          |                           | 	; >>>>> Line:	50
  2730 |          |                           | 	; >>>>> exit(0); 
  2731 | 00001222 | 30C0                      | 	xor	al, al
  2732 | 00001224 | 50                        | 	push	ax
  2733 | 00001225 | E8B2F1                    | 	call	exit
  2734 | 00001228 | 83C402                    | 	add	sp, 2
  2735 | 0000122B | 89EC                      | 	mov	sp, bp
  2736 | 0000122D | 5D                        | 	pop	bp
  2737 | 0000122E | C3                        | 	ret
  2738 |          |                           | L_lab4b_app_14:
  2739 | 0000122F | 55                        | 	push	bp
  2740 | 00001230 | 89E5                      | 	mov	bp, sp
  2741 | 00001232 | EBE4                      | 	jmp	L_lab4b_app_15
  2742 |          |                           | L_lab4b_app_19:
  2743 | 00001234 | 457865637574696E67-       | 	DB	"Executing in task C.",0xA,0
  2744 | 0000123D | 20696E207461736B20-       | ...
  2745 | 00001246 | 432E0A00                  | ...
  2746 |          |                           | L_lab4b_app_18:
  2747 | 0000124A | 20636F6E7465787420-       | 	DB	" context switches!",0xA,0
  2748 | 00001253 | 737769746368657321-       | ...
  2749 | 0000125C | 0A00                      | ...
  2750 |          |                           | L_lab4b_app_17:
  2751 | 0000125E | 5461736B2043207374-       | 	DB	"Task C started after ",0
  2752 | 00001267 | 617274656420616674-       | ...
  2753 | 00001270 | 65722000                  | ...
  2754 |          |                           | 	ALIGN	2
  2755 |          |                           | CTask:
  2756 |          |                           | 	; >>>>> Line:	54
  2757 |          |                           | 	; >>>>> { 
  2758 | 00001274 | EB4C                      | 	jmp	L_lab4b_app_20
  2759 |          |                           | L_lab4b_app_21:
  2760 |          |                           | 	; >>>>> Line:	58
  2761 |          |                           | 	; >>>>> YKEnterMutex(); 
  2762 | 00001276 | E8D5F7                    | 	call	YKEnterMutex
  2763 |          |                           | 	; >>>>> Line:	59
  2764 |          |                           | 	; >>>>> numCtxSwitches = getYKCt 
  2765 | 00001279 | E896F7                    | 	call	getYKCtxSwCount
  2766 | 0000127C | 8946FC                    | 	mov	word [bp-4], ax
  2767 |          |                           | 	; >>>>> Line:	60
  2768 |          |                           | 	; >>>>> YKExitMutex(); 
  2769 | 0000127F | E8D8F7                    | 	call	YKExitMutex
  2770 |          |                           | 	; >>>>> Line:	62
  2771 |          |                           | 	; >>>>> printString("Task C started after "); 
  2772 | 00001282 | B8[5E12]                  | 	mov	ax, L_lab4b_app_17
  2773 | 00001285 | 50                        | 	push	ax
  2774 | 00001286 | E89FF1                    | 	call	printString
  2775 | 00001289 | 83C402                    | 	add	sp, 2
  2776 |          |                           | 	; >>>>> Line:	63
  2777 |          |                           | 	; >>>>> printUInt(numCtxSwitches); 
  2778 | 0000128C | FF76FC                    | 	push	word [bp-4]
  2779 | 0000128F | E83AF3                    | 	call	printUInt
  2780 | 00001292 | 83C402                    | 	add	sp, 2
  2781 |          |                           | 	; >>>>> Line:	64
  2782 |          |                           | 	; >>>>> printString(" context switches!\n"); 
  2783 | 00001295 | B8[4A12]                  | 	mov	ax, L_lab4b_app_18
  2784 | 00001298 | 50                        | 	push	ax
  2785 | 00001299 | E88CF1                    | 	call	printString
  2786 | 0000129C | 83C402                    | 	add	sp, 2
  2787 |          |                           | 	; >>>>> Line:	66
  2788 |          |                           | 	; >>>>> while (1) 
  2789 | 0000129F | EB1B                      | 	jmp	L_lab4b_app_23
  2790 |          |                           | L_lab4b_app_22:
  2791 |          |                           | 	; >>>>> Line:	68
  2792 |          |                           | 	; >>>>> printString("Executing in task C.\n"); 
  2793 | 000012A1 | B8[3412]                  | 	mov	ax, L_lab4b_app_19
  2794 | 000012A4 | 50                        | 	push	ax
  2795 | 000012A5 | E880F1                    | 	call	printString
  2796 | 000012A8 | 83C402                    | 	add	sp, 2
  2797 |          |                           | 	; >>>>> Line:	69
  2798 |          |                           | 	; >>>>> for(count = 0; count < 5000; count++); 
  2799 | 000012AB | C746FE0000                | 	mov	word [bp-2], 0
  2800 | 000012B0 | EB03                      | 	jmp	L_lab4b_app_26
  2801 |          |                           | L_lab4b_app_25:
  2802 |          |                           | L_lab4b_app_28:
  2803 | 000012B2 | FF46FE                    | 	inc	word [bp-2]
  2804 |          |                           | L_lab4b_app_26:
  2805 | 000012B5 | 817EFE8813                | 	cmp	word [bp-2], 5000
  2806 | 000012BA | 7CF6                      | 	jl	L_lab4b_app_25
  2807 |          |                           | L_lab4b_app_27:
  2808 |          |                           | L_lab4b_app_23:
  2809 | 000012BC | EBE3                      | 	jmp	L_lab4b_app_22
  2810 |          |                           | L_lab4b_app_24:
  2811 | 000012BE | 89EC                      | 	mov	sp, bp
  2812 | 000012C0 | 5D                        | 	pop	bp
  2813 | 000012C1 | C3                        | 	ret
  2814 |          |                           | L_lab4b_app_20:
  2815 | 000012C2 | 55                        | 	push	bp
  2816 | 000012C3 | 89E5                      | 	mov	bp, sp
  2817 | 000012C5 | 83EC04                    | 	sub	sp, 4
  2818 | 000012C8 | EBAC                      | 	jmp	L_lab4b_app_21
  2819 |          |                           | 	ALIGN	2
  2820 |          |                           | AStk:
  2821 | 000012CA | 00<rept>                  | 	TIMES	512 db 0
  2822 |          |                           | BStk:
  2823 | 000014CA | 00<rept>                  | 	TIMES	512 db 0
  2824 |          |                           | CStk:
  2825 | 000016CA | 00<rept>                  | 	TIMES	512 db 0
